<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.connect.quant.dao.mapper.StockQuoteMapper">
  <resultMap id="BaseResultMap" type="com.connect.quant.model.StockQuote">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Aug 03 13:21:02 CST 2018.
    -->
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="NAME" jdbcType="VARCHAR" property="name" />
    <result column="OPENINGPRICE" jdbcType="DOUBLE" property="openingprice" />
    <result column="CLOSINGPRICE" jdbcType="DOUBLE" property="closingprice" />
    <result column="CURRENTPRICE" jdbcType="DOUBLE" property="currentprice" />
    <result column="HIGHESTPRICE" jdbcType="DOUBLE" property="highestprice" />
    <result column="LOWESTPRICE" jdbcType="DOUBLE" property="lowestprice" />
    <result column="COMPETITIVEBUYPRICE" jdbcType="DOUBLE" property="competitivebuyprice" />
    <result column="COMPETITIVESALEPRICE" jdbcType="DOUBLE" property="competitivesaleprice" />
    <result column="NUMBEROFSHARETRADED" jdbcType="BIGINT" property="numberofsharetraded" />
    <result column="MONEYOFSHARETRADED" jdbcType="DOUBLE" property="moneyofsharetraded" />
    <result column="AMOUNTOFBUY1" jdbcType="BIGINT" property="amountofbuy1" />
    <result column="PRICEOFBUY1" jdbcType="DOUBLE" property="priceofbuy1" />
    <result column="AMOUNTOFBUY2" jdbcType="BIGINT" property="amountofbuy2" />
    <result column="PRICEOFBUY2" jdbcType="DOUBLE" property="priceofbuy2" />
    <result column="AMOUNTOFBUY3" jdbcType="BIGINT" property="amountofbuy3" />
    <result column="PRICEOFBUY3" jdbcType="DOUBLE" property="priceofbuy3" />
    <result column="AMOUNTOFBUY4" jdbcType="BIGINT" property="amountofbuy4" />
    <result column="PRICEOFBUY4" jdbcType="DOUBLE" property="priceofbuy4" />
    <result column="AMOUNTOFBUY5" jdbcType="BIGINT" property="amountofbuy5" />
    <result column="PRICEOFBUY5" jdbcType="DOUBLE" property="priceofbuy5" />
    <result column="AMOUNTOFSALE1" jdbcType="BIGINT" property="amountofsale1" />
    <result column="PRICEOFSALE1" jdbcType="DOUBLE" property="priceofsale1" />
    <result column="AMOUNTOFSALE2" jdbcType="BIGINT" property="amountofsale2" />
    <result column="PRICEOFSALE2" jdbcType="DOUBLE" property="priceofsale2" />
    <result column="AMOUNTOFSALE3" jdbcType="BIGINT" property="amountofsale3" />
    <result column="PRICEOFSALE3" jdbcType="DOUBLE" property="priceofsale3" />
    <result column="AMOUNTOFSALE4" jdbcType="BIGINT" property="amountofsale4" />
    <result column="PRICEOFSALE4" jdbcType="DOUBLE" property="priceofsale4" />
    <result column="AMOUNTOFSALE5" jdbcType="BIGINT" property="amountofsale5" />
    <result column="PRICEOFSALE5" jdbcType="DOUBLE" property="priceofsale5" />
    <result column="DATE" jdbcType="DATE" property="date" />
    <result column="TIME" jdbcType="TIME" property="time" />
    <result column="SNO" jdbcType="VARCHAR" property="sno" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Aug 03 13:21:02 CST 2018.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Aug 03 13:21:02 CST 2018.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Aug 03 13:21:02 CST 2018.
    -->
    ID, NAME, OPENINGPRICE, CLOSINGPRICE, CURRENTPRICE, HIGHESTPRICE, LOWESTPRICE, COMPETITIVEBUYPRICE, 
    COMPETITIVESALEPRICE, NUMBEROFSHARETRADED, MONEYOFSHARETRADED, AMOUNTOFBUY1, PRICEOFBUY1, 
    AMOUNTOFBUY2, PRICEOFBUY2, AMOUNTOFBUY3, PRICEOFBUY3, AMOUNTOFBUY4, PRICEOFBUY4, 
    AMOUNTOFBUY5, PRICEOFBUY5, AMOUNTOFSALE1, PRICEOFSALE1, AMOUNTOFSALE2, PRICEOFSALE2, 
    AMOUNTOFSALE3, PRICEOFSALE3, AMOUNTOFSALE4, PRICEOFSALE4, AMOUNTOFSALE5, PRICEOFSALE5, 
    DATE, TIME, SNO
  </sql>
  <select id="selectByExample" parameterType="com.connect.quant.model.StockQuoteExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Aug 03 13:21:02 CST 2018.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from STOCK_QUOTE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Aug 03 13:21:02 CST 2018.
    -->
    select 
    <include refid="Base_Column_List" />
    from STOCK_QUOTE
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Aug 03 13:21:02 CST 2018.
    -->
    delete from STOCK_QUOTE
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.connect.quant.model.StockQuoteExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Aug 03 13:21:02 CST 2018.
    -->
    delete from STOCK_QUOTE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.connect.quant.model.StockQuote">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Aug 03 13:21:02 CST 2018.
    -->
    insert into STOCK_QUOTE (ID, NAME, OPENINGPRICE, 
      CLOSINGPRICE, CURRENTPRICE, HIGHESTPRICE, 
      LOWESTPRICE, COMPETITIVEBUYPRICE, COMPETITIVESALEPRICE, 
      NUMBEROFSHARETRADED, MONEYOFSHARETRADED, 
      AMOUNTOFBUY1, PRICEOFBUY1, AMOUNTOFBUY2, 
      PRICEOFBUY2, AMOUNTOFBUY3, PRICEOFBUY3, 
      AMOUNTOFBUY4, PRICEOFBUY4, AMOUNTOFBUY5, 
      PRICEOFBUY5, AMOUNTOFSALE1, PRICEOFSALE1, 
      AMOUNTOFSALE2, PRICEOFSALE2, AMOUNTOFSALE3, 
      PRICEOFSALE3, AMOUNTOFSALE4, PRICEOFSALE4, 
      AMOUNTOFSALE5, PRICEOFSALE5, DATE, 
      TIME, SNO)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{openingprice,jdbcType=DOUBLE}, 
      #{closingprice,jdbcType=DOUBLE}, #{currentprice,jdbcType=DOUBLE}, #{highestprice,jdbcType=DOUBLE}, 
      #{lowestprice,jdbcType=DOUBLE}, #{competitivebuyprice,jdbcType=DOUBLE}, #{competitivesaleprice,jdbcType=DOUBLE}, 
      #{numberofsharetraded,jdbcType=BIGINT}, #{moneyofsharetraded,jdbcType=DOUBLE}, 
      #{amountofbuy1,jdbcType=BIGINT}, #{priceofbuy1,jdbcType=DOUBLE}, #{amountofbuy2,jdbcType=BIGINT}, 
      #{priceofbuy2,jdbcType=DOUBLE}, #{amountofbuy3,jdbcType=BIGINT}, #{priceofbuy3,jdbcType=DOUBLE}, 
      #{amountofbuy4,jdbcType=BIGINT}, #{priceofbuy4,jdbcType=DOUBLE}, #{amountofbuy5,jdbcType=BIGINT}, 
      #{priceofbuy5,jdbcType=DOUBLE}, #{amountofsale1,jdbcType=BIGINT}, #{priceofsale1,jdbcType=DOUBLE}, 
      #{amountofsale2,jdbcType=BIGINT}, #{priceofsale2,jdbcType=DOUBLE}, #{amountofsale3,jdbcType=BIGINT}, 
      #{priceofsale3,jdbcType=DOUBLE}, #{amountofsale4,jdbcType=BIGINT}, #{priceofsale4,jdbcType=DOUBLE}, 
      #{amountofsale5,jdbcType=BIGINT}, #{priceofsale5,jdbcType=DOUBLE}, #{date,jdbcType=DATE}, 
      #{time,jdbcType=TIME}, #{sno,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.connect.quant.model.StockQuote">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Aug 03 13:21:02 CST 2018.
    -->
    insert into STOCK_QUOTE
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="name != null">
        NAME,
      </if>
      <if test="openingprice != null">
        OPENINGPRICE,
      </if>
      <if test="closingprice != null">
        CLOSINGPRICE,
      </if>
      <if test="currentprice != null">
        CURRENTPRICE,
      </if>
      <if test="highestprice != null">
        HIGHESTPRICE,
      </if>
      <if test="lowestprice != null">
        LOWESTPRICE,
      </if>
      <if test="competitivebuyprice != null">
        COMPETITIVEBUYPRICE,
      </if>
      <if test="competitivesaleprice != null">
        COMPETITIVESALEPRICE,
      </if>
      <if test="numberofsharetraded != null">
        NUMBEROFSHARETRADED,
      </if>
      <if test="moneyofsharetraded != null">
        MONEYOFSHARETRADED,
      </if>
      <if test="amountofbuy1 != null">
        AMOUNTOFBUY1,
      </if>
      <if test="priceofbuy1 != null">
        PRICEOFBUY1,
      </if>
      <if test="amountofbuy2 != null">
        AMOUNTOFBUY2,
      </if>
      <if test="priceofbuy2 != null">
        PRICEOFBUY2,
      </if>
      <if test="amountofbuy3 != null">
        AMOUNTOFBUY3,
      </if>
      <if test="priceofbuy3 != null">
        PRICEOFBUY3,
      </if>
      <if test="amountofbuy4 != null">
        AMOUNTOFBUY4,
      </if>
      <if test="priceofbuy4 != null">
        PRICEOFBUY4,
      </if>
      <if test="amountofbuy5 != null">
        AMOUNTOFBUY5,
      </if>
      <if test="priceofbuy5 != null">
        PRICEOFBUY5,
      </if>
      <if test="amountofsale1 != null">
        AMOUNTOFSALE1,
      </if>
      <if test="priceofsale1 != null">
        PRICEOFSALE1,
      </if>
      <if test="amountofsale2 != null">
        AMOUNTOFSALE2,
      </if>
      <if test="priceofsale2 != null">
        PRICEOFSALE2,
      </if>
      <if test="amountofsale3 != null">
        AMOUNTOFSALE3,
      </if>
      <if test="priceofsale3 != null">
        PRICEOFSALE3,
      </if>
      <if test="amountofsale4 != null">
        AMOUNTOFSALE4,
      </if>
      <if test="priceofsale4 != null">
        PRICEOFSALE4,
      </if>
      <if test="amountofsale5 != null">
        AMOUNTOFSALE5,
      </if>
      <if test="priceofsale5 != null">
        PRICEOFSALE5,
      </if>
      <if test="date != null">
        DATE,
      </if>
      <if test="time != null">
        TIME,
      </if>
      <if test="sno != null">
        SNO,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="openingprice != null">
        #{openingprice,jdbcType=DOUBLE},
      </if>
      <if test="closingprice != null">
        #{closingprice,jdbcType=DOUBLE},
      </if>
      <if test="currentprice != null">
        #{currentprice,jdbcType=DOUBLE},
      </if>
      <if test="highestprice != null">
        #{highestprice,jdbcType=DOUBLE},
      </if>
      <if test="lowestprice != null">
        #{lowestprice,jdbcType=DOUBLE},
      </if>
      <if test="competitivebuyprice != null">
        #{competitivebuyprice,jdbcType=DOUBLE},
      </if>
      <if test="competitivesaleprice != null">
        #{competitivesaleprice,jdbcType=DOUBLE},
      </if>
      <if test="numberofsharetraded != null">
        #{numberofsharetraded,jdbcType=BIGINT},
      </if>
      <if test="moneyofsharetraded != null">
        #{moneyofsharetraded,jdbcType=DOUBLE},
      </if>
      <if test="amountofbuy1 != null">
        #{amountofbuy1,jdbcType=BIGINT},
      </if>
      <if test="priceofbuy1 != null">
        #{priceofbuy1,jdbcType=DOUBLE},
      </if>
      <if test="amountofbuy2 != null">
        #{amountofbuy2,jdbcType=BIGINT},
      </if>
      <if test="priceofbuy2 != null">
        #{priceofbuy2,jdbcType=DOUBLE},
      </if>
      <if test="amountofbuy3 != null">
        #{amountofbuy3,jdbcType=BIGINT},
      </if>
      <if test="priceofbuy3 != null">
        #{priceofbuy3,jdbcType=DOUBLE},
      </if>
      <if test="amountofbuy4 != null">
        #{amountofbuy4,jdbcType=BIGINT},
      </if>
      <if test="priceofbuy4 != null">
        #{priceofbuy4,jdbcType=DOUBLE},
      </if>
      <if test="amountofbuy5 != null">
        #{amountofbuy5,jdbcType=BIGINT},
      </if>
      <if test="priceofbuy5 != null">
        #{priceofbuy5,jdbcType=DOUBLE},
      </if>
      <if test="amountofsale1 != null">
        #{amountofsale1,jdbcType=BIGINT},
      </if>
      <if test="priceofsale1 != null">
        #{priceofsale1,jdbcType=DOUBLE},
      </if>
      <if test="amountofsale2 != null">
        #{amountofsale2,jdbcType=BIGINT},
      </if>
      <if test="priceofsale2 != null">
        #{priceofsale2,jdbcType=DOUBLE},
      </if>
      <if test="amountofsale3 != null">
        #{amountofsale3,jdbcType=BIGINT},
      </if>
      <if test="priceofsale3 != null">
        #{priceofsale3,jdbcType=DOUBLE},
      </if>
      <if test="amountofsale4 != null">
        #{amountofsale4,jdbcType=BIGINT},
      </if>
      <if test="priceofsale4 != null">
        #{priceofsale4,jdbcType=DOUBLE},
      </if>
      <if test="amountofsale5 != null">
        #{amountofsale5,jdbcType=BIGINT},
      </if>
      <if test="priceofsale5 != null">
        #{priceofsale5,jdbcType=DOUBLE},
      </if>
      <if test="date != null">
        #{date,jdbcType=DATE},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIME},
      </if>
      <if test="sno != null">
        #{sno,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.connect.quant.model.StockQuoteExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Aug 03 13:21:02 CST 2018.
    -->
    select count(*) from STOCK_QUOTE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Aug 03 13:21:02 CST 2018.
    -->
    update STOCK_QUOTE
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        NAME = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.openingprice != null">
        OPENINGPRICE = #{record.openingprice,jdbcType=DOUBLE},
      </if>
      <if test="record.closingprice != null">
        CLOSINGPRICE = #{record.closingprice,jdbcType=DOUBLE},
      </if>
      <if test="record.currentprice != null">
        CURRENTPRICE = #{record.currentprice,jdbcType=DOUBLE},
      </if>
      <if test="record.highestprice != null">
        HIGHESTPRICE = #{record.highestprice,jdbcType=DOUBLE},
      </if>
      <if test="record.lowestprice != null">
        LOWESTPRICE = #{record.lowestprice,jdbcType=DOUBLE},
      </if>
      <if test="record.competitivebuyprice != null">
        COMPETITIVEBUYPRICE = #{record.competitivebuyprice,jdbcType=DOUBLE},
      </if>
      <if test="record.competitivesaleprice != null">
        COMPETITIVESALEPRICE = #{record.competitivesaleprice,jdbcType=DOUBLE},
      </if>
      <if test="record.numberofsharetraded != null">
        NUMBEROFSHARETRADED = #{record.numberofsharetraded,jdbcType=BIGINT},
      </if>
      <if test="record.moneyofsharetraded != null">
        MONEYOFSHARETRADED = #{record.moneyofsharetraded,jdbcType=DOUBLE},
      </if>
      <if test="record.amountofbuy1 != null">
        AMOUNTOFBUY1 = #{record.amountofbuy1,jdbcType=BIGINT},
      </if>
      <if test="record.priceofbuy1 != null">
        PRICEOFBUY1 = #{record.priceofbuy1,jdbcType=DOUBLE},
      </if>
      <if test="record.amountofbuy2 != null">
        AMOUNTOFBUY2 = #{record.amountofbuy2,jdbcType=BIGINT},
      </if>
      <if test="record.priceofbuy2 != null">
        PRICEOFBUY2 = #{record.priceofbuy2,jdbcType=DOUBLE},
      </if>
      <if test="record.amountofbuy3 != null">
        AMOUNTOFBUY3 = #{record.amountofbuy3,jdbcType=BIGINT},
      </if>
      <if test="record.priceofbuy3 != null">
        PRICEOFBUY3 = #{record.priceofbuy3,jdbcType=DOUBLE},
      </if>
      <if test="record.amountofbuy4 != null">
        AMOUNTOFBUY4 = #{record.amountofbuy4,jdbcType=BIGINT},
      </if>
      <if test="record.priceofbuy4 != null">
        PRICEOFBUY4 = #{record.priceofbuy4,jdbcType=DOUBLE},
      </if>
      <if test="record.amountofbuy5 != null">
        AMOUNTOFBUY5 = #{record.amountofbuy5,jdbcType=BIGINT},
      </if>
      <if test="record.priceofbuy5 != null">
        PRICEOFBUY5 = #{record.priceofbuy5,jdbcType=DOUBLE},
      </if>
      <if test="record.amountofsale1 != null">
        AMOUNTOFSALE1 = #{record.amountofsale1,jdbcType=BIGINT},
      </if>
      <if test="record.priceofsale1 != null">
        PRICEOFSALE1 = #{record.priceofsale1,jdbcType=DOUBLE},
      </if>
      <if test="record.amountofsale2 != null">
        AMOUNTOFSALE2 = #{record.amountofsale2,jdbcType=BIGINT},
      </if>
      <if test="record.priceofsale2 != null">
        PRICEOFSALE2 = #{record.priceofsale2,jdbcType=DOUBLE},
      </if>
      <if test="record.amountofsale3 != null">
        AMOUNTOFSALE3 = #{record.amountofsale3,jdbcType=BIGINT},
      </if>
      <if test="record.priceofsale3 != null">
        PRICEOFSALE3 = #{record.priceofsale3,jdbcType=DOUBLE},
      </if>
      <if test="record.amountofsale4 != null">
        AMOUNTOFSALE4 = #{record.amountofsale4,jdbcType=BIGINT},
      </if>
      <if test="record.priceofsale4 != null">
        PRICEOFSALE4 = #{record.priceofsale4,jdbcType=DOUBLE},
      </if>
      <if test="record.amountofsale5 != null">
        AMOUNTOFSALE5 = #{record.amountofsale5,jdbcType=BIGINT},
      </if>
      <if test="record.priceofsale5 != null">
        PRICEOFSALE5 = #{record.priceofsale5,jdbcType=DOUBLE},
      </if>
      <if test="record.date != null">
        DATE = #{record.date,jdbcType=DATE},
      </if>
      <if test="record.time != null">
        TIME = #{record.time,jdbcType=TIME},
      </if>
      <if test="record.sno != null">
        SNO = #{record.sno,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Aug 03 13:21:02 CST 2018.
    -->
    update STOCK_QUOTE
    set ID = #{record.id,jdbcType=INTEGER},
      NAME = #{record.name,jdbcType=VARCHAR},
      OPENINGPRICE = #{record.openingprice,jdbcType=DOUBLE},
      CLOSINGPRICE = #{record.closingprice,jdbcType=DOUBLE},
      CURRENTPRICE = #{record.currentprice,jdbcType=DOUBLE},
      HIGHESTPRICE = #{record.highestprice,jdbcType=DOUBLE},
      LOWESTPRICE = #{record.lowestprice,jdbcType=DOUBLE},
      COMPETITIVEBUYPRICE = #{record.competitivebuyprice,jdbcType=DOUBLE},
      COMPETITIVESALEPRICE = #{record.competitivesaleprice,jdbcType=DOUBLE},
      NUMBEROFSHARETRADED = #{record.numberofsharetraded,jdbcType=BIGINT},
      MONEYOFSHARETRADED = #{record.moneyofsharetraded,jdbcType=DOUBLE},
      AMOUNTOFBUY1 = #{record.amountofbuy1,jdbcType=BIGINT},
      PRICEOFBUY1 = #{record.priceofbuy1,jdbcType=DOUBLE},
      AMOUNTOFBUY2 = #{record.amountofbuy2,jdbcType=BIGINT},
      PRICEOFBUY2 = #{record.priceofbuy2,jdbcType=DOUBLE},
      AMOUNTOFBUY3 = #{record.amountofbuy3,jdbcType=BIGINT},
      PRICEOFBUY3 = #{record.priceofbuy3,jdbcType=DOUBLE},
      AMOUNTOFBUY4 = #{record.amountofbuy4,jdbcType=BIGINT},
      PRICEOFBUY4 = #{record.priceofbuy4,jdbcType=DOUBLE},
      AMOUNTOFBUY5 = #{record.amountofbuy5,jdbcType=BIGINT},
      PRICEOFBUY5 = #{record.priceofbuy5,jdbcType=DOUBLE},
      AMOUNTOFSALE1 = #{record.amountofsale1,jdbcType=BIGINT},
      PRICEOFSALE1 = #{record.priceofsale1,jdbcType=DOUBLE},
      AMOUNTOFSALE2 = #{record.amountofsale2,jdbcType=BIGINT},
      PRICEOFSALE2 = #{record.priceofsale2,jdbcType=DOUBLE},
      AMOUNTOFSALE3 = #{record.amountofsale3,jdbcType=BIGINT},
      PRICEOFSALE3 = #{record.priceofsale3,jdbcType=DOUBLE},
      AMOUNTOFSALE4 = #{record.amountofsale4,jdbcType=BIGINT},
      PRICEOFSALE4 = #{record.priceofsale4,jdbcType=DOUBLE},
      AMOUNTOFSALE5 = #{record.amountofsale5,jdbcType=BIGINT},
      PRICEOFSALE5 = #{record.priceofsale5,jdbcType=DOUBLE},
      DATE = #{record.date,jdbcType=DATE},
      TIME = #{record.time,jdbcType=TIME},
      SNO = #{record.sno,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.connect.quant.model.StockQuote">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Aug 03 13:21:02 CST 2018.
    -->
    update STOCK_QUOTE
    <set>
      <if test="name != null">
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="openingprice != null">
        OPENINGPRICE = #{openingprice,jdbcType=DOUBLE},
      </if>
      <if test="closingprice != null">
        CLOSINGPRICE = #{closingprice,jdbcType=DOUBLE},
      </if>
      <if test="currentprice != null">
        CURRENTPRICE = #{currentprice,jdbcType=DOUBLE},
      </if>
      <if test="highestprice != null">
        HIGHESTPRICE = #{highestprice,jdbcType=DOUBLE},
      </if>
      <if test="lowestprice != null">
        LOWESTPRICE = #{lowestprice,jdbcType=DOUBLE},
      </if>
      <if test="competitivebuyprice != null">
        COMPETITIVEBUYPRICE = #{competitivebuyprice,jdbcType=DOUBLE},
      </if>
      <if test="competitivesaleprice != null">
        COMPETITIVESALEPRICE = #{competitivesaleprice,jdbcType=DOUBLE},
      </if>
      <if test="numberofsharetraded != null">
        NUMBEROFSHARETRADED = #{numberofsharetraded,jdbcType=BIGINT},
      </if>
      <if test="moneyofsharetraded != null">
        MONEYOFSHARETRADED = #{moneyofsharetraded,jdbcType=DOUBLE},
      </if>
      <if test="amountofbuy1 != null">
        AMOUNTOFBUY1 = #{amountofbuy1,jdbcType=BIGINT},
      </if>
      <if test="priceofbuy1 != null">
        PRICEOFBUY1 = #{priceofbuy1,jdbcType=DOUBLE},
      </if>
      <if test="amountofbuy2 != null">
        AMOUNTOFBUY2 = #{amountofbuy2,jdbcType=BIGINT},
      </if>
      <if test="priceofbuy2 != null">
        PRICEOFBUY2 = #{priceofbuy2,jdbcType=DOUBLE},
      </if>
      <if test="amountofbuy3 != null">
        AMOUNTOFBUY3 = #{amountofbuy3,jdbcType=BIGINT},
      </if>
      <if test="priceofbuy3 != null">
        PRICEOFBUY3 = #{priceofbuy3,jdbcType=DOUBLE},
      </if>
      <if test="amountofbuy4 != null">
        AMOUNTOFBUY4 = #{amountofbuy4,jdbcType=BIGINT},
      </if>
      <if test="priceofbuy4 != null">
        PRICEOFBUY4 = #{priceofbuy4,jdbcType=DOUBLE},
      </if>
      <if test="amountofbuy5 != null">
        AMOUNTOFBUY5 = #{amountofbuy5,jdbcType=BIGINT},
      </if>
      <if test="priceofbuy5 != null">
        PRICEOFBUY5 = #{priceofbuy5,jdbcType=DOUBLE},
      </if>
      <if test="amountofsale1 != null">
        AMOUNTOFSALE1 = #{amountofsale1,jdbcType=BIGINT},
      </if>
      <if test="priceofsale1 != null">
        PRICEOFSALE1 = #{priceofsale1,jdbcType=DOUBLE},
      </if>
      <if test="amountofsale2 != null">
        AMOUNTOFSALE2 = #{amountofsale2,jdbcType=BIGINT},
      </if>
      <if test="priceofsale2 != null">
        PRICEOFSALE2 = #{priceofsale2,jdbcType=DOUBLE},
      </if>
      <if test="amountofsale3 != null">
        AMOUNTOFSALE3 = #{amountofsale3,jdbcType=BIGINT},
      </if>
      <if test="priceofsale3 != null">
        PRICEOFSALE3 = #{priceofsale3,jdbcType=DOUBLE},
      </if>
      <if test="amountofsale4 != null">
        AMOUNTOFSALE4 = #{amountofsale4,jdbcType=BIGINT},
      </if>
      <if test="priceofsale4 != null">
        PRICEOFSALE4 = #{priceofsale4,jdbcType=DOUBLE},
      </if>
      <if test="amountofsale5 != null">
        AMOUNTOFSALE5 = #{amountofsale5,jdbcType=BIGINT},
      </if>
      <if test="priceofsale5 != null">
        PRICEOFSALE5 = #{priceofsale5,jdbcType=DOUBLE},
      </if>
      <if test="date != null">
        DATE = #{date,jdbcType=DATE},
      </if>
      <if test="time != null">
        TIME = #{time,jdbcType=TIME},
      </if>
      <if test="sno != null">
        SNO = #{sno,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.connect.quant.model.StockQuote">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Aug 03 13:21:02 CST 2018.
    -->
    update STOCK_QUOTE
    set NAME = #{name,jdbcType=VARCHAR},
      OPENINGPRICE = #{openingprice,jdbcType=DOUBLE},
      CLOSINGPRICE = #{closingprice,jdbcType=DOUBLE},
      CURRENTPRICE = #{currentprice,jdbcType=DOUBLE},
      HIGHESTPRICE = #{highestprice,jdbcType=DOUBLE},
      LOWESTPRICE = #{lowestprice,jdbcType=DOUBLE},
      COMPETITIVEBUYPRICE = #{competitivebuyprice,jdbcType=DOUBLE},
      COMPETITIVESALEPRICE = #{competitivesaleprice,jdbcType=DOUBLE},
      NUMBEROFSHARETRADED = #{numberofsharetraded,jdbcType=BIGINT},
      MONEYOFSHARETRADED = #{moneyofsharetraded,jdbcType=DOUBLE},
      AMOUNTOFBUY1 = #{amountofbuy1,jdbcType=BIGINT},
      PRICEOFBUY1 = #{priceofbuy1,jdbcType=DOUBLE},
      AMOUNTOFBUY2 = #{amountofbuy2,jdbcType=BIGINT},
      PRICEOFBUY2 = #{priceofbuy2,jdbcType=DOUBLE},
      AMOUNTOFBUY3 = #{amountofbuy3,jdbcType=BIGINT},
      PRICEOFBUY3 = #{priceofbuy3,jdbcType=DOUBLE},
      AMOUNTOFBUY4 = #{amountofbuy4,jdbcType=BIGINT},
      PRICEOFBUY4 = #{priceofbuy4,jdbcType=DOUBLE},
      AMOUNTOFBUY5 = #{amountofbuy5,jdbcType=BIGINT},
      PRICEOFBUY5 = #{priceofbuy5,jdbcType=DOUBLE},
      AMOUNTOFSALE1 = #{amountofsale1,jdbcType=BIGINT},
      PRICEOFSALE1 = #{priceofsale1,jdbcType=DOUBLE},
      AMOUNTOFSALE2 = #{amountofsale2,jdbcType=BIGINT},
      PRICEOFSALE2 = #{priceofsale2,jdbcType=DOUBLE},
      AMOUNTOFSALE3 = #{amountofsale3,jdbcType=BIGINT},
      PRICEOFSALE3 = #{priceofsale3,jdbcType=DOUBLE},
      AMOUNTOFSALE4 = #{amountofsale4,jdbcType=BIGINT},
      PRICEOFSALE4 = #{priceofsale4,jdbcType=DOUBLE},
      AMOUNTOFSALE5 = #{amountofsale5,jdbcType=BIGINT},
      PRICEOFSALE5 = #{priceofsale5,jdbcType=DOUBLE},
      DATE = #{date,jdbcType=DATE},
      TIME = #{time,jdbcType=TIME},
      SNO = #{sno,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>