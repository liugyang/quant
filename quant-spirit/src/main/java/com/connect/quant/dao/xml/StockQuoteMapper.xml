<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.connect.quant.dao.mapper.StockQuoteMapper">
  <resultMap id="BaseResultMap" type="com.connect.quant.model.StockQuote">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Aug 07 14:58:26 CST 2018.
    -->
    <id column="SNO" jdbcType="INTEGER" property="sno" />
    <result column="SYMBOL" jdbcType="VARCHAR" property="symbol" />
    <result column="NAME" jdbcType="VARCHAR" property="name" />
    <result column="OPENING_PRICE" jdbcType="DOUBLE" property="openingPrice" />
    <result column="CLOSING_PRICE" jdbcType="DOUBLE" property="closingPrice" />
    <result column="CURRENT_PRICE" jdbcType="DOUBLE" property="currentPrice" />
    <result column="HIGHEST_PRICE" jdbcType="DOUBLE" property="highestPrice" />
    <result column="LOWEST_PRICE" jdbcType="DOUBLE" property="lowestPrice" />
    <result column="COMPETITIVE_BUY_PRICE" jdbcType="DOUBLE" property="competitiveBuyPrice" />
    <result column="COMPETITIVE_SALE_PRICE" jdbcType="DOUBLE" property="competitiveSalePrice" />
    <result column="NUMBER_OF_SHARE_TRADED" jdbcType="BIGINT" property="numberOfShareTraded" />
    <result column="MONEY_OF_SHARE_TRADED" jdbcType="DOUBLE" property="moneyOfShareTraded" />
    <result column="AMOUNT_OF_BUY1" jdbcType="BIGINT" property="amountOfBuy1" />
    <result column="PRICE_OF_BUY1" jdbcType="DOUBLE" property="priceOfBuy1" />
    <result column="AMOUNT_OF_BUY2" jdbcType="BIGINT" property="amountOfBuy2" />
    <result column="PRICE_OF_BUY2" jdbcType="DOUBLE" property="priceOfBuy2" />
    <result column="AMOUNT_OF_BUY3" jdbcType="BIGINT" property="amountOfBuy3" />
    <result column="PRICE_OF_BUY3" jdbcType="DOUBLE" property="priceOfBuy3" />
    <result column="AMOUNT_OF_BUY4" jdbcType="BIGINT" property="amountOfBuy4" />
    <result column="PRICE_OF_BUY4" jdbcType="DOUBLE" property="priceOfBuy4" />
    <result column="AMOUNT_OF_BUY5" jdbcType="BIGINT" property="amountOfBuy5" />
    <result column="PRICE_OF_BUY5" jdbcType="DOUBLE" property="priceOfBuy5" />
    <result column="AMOUNT_OF_SALE1" jdbcType="BIGINT" property="amountOfSale1" />
    <result column="PRICE_OF_SALE1" jdbcType="DOUBLE" property="priceOfSale1" />
    <result column="AMOUNT_OF_SALE2" jdbcType="BIGINT" property="amountOfSale2" />
    <result column="PRICE_OF_SALE2" jdbcType="DOUBLE" property="priceOfSale2" />
    <result column="AMOUNT_OF_SALE3" jdbcType="BIGINT" property="amountOfSale3" />
    <result column="PRICE_OF_SALE3" jdbcType="DOUBLE" property="priceOfSale3" />
    <result column="AMOUNT_OF_SALE4" jdbcType="BIGINT" property="amountOfSale4" />
    <result column="PRICE_OF_SALE4" jdbcType="DOUBLE" property="priceOfSale4" />
    <result column="AMOUNT_OF_SALE5" jdbcType="BIGINT" property="amountOfSale5" />
    <result column="PRICE_OF_SALE5" jdbcType="DOUBLE" property="priceOfSale5" />
    <result column="EXCHANGE" jdbcType="VARCHAR" property="exchange" />
    <result column="DATE" jdbcType="DATE" property="date" />
    <result column="TIME" jdbcType="TIME" property="time" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Aug 07 14:58:26 CST 2018.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Aug 07 14:58:26 CST 2018.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Aug 07 14:58:26 CST 2018.
    -->
    SNO, SYMBOL, NAME, OPENING_PRICE, CLOSING_PRICE, CURRENT_PRICE, HIGHEST_PRICE, LOWEST_PRICE, 
    COMPETITIVE_BUY_PRICE, COMPETITIVE_SALE_PRICE, NUMBER_OF_SHARE_TRADED, MONEY_OF_SHARE_TRADED, 
    AMOUNT_OF_BUY1, PRICE_OF_BUY1, AMOUNT_OF_BUY2, PRICE_OF_BUY2, AMOUNT_OF_BUY3, PRICE_OF_BUY3, 
    AMOUNT_OF_BUY4, PRICE_OF_BUY4, AMOUNT_OF_BUY5, PRICE_OF_BUY5, AMOUNT_OF_SALE1, PRICE_OF_SALE1, 
    AMOUNT_OF_SALE2, PRICE_OF_SALE2, AMOUNT_OF_SALE3, PRICE_OF_SALE3, AMOUNT_OF_SALE4, 
    PRICE_OF_SALE4, AMOUNT_OF_SALE5, PRICE_OF_SALE5, EXCHANGE, DATE, TIME
  </sql>
  <select id="selectByExample" parameterType="com.connect.quant.model.StockQuoteExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Aug 07 14:58:26 CST 2018.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from STOCK_QUOTE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Aug 07 14:58:26 CST 2018.
    -->
    select 
    <include refid="Base_Column_List" />
    from STOCK_QUOTE
    where SNO = #{sno,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Aug 07 14:58:26 CST 2018.
    -->
    delete from STOCK_QUOTE
    where SNO = #{sno,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.connect.quant.model.StockQuoteExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Aug 07 14:58:26 CST 2018.
    -->
    delete from STOCK_QUOTE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.connect.quant.model.StockQuote">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Aug 07 14:58:26 CST 2018.
    -->
    insert into STOCK_QUOTE (SNO, SYMBOL, NAME, 
      OPENING_PRICE, CLOSING_PRICE, CURRENT_PRICE, 
      HIGHEST_PRICE, LOWEST_PRICE, COMPETITIVE_BUY_PRICE, 
      COMPETITIVE_SALE_PRICE, NUMBER_OF_SHARE_TRADED, 
      MONEY_OF_SHARE_TRADED, AMOUNT_OF_BUY1, PRICE_OF_BUY1, 
      AMOUNT_OF_BUY2, PRICE_OF_BUY2, AMOUNT_OF_BUY3, 
      PRICE_OF_BUY3, AMOUNT_OF_BUY4, PRICE_OF_BUY4, 
      AMOUNT_OF_BUY5, PRICE_OF_BUY5, AMOUNT_OF_SALE1, 
      PRICE_OF_SALE1, AMOUNT_OF_SALE2, PRICE_OF_SALE2, 
      AMOUNT_OF_SALE3, PRICE_OF_SALE3, AMOUNT_OF_SALE4, 
      PRICE_OF_SALE4, AMOUNT_OF_SALE5, PRICE_OF_SALE5, 
      EXCHANGE, DATE, TIME)
    values (#{sno,jdbcType=INTEGER}, #{symbol,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{openingPrice,jdbcType=DOUBLE}, #{closingPrice,jdbcType=DOUBLE}, #{currentPrice,jdbcType=DOUBLE}, 
      #{highestPrice,jdbcType=DOUBLE}, #{lowestPrice,jdbcType=DOUBLE}, #{competitiveBuyPrice,jdbcType=DOUBLE}, 
      #{competitiveSalePrice,jdbcType=DOUBLE}, #{numberOfShareTraded,jdbcType=BIGINT}, 
      #{moneyOfShareTraded,jdbcType=DOUBLE}, #{amountOfBuy1,jdbcType=BIGINT}, #{priceOfBuy1,jdbcType=DOUBLE}, 
      #{amountOfBuy2,jdbcType=BIGINT}, #{priceOfBuy2,jdbcType=DOUBLE}, #{amountOfBuy3,jdbcType=BIGINT}, 
      #{priceOfBuy3,jdbcType=DOUBLE}, #{amountOfBuy4,jdbcType=BIGINT}, #{priceOfBuy4,jdbcType=DOUBLE}, 
      #{amountOfBuy5,jdbcType=BIGINT}, #{priceOfBuy5,jdbcType=DOUBLE}, #{amountOfSale1,jdbcType=BIGINT}, 
      #{priceOfSale1,jdbcType=DOUBLE}, #{amountOfSale2,jdbcType=BIGINT}, #{priceOfSale2,jdbcType=DOUBLE}, 
      #{amountOfSale3,jdbcType=BIGINT}, #{priceOfSale3,jdbcType=DOUBLE}, #{amountOfSale4,jdbcType=BIGINT}, 
      #{priceOfSale4,jdbcType=DOUBLE}, #{amountOfSale5,jdbcType=BIGINT}, #{priceOfSale5,jdbcType=DOUBLE}, 
      #{exchange,jdbcType=VARCHAR}, #{date,jdbcType=DATE}, #{time,jdbcType=TIME})
  </insert>
  <insert id="insertSelective" parameterType="com.connect.quant.model.StockQuote">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Aug 07 14:58:26 CST 2018.
    -->
    insert into STOCK_QUOTE
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="sno != null">
        SNO,
      </if>
      <if test="symbol != null">
        SYMBOL,
      </if>
      <if test="name != null">
        NAME,
      </if>
      <if test="openingPrice != null">
        OPENING_PRICE,
      </if>
      <if test="closingPrice != null">
        CLOSING_PRICE,
      </if>
      <if test="currentPrice != null">
        CURRENT_PRICE,
      </if>
      <if test="highestPrice != null">
        HIGHEST_PRICE,
      </if>
      <if test="lowestPrice != null">
        LOWEST_PRICE,
      </if>
      <if test="competitiveBuyPrice != null">
        COMPETITIVE_BUY_PRICE,
      </if>
      <if test="competitiveSalePrice != null">
        COMPETITIVE_SALE_PRICE,
      </if>
      <if test="numberOfShareTraded != null">
        NUMBER_OF_SHARE_TRADED,
      </if>
      <if test="moneyOfShareTraded != null">
        MONEY_OF_SHARE_TRADED,
      </if>
      <if test="amountOfBuy1 != null">
        AMOUNT_OF_BUY1,
      </if>
      <if test="priceOfBuy1 != null">
        PRICE_OF_BUY1,
      </if>
      <if test="amountOfBuy2 != null">
        AMOUNT_OF_BUY2,
      </if>
      <if test="priceOfBuy2 != null">
        PRICE_OF_BUY2,
      </if>
      <if test="amountOfBuy3 != null">
        AMOUNT_OF_BUY3,
      </if>
      <if test="priceOfBuy3 != null">
        PRICE_OF_BUY3,
      </if>
      <if test="amountOfBuy4 != null">
        AMOUNT_OF_BUY4,
      </if>
      <if test="priceOfBuy4 != null">
        PRICE_OF_BUY4,
      </if>
      <if test="amountOfBuy5 != null">
        AMOUNT_OF_BUY5,
      </if>
      <if test="priceOfBuy5 != null">
        PRICE_OF_BUY5,
      </if>
      <if test="amountOfSale1 != null">
        AMOUNT_OF_SALE1,
      </if>
      <if test="priceOfSale1 != null">
        PRICE_OF_SALE1,
      </if>
      <if test="amountOfSale2 != null">
        AMOUNT_OF_SALE2,
      </if>
      <if test="priceOfSale2 != null">
        PRICE_OF_SALE2,
      </if>
      <if test="amountOfSale3 != null">
        AMOUNT_OF_SALE3,
      </if>
      <if test="priceOfSale3 != null">
        PRICE_OF_SALE3,
      </if>
      <if test="amountOfSale4 != null">
        AMOUNT_OF_SALE4,
      </if>
      <if test="priceOfSale4 != null">
        PRICE_OF_SALE4,
      </if>
      <if test="amountOfSale5 != null">
        AMOUNT_OF_SALE5,
      </if>
      <if test="priceOfSale5 != null">
        PRICE_OF_SALE5,
      </if>
      <if test="exchange != null">
        EXCHANGE,
      </if>
      <if test="date != null">
        DATE,
      </if>
      <if test="time != null">
        TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="sno != null">
        #{sno,jdbcType=INTEGER},
      </if>
      <if test="symbol != null">
        #{symbol,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="openingPrice != null">
        #{openingPrice,jdbcType=DOUBLE},
      </if>
      <if test="closingPrice != null">
        #{closingPrice,jdbcType=DOUBLE},
      </if>
      <if test="currentPrice != null">
        #{currentPrice,jdbcType=DOUBLE},
      </if>
      <if test="highestPrice != null">
        #{highestPrice,jdbcType=DOUBLE},
      </if>
      <if test="lowestPrice != null">
        #{lowestPrice,jdbcType=DOUBLE},
      </if>
      <if test="competitiveBuyPrice != null">
        #{competitiveBuyPrice,jdbcType=DOUBLE},
      </if>
      <if test="competitiveSalePrice != null">
        #{competitiveSalePrice,jdbcType=DOUBLE},
      </if>
      <if test="numberOfShareTraded != null">
        #{numberOfShareTraded,jdbcType=BIGINT},
      </if>
      <if test="moneyOfShareTraded != null">
        #{moneyOfShareTraded,jdbcType=DOUBLE},
      </if>
      <if test="amountOfBuy1 != null">
        #{amountOfBuy1,jdbcType=BIGINT},
      </if>
      <if test="priceOfBuy1 != null">
        #{priceOfBuy1,jdbcType=DOUBLE},
      </if>
      <if test="amountOfBuy2 != null">
        #{amountOfBuy2,jdbcType=BIGINT},
      </if>
      <if test="priceOfBuy2 != null">
        #{priceOfBuy2,jdbcType=DOUBLE},
      </if>
      <if test="amountOfBuy3 != null">
        #{amountOfBuy3,jdbcType=BIGINT},
      </if>
      <if test="priceOfBuy3 != null">
        #{priceOfBuy3,jdbcType=DOUBLE},
      </if>
      <if test="amountOfBuy4 != null">
        #{amountOfBuy4,jdbcType=BIGINT},
      </if>
      <if test="priceOfBuy4 != null">
        #{priceOfBuy4,jdbcType=DOUBLE},
      </if>
      <if test="amountOfBuy5 != null">
        #{amountOfBuy5,jdbcType=BIGINT},
      </if>
      <if test="priceOfBuy5 != null">
        #{priceOfBuy5,jdbcType=DOUBLE},
      </if>
      <if test="amountOfSale1 != null">
        #{amountOfSale1,jdbcType=BIGINT},
      </if>
      <if test="priceOfSale1 != null">
        #{priceOfSale1,jdbcType=DOUBLE},
      </if>
      <if test="amountOfSale2 != null">
        #{amountOfSale2,jdbcType=BIGINT},
      </if>
      <if test="priceOfSale2 != null">
        #{priceOfSale2,jdbcType=DOUBLE},
      </if>
      <if test="amountOfSale3 != null">
        #{amountOfSale3,jdbcType=BIGINT},
      </if>
      <if test="priceOfSale3 != null">
        #{priceOfSale3,jdbcType=DOUBLE},
      </if>
      <if test="amountOfSale4 != null">
        #{amountOfSale4,jdbcType=BIGINT},
      </if>
      <if test="priceOfSale4 != null">
        #{priceOfSale4,jdbcType=DOUBLE},
      </if>
      <if test="amountOfSale5 != null">
        #{amountOfSale5,jdbcType=BIGINT},
      </if>
      <if test="priceOfSale5 != null">
        #{priceOfSale5,jdbcType=DOUBLE},
      </if>
      <if test="exchange != null">
        #{exchange,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        #{date,jdbcType=DATE},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIME},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.connect.quant.model.StockQuoteExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Aug 07 14:58:26 CST 2018.
    -->
    select count(*) from STOCK_QUOTE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Aug 07 14:58:26 CST 2018.
    -->
    update STOCK_QUOTE
    <set>
      <if test="record.sno != null">
        SNO = #{record.sno,jdbcType=INTEGER},
      </if>
      <if test="record.symbol != null">
        SYMBOL = #{record.symbol,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        NAME = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.openingPrice != null">
        OPENING_PRICE = #{record.openingPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.closingPrice != null">
        CLOSING_PRICE = #{record.closingPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.currentPrice != null">
        CURRENT_PRICE = #{record.currentPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.highestPrice != null">
        HIGHEST_PRICE = #{record.highestPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.lowestPrice != null">
        LOWEST_PRICE = #{record.lowestPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.competitiveBuyPrice != null">
        COMPETITIVE_BUY_PRICE = #{record.competitiveBuyPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.competitiveSalePrice != null">
        COMPETITIVE_SALE_PRICE = #{record.competitiveSalePrice,jdbcType=DOUBLE},
      </if>
      <if test="record.numberOfShareTraded != null">
        NUMBER_OF_SHARE_TRADED = #{record.numberOfShareTraded,jdbcType=BIGINT},
      </if>
      <if test="record.moneyOfShareTraded != null">
        MONEY_OF_SHARE_TRADED = #{record.moneyOfShareTraded,jdbcType=DOUBLE},
      </if>
      <if test="record.amountOfBuy1 != null">
        AMOUNT_OF_BUY1 = #{record.amountOfBuy1,jdbcType=BIGINT},
      </if>
      <if test="record.priceOfBuy1 != null">
        PRICE_OF_BUY1 = #{record.priceOfBuy1,jdbcType=DOUBLE},
      </if>
      <if test="record.amountOfBuy2 != null">
        AMOUNT_OF_BUY2 = #{record.amountOfBuy2,jdbcType=BIGINT},
      </if>
      <if test="record.priceOfBuy2 != null">
        PRICE_OF_BUY2 = #{record.priceOfBuy2,jdbcType=DOUBLE},
      </if>
      <if test="record.amountOfBuy3 != null">
        AMOUNT_OF_BUY3 = #{record.amountOfBuy3,jdbcType=BIGINT},
      </if>
      <if test="record.priceOfBuy3 != null">
        PRICE_OF_BUY3 = #{record.priceOfBuy3,jdbcType=DOUBLE},
      </if>
      <if test="record.amountOfBuy4 != null">
        AMOUNT_OF_BUY4 = #{record.amountOfBuy4,jdbcType=BIGINT},
      </if>
      <if test="record.priceOfBuy4 != null">
        PRICE_OF_BUY4 = #{record.priceOfBuy4,jdbcType=DOUBLE},
      </if>
      <if test="record.amountOfBuy5 != null">
        AMOUNT_OF_BUY5 = #{record.amountOfBuy5,jdbcType=BIGINT},
      </if>
      <if test="record.priceOfBuy5 != null">
        PRICE_OF_BUY5 = #{record.priceOfBuy5,jdbcType=DOUBLE},
      </if>
      <if test="record.amountOfSale1 != null">
        AMOUNT_OF_SALE1 = #{record.amountOfSale1,jdbcType=BIGINT},
      </if>
      <if test="record.priceOfSale1 != null">
        PRICE_OF_SALE1 = #{record.priceOfSale1,jdbcType=DOUBLE},
      </if>
      <if test="record.amountOfSale2 != null">
        AMOUNT_OF_SALE2 = #{record.amountOfSale2,jdbcType=BIGINT},
      </if>
      <if test="record.priceOfSale2 != null">
        PRICE_OF_SALE2 = #{record.priceOfSale2,jdbcType=DOUBLE},
      </if>
      <if test="record.amountOfSale3 != null">
        AMOUNT_OF_SALE3 = #{record.amountOfSale3,jdbcType=BIGINT},
      </if>
      <if test="record.priceOfSale3 != null">
        PRICE_OF_SALE3 = #{record.priceOfSale3,jdbcType=DOUBLE},
      </if>
      <if test="record.amountOfSale4 != null">
        AMOUNT_OF_SALE4 = #{record.amountOfSale4,jdbcType=BIGINT},
      </if>
      <if test="record.priceOfSale4 != null">
        PRICE_OF_SALE4 = #{record.priceOfSale4,jdbcType=DOUBLE},
      </if>
      <if test="record.amountOfSale5 != null">
        AMOUNT_OF_SALE5 = #{record.amountOfSale5,jdbcType=BIGINT},
      </if>
      <if test="record.priceOfSale5 != null">
        PRICE_OF_SALE5 = #{record.priceOfSale5,jdbcType=DOUBLE},
      </if>
      <if test="record.exchange != null">
        EXCHANGE = #{record.exchange,jdbcType=VARCHAR},
      </if>
      <if test="record.date != null">
        DATE = #{record.date,jdbcType=DATE},
      </if>
      <if test="record.time != null">
        TIME = #{record.time,jdbcType=TIME},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Aug 07 14:58:26 CST 2018.
    -->
    update STOCK_QUOTE
    set SNO = #{record.sno,jdbcType=INTEGER},
      SYMBOL = #{record.symbol,jdbcType=VARCHAR},
      NAME = #{record.name,jdbcType=VARCHAR},
      OPENING_PRICE = #{record.openingPrice,jdbcType=DOUBLE},
      CLOSING_PRICE = #{record.closingPrice,jdbcType=DOUBLE},
      CURRENT_PRICE = #{record.currentPrice,jdbcType=DOUBLE},
      HIGHEST_PRICE = #{record.highestPrice,jdbcType=DOUBLE},
      LOWEST_PRICE = #{record.lowestPrice,jdbcType=DOUBLE},
      COMPETITIVE_BUY_PRICE = #{record.competitiveBuyPrice,jdbcType=DOUBLE},
      COMPETITIVE_SALE_PRICE = #{record.competitiveSalePrice,jdbcType=DOUBLE},
      NUMBER_OF_SHARE_TRADED = #{record.numberOfShareTraded,jdbcType=BIGINT},
      MONEY_OF_SHARE_TRADED = #{record.moneyOfShareTraded,jdbcType=DOUBLE},
      AMOUNT_OF_BUY1 = #{record.amountOfBuy1,jdbcType=BIGINT},
      PRICE_OF_BUY1 = #{record.priceOfBuy1,jdbcType=DOUBLE},
      AMOUNT_OF_BUY2 = #{record.amountOfBuy2,jdbcType=BIGINT},
      PRICE_OF_BUY2 = #{record.priceOfBuy2,jdbcType=DOUBLE},
      AMOUNT_OF_BUY3 = #{record.amountOfBuy3,jdbcType=BIGINT},
      PRICE_OF_BUY3 = #{record.priceOfBuy3,jdbcType=DOUBLE},
      AMOUNT_OF_BUY4 = #{record.amountOfBuy4,jdbcType=BIGINT},
      PRICE_OF_BUY4 = #{record.priceOfBuy4,jdbcType=DOUBLE},
      AMOUNT_OF_BUY5 = #{record.amountOfBuy5,jdbcType=BIGINT},
      PRICE_OF_BUY5 = #{record.priceOfBuy5,jdbcType=DOUBLE},
      AMOUNT_OF_SALE1 = #{record.amountOfSale1,jdbcType=BIGINT},
      PRICE_OF_SALE1 = #{record.priceOfSale1,jdbcType=DOUBLE},
      AMOUNT_OF_SALE2 = #{record.amountOfSale2,jdbcType=BIGINT},
      PRICE_OF_SALE2 = #{record.priceOfSale2,jdbcType=DOUBLE},
      AMOUNT_OF_SALE3 = #{record.amountOfSale3,jdbcType=BIGINT},
      PRICE_OF_SALE3 = #{record.priceOfSale3,jdbcType=DOUBLE},
      AMOUNT_OF_SALE4 = #{record.amountOfSale4,jdbcType=BIGINT},
      PRICE_OF_SALE4 = #{record.priceOfSale4,jdbcType=DOUBLE},
      AMOUNT_OF_SALE5 = #{record.amountOfSale5,jdbcType=BIGINT},
      PRICE_OF_SALE5 = #{record.priceOfSale5,jdbcType=DOUBLE},
      EXCHANGE = #{record.exchange,jdbcType=VARCHAR},
      DATE = #{record.date,jdbcType=DATE},
      TIME = #{record.time,jdbcType=TIME}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.connect.quant.model.StockQuote">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Aug 07 14:58:26 CST 2018.
    -->
    update STOCK_QUOTE
    <set>
      <if test="symbol != null">
        SYMBOL = #{symbol,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="openingPrice != null">
        OPENING_PRICE = #{openingPrice,jdbcType=DOUBLE},
      </if>
      <if test="closingPrice != null">
        CLOSING_PRICE = #{closingPrice,jdbcType=DOUBLE},
      </if>
      <if test="currentPrice != null">
        CURRENT_PRICE = #{currentPrice,jdbcType=DOUBLE},
      </if>
      <if test="highestPrice != null">
        HIGHEST_PRICE = #{highestPrice,jdbcType=DOUBLE},
      </if>
      <if test="lowestPrice != null">
        LOWEST_PRICE = #{lowestPrice,jdbcType=DOUBLE},
      </if>
      <if test="competitiveBuyPrice != null">
        COMPETITIVE_BUY_PRICE = #{competitiveBuyPrice,jdbcType=DOUBLE},
      </if>
      <if test="competitiveSalePrice != null">
        COMPETITIVE_SALE_PRICE = #{competitiveSalePrice,jdbcType=DOUBLE},
      </if>
      <if test="numberOfShareTraded != null">
        NUMBER_OF_SHARE_TRADED = #{numberOfShareTraded,jdbcType=BIGINT},
      </if>
      <if test="moneyOfShareTraded != null">
        MONEY_OF_SHARE_TRADED = #{moneyOfShareTraded,jdbcType=DOUBLE},
      </if>
      <if test="amountOfBuy1 != null">
        AMOUNT_OF_BUY1 = #{amountOfBuy1,jdbcType=BIGINT},
      </if>
      <if test="priceOfBuy1 != null">
        PRICE_OF_BUY1 = #{priceOfBuy1,jdbcType=DOUBLE},
      </if>
      <if test="amountOfBuy2 != null">
        AMOUNT_OF_BUY2 = #{amountOfBuy2,jdbcType=BIGINT},
      </if>
      <if test="priceOfBuy2 != null">
        PRICE_OF_BUY2 = #{priceOfBuy2,jdbcType=DOUBLE},
      </if>
      <if test="amountOfBuy3 != null">
        AMOUNT_OF_BUY3 = #{amountOfBuy3,jdbcType=BIGINT},
      </if>
      <if test="priceOfBuy3 != null">
        PRICE_OF_BUY3 = #{priceOfBuy3,jdbcType=DOUBLE},
      </if>
      <if test="amountOfBuy4 != null">
        AMOUNT_OF_BUY4 = #{amountOfBuy4,jdbcType=BIGINT},
      </if>
      <if test="priceOfBuy4 != null">
        PRICE_OF_BUY4 = #{priceOfBuy4,jdbcType=DOUBLE},
      </if>
      <if test="amountOfBuy5 != null">
        AMOUNT_OF_BUY5 = #{amountOfBuy5,jdbcType=BIGINT},
      </if>
      <if test="priceOfBuy5 != null">
        PRICE_OF_BUY5 = #{priceOfBuy5,jdbcType=DOUBLE},
      </if>
      <if test="amountOfSale1 != null">
        AMOUNT_OF_SALE1 = #{amountOfSale1,jdbcType=BIGINT},
      </if>
      <if test="priceOfSale1 != null">
        PRICE_OF_SALE1 = #{priceOfSale1,jdbcType=DOUBLE},
      </if>
      <if test="amountOfSale2 != null">
        AMOUNT_OF_SALE2 = #{amountOfSale2,jdbcType=BIGINT},
      </if>
      <if test="priceOfSale2 != null">
        PRICE_OF_SALE2 = #{priceOfSale2,jdbcType=DOUBLE},
      </if>
      <if test="amountOfSale3 != null">
        AMOUNT_OF_SALE3 = #{amountOfSale3,jdbcType=BIGINT},
      </if>
      <if test="priceOfSale3 != null">
        PRICE_OF_SALE3 = #{priceOfSale3,jdbcType=DOUBLE},
      </if>
      <if test="amountOfSale4 != null">
        AMOUNT_OF_SALE4 = #{amountOfSale4,jdbcType=BIGINT},
      </if>
      <if test="priceOfSale4 != null">
        PRICE_OF_SALE4 = #{priceOfSale4,jdbcType=DOUBLE},
      </if>
      <if test="amountOfSale5 != null">
        AMOUNT_OF_SALE5 = #{amountOfSale5,jdbcType=BIGINT},
      </if>
      <if test="priceOfSale5 != null">
        PRICE_OF_SALE5 = #{priceOfSale5,jdbcType=DOUBLE},
      </if>
      <if test="exchange != null">
        EXCHANGE = #{exchange,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        DATE = #{date,jdbcType=DATE},
      </if>
      <if test="time != null">
        TIME = #{time,jdbcType=TIME},
      </if>
    </set>
    where SNO = #{sno,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.connect.quant.model.StockQuote">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Aug 07 14:58:26 CST 2018.
    -->
    update STOCK_QUOTE
    set SYMBOL = #{symbol,jdbcType=VARCHAR},
      NAME = #{name,jdbcType=VARCHAR},
      OPENING_PRICE = #{openingPrice,jdbcType=DOUBLE},
      CLOSING_PRICE = #{closingPrice,jdbcType=DOUBLE},
      CURRENT_PRICE = #{currentPrice,jdbcType=DOUBLE},
      HIGHEST_PRICE = #{highestPrice,jdbcType=DOUBLE},
      LOWEST_PRICE = #{lowestPrice,jdbcType=DOUBLE},
      COMPETITIVE_BUY_PRICE = #{competitiveBuyPrice,jdbcType=DOUBLE},
      COMPETITIVE_SALE_PRICE = #{competitiveSalePrice,jdbcType=DOUBLE},
      NUMBER_OF_SHARE_TRADED = #{numberOfShareTraded,jdbcType=BIGINT},
      MONEY_OF_SHARE_TRADED = #{moneyOfShareTraded,jdbcType=DOUBLE},
      AMOUNT_OF_BUY1 = #{amountOfBuy1,jdbcType=BIGINT},
      PRICE_OF_BUY1 = #{priceOfBuy1,jdbcType=DOUBLE},
      AMOUNT_OF_BUY2 = #{amountOfBuy2,jdbcType=BIGINT},
      PRICE_OF_BUY2 = #{priceOfBuy2,jdbcType=DOUBLE},
      AMOUNT_OF_BUY3 = #{amountOfBuy3,jdbcType=BIGINT},
      PRICE_OF_BUY3 = #{priceOfBuy3,jdbcType=DOUBLE},
      AMOUNT_OF_BUY4 = #{amountOfBuy4,jdbcType=BIGINT},
      PRICE_OF_BUY4 = #{priceOfBuy4,jdbcType=DOUBLE},
      AMOUNT_OF_BUY5 = #{amountOfBuy5,jdbcType=BIGINT},
      PRICE_OF_BUY5 = #{priceOfBuy5,jdbcType=DOUBLE},
      AMOUNT_OF_SALE1 = #{amountOfSale1,jdbcType=BIGINT},
      PRICE_OF_SALE1 = #{priceOfSale1,jdbcType=DOUBLE},
      AMOUNT_OF_SALE2 = #{amountOfSale2,jdbcType=BIGINT},
      PRICE_OF_SALE2 = #{priceOfSale2,jdbcType=DOUBLE},
      AMOUNT_OF_SALE3 = #{amountOfSale3,jdbcType=BIGINT},
      PRICE_OF_SALE3 = #{priceOfSale3,jdbcType=DOUBLE},
      AMOUNT_OF_SALE4 = #{amountOfSale4,jdbcType=BIGINT},
      PRICE_OF_SALE4 = #{priceOfSale4,jdbcType=DOUBLE},
      AMOUNT_OF_SALE5 = #{amountOfSale5,jdbcType=BIGINT},
      PRICE_OF_SALE5 = #{priceOfSale5,jdbcType=DOUBLE},
      EXCHANGE = #{exchange,jdbcType=VARCHAR},
      DATE = #{date,jdbcType=DATE},
      TIME = #{time,jdbcType=TIME}
    where SNO = #{sno,jdbcType=INTEGER}
  </update>
</mapper>