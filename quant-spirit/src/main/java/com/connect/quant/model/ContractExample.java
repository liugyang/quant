package com.connect.quant.model;

import java.util.ArrayList;
import java.util.List;

public class ContractExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table CONTRACT
     *
     * @mbg.generated Mon Aug 27 14:08:14 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table CONTRACT
     *
     * @mbg.generated Mon Aug 27 14:08:14 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table CONTRACT
     *
     * @mbg.generated Mon Aug 27 14:08:14 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CONTRACT
     *
     * @mbg.generated Mon Aug 27 14:08:14 CST 2018
     */
    public ContractExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CONTRACT
     *
     * @mbg.generated Mon Aug 27 14:08:14 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CONTRACT
     *
     * @mbg.generated Mon Aug 27 14:08:14 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CONTRACT
     *
     * @mbg.generated Mon Aug 27 14:08:14 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CONTRACT
     *
     * @mbg.generated Mon Aug 27 14:08:14 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CONTRACT
     *
     * @mbg.generated Mon Aug 27 14:08:14 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CONTRACT
     *
     * @mbg.generated Mon Aug 27 14:08:14 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CONTRACT
     *
     * @mbg.generated Mon Aug 27 14:08:14 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CONTRACT
     *
     * @mbg.generated Mon Aug 27 14:08:14 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CONTRACT
     *
     * @mbg.generated Mon Aug 27 14:08:14 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CONTRACT
     *
     * @mbg.generated Mon Aug 27 14:08:14 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table CONTRACT
     *
     * @mbg.generated Mon Aug 27 14:08:14 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andSnoIsNull() {
            addCriterion("SNO is null");
            return (Criteria) this;
        }

        public Criteria andSnoIsNotNull() {
            addCriterion("SNO is not null");
            return (Criteria) this;
        }

        public Criteria andSnoEqualTo(Integer value) {
            addCriterion("SNO =", value, "sno");
            return (Criteria) this;
        }

        public Criteria andSnoNotEqualTo(Integer value) {
            addCriterion("SNO <>", value, "sno");
            return (Criteria) this;
        }

        public Criteria andSnoGreaterThan(Integer value) {
            addCriterion("SNO >", value, "sno");
            return (Criteria) this;
        }

        public Criteria andSnoGreaterThanOrEqualTo(Integer value) {
            addCriterion("SNO >=", value, "sno");
            return (Criteria) this;
        }

        public Criteria andSnoLessThan(Integer value) {
            addCriterion("SNO <", value, "sno");
            return (Criteria) this;
        }

        public Criteria andSnoLessThanOrEqualTo(Integer value) {
            addCriterion("SNO <=", value, "sno");
            return (Criteria) this;
        }

        public Criteria andSnoIn(List<Integer> values) {
            addCriterion("SNO in", values, "sno");
            return (Criteria) this;
        }

        public Criteria andSnoNotIn(List<Integer> values) {
            addCriterion("SNO not in", values, "sno");
            return (Criteria) this;
        }

        public Criteria andSnoBetween(Integer value1, Integer value2) {
            addCriterion("SNO between", value1, value2, "sno");
            return (Criteria) this;
        }

        public Criteria andSnoNotBetween(Integer value1, Integer value2) {
            addCriterion("SNO not between", value1, value2, "sno");
            return (Criteria) this;
        }

        public Criteria andSymbolIsNull() {
            addCriterion("SYMBOL is null");
            return (Criteria) this;
        }

        public Criteria andSymbolIsNotNull() {
            addCriterion("SYMBOL is not null");
            return (Criteria) this;
        }

        public Criteria andSymbolEqualTo(String value) {
            addCriterion("SYMBOL =", value, "symbol");
            return (Criteria) this;
        }

        public Criteria andSymbolNotEqualTo(String value) {
            addCriterion("SYMBOL <>", value, "symbol");
            return (Criteria) this;
        }

        public Criteria andSymbolGreaterThan(String value) {
            addCriterion("SYMBOL >", value, "symbol");
            return (Criteria) this;
        }

        public Criteria andSymbolGreaterThanOrEqualTo(String value) {
            addCriterion("SYMBOL >=", value, "symbol");
            return (Criteria) this;
        }

        public Criteria andSymbolLessThan(String value) {
            addCriterion("SYMBOL <", value, "symbol");
            return (Criteria) this;
        }

        public Criteria andSymbolLessThanOrEqualTo(String value) {
            addCriterion("SYMBOL <=", value, "symbol");
            return (Criteria) this;
        }

        public Criteria andSymbolLike(String value) {
            addCriterion("SYMBOL like", value, "symbol");
            return (Criteria) this;
        }

        public Criteria andSymbolNotLike(String value) {
            addCriterion("SYMBOL not like", value, "symbol");
            return (Criteria) this;
        }

        public Criteria andSymbolIn(List<String> values) {
            addCriterion("SYMBOL in", values, "symbol");
            return (Criteria) this;
        }

        public Criteria andSymbolNotIn(List<String> values) {
            addCriterion("SYMBOL not in", values, "symbol");
            return (Criteria) this;
        }

        public Criteria andSymbolBetween(String value1, String value2) {
            addCriterion("SYMBOL between", value1, value2, "symbol");
            return (Criteria) this;
        }

        public Criteria andSymbolNotBetween(String value1, String value2) {
            addCriterion("SYMBOL not between", value1, value2, "symbol");
            return (Criteria) this;
        }

        public Criteria andExchangeIsNull() {
            addCriterion("EXCHANGE is null");
            return (Criteria) this;
        }

        public Criteria andExchangeIsNotNull() {
            addCriterion("EXCHANGE is not null");
            return (Criteria) this;
        }

        public Criteria andExchangeEqualTo(String value) {
            addCriterion("EXCHANGE =", value, "exchange");
            return (Criteria) this;
        }

        public Criteria andExchangeNotEqualTo(String value) {
            addCriterion("EXCHANGE <>", value, "exchange");
            return (Criteria) this;
        }

        public Criteria andExchangeGreaterThan(String value) {
            addCriterion("EXCHANGE >", value, "exchange");
            return (Criteria) this;
        }

        public Criteria andExchangeGreaterThanOrEqualTo(String value) {
            addCriterion("EXCHANGE >=", value, "exchange");
            return (Criteria) this;
        }

        public Criteria andExchangeLessThan(String value) {
            addCriterion("EXCHANGE <", value, "exchange");
            return (Criteria) this;
        }

        public Criteria andExchangeLessThanOrEqualTo(String value) {
            addCriterion("EXCHANGE <=", value, "exchange");
            return (Criteria) this;
        }

        public Criteria andExchangeLike(String value) {
            addCriterion("EXCHANGE like", value, "exchange");
            return (Criteria) this;
        }

        public Criteria andExchangeNotLike(String value) {
            addCriterion("EXCHANGE not like", value, "exchange");
            return (Criteria) this;
        }

        public Criteria andExchangeIn(List<String> values) {
            addCriterion("EXCHANGE in", values, "exchange");
            return (Criteria) this;
        }

        public Criteria andExchangeNotIn(List<String> values) {
            addCriterion("EXCHANGE not in", values, "exchange");
            return (Criteria) this;
        }

        public Criteria andExchangeBetween(String value1, String value2) {
            addCriterion("EXCHANGE between", value1, value2, "exchange");
            return (Criteria) this;
        }

        public Criteria andExchangeNotBetween(String value1, String value2) {
            addCriterion("EXCHANGE not between", value1, value2, "exchange");
            return (Criteria) this;
        }

        public Criteria andVtSymbolIsNull() {
            addCriterion("VT_SYMBOL is null");
            return (Criteria) this;
        }

        public Criteria andVtSymbolIsNotNull() {
            addCriterion("VT_SYMBOL is not null");
            return (Criteria) this;
        }

        public Criteria andVtSymbolEqualTo(String value) {
            addCriterion("VT_SYMBOL =", value, "vtSymbol");
            return (Criteria) this;
        }

        public Criteria andVtSymbolNotEqualTo(String value) {
            addCriterion("VT_SYMBOL <>", value, "vtSymbol");
            return (Criteria) this;
        }

        public Criteria andVtSymbolGreaterThan(String value) {
            addCriterion("VT_SYMBOL >", value, "vtSymbol");
            return (Criteria) this;
        }

        public Criteria andVtSymbolGreaterThanOrEqualTo(String value) {
            addCriterion("VT_SYMBOL >=", value, "vtSymbol");
            return (Criteria) this;
        }

        public Criteria andVtSymbolLessThan(String value) {
            addCriterion("VT_SYMBOL <", value, "vtSymbol");
            return (Criteria) this;
        }

        public Criteria andVtSymbolLessThanOrEqualTo(String value) {
            addCriterion("VT_SYMBOL <=", value, "vtSymbol");
            return (Criteria) this;
        }

        public Criteria andVtSymbolLike(String value) {
            addCriterion("VT_SYMBOL like", value, "vtSymbol");
            return (Criteria) this;
        }

        public Criteria andVtSymbolNotLike(String value) {
            addCriterion("VT_SYMBOL not like", value, "vtSymbol");
            return (Criteria) this;
        }

        public Criteria andVtSymbolIn(List<String> values) {
            addCriterion("VT_SYMBOL in", values, "vtSymbol");
            return (Criteria) this;
        }

        public Criteria andVtSymbolNotIn(List<String> values) {
            addCriterion("VT_SYMBOL not in", values, "vtSymbol");
            return (Criteria) this;
        }

        public Criteria andVtSymbolBetween(String value1, String value2) {
            addCriterion("VT_SYMBOL between", value1, value2, "vtSymbol");
            return (Criteria) this;
        }

        public Criteria andVtSymbolNotBetween(String value1, String value2) {
            addCriterion("VT_SYMBOL not between", value1, value2, "vtSymbol");
            return (Criteria) this;
        }

        public Criteria andNameIsNull() {
            addCriterion("NAME is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("NAME is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("NAME =", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("NAME <>", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("NAME >", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("NAME >=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("NAME <", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("NAME <=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("NAME like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("NAME not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("NAME in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("NAME not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("NAME between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("NAME not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andProductClassIsNull() {
            addCriterion("PRODUCT_CLASS is null");
            return (Criteria) this;
        }

        public Criteria andProductClassIsNotNull() {
            addCriterion("PRODUCT_CLASS is not null");
            return (Criteria) this;
        }

        public Criteria andProductClassEqualTo(String value) {
            addCriterion("PRODUCT_CLASS =", value, "productClass");
            return (Criteria) this;
        }

        public Criteria andProductClassNotEqualTo(String value) {
            addCriterion("PRODUCT_CLASS <>", value, "productClass");
            return (Criteria) this;
        }

        public Criteria andProductClassGreaterThan(String value) {
            addCriterion("PRODUCT_CLASS >", value, "productClass");
            return (Criteria) this;
        }

        public Criteria andProductClassGreaterThanOrEqualTo(String value) {
            addCriterion("PRODUCT_CLASS >=", value, "productClass");
            return (Criteria) this;
        }

        public Criteria andProductClassLessThan(String value) {
            addCriterion("PRODUCT_CLASS <", value, "productClass");
            return (Criteria) this;
        }

        public Criteria andProductClassLessThanOrEqualTo(String value) {
            addCriterion("PRODUCT_CLASS <=", value, "productClass");
            return (Criteria) this;
        }

        public Criteria andProductClassLike(String value) {
            addCriterion("PRODUCT_CLASS like", value, "productClass");
            return (Criteria) this;
        }

        public Criteria andProductClassNotLike(String value) {
            addCriterion("PRODUCT_CLASS not like", value, "productClass");
            return (Criteria) this;
        }

        public Criteria andProductClassIn(List<String> values) {
            addCriterion("PRODUCT_CLASS in", values, "productClass");
            return (Criteria) this;
        }

        public Criteria andProductClassNotIn(List<String> values) {
            addCriterion("PRODUCT_CLASS not in", values, "productClass");
            return (Criteria) this;
        }

        public Criteria andProductClassBetween(String value1, String value2) {
            addCriterion("PRODUCT_CLASS between", value1, value2, "productClass");
            return (Criteria) this;
        }

        public Criteria andProductClassNotBetween(String value1, String value2) {
            addCriterion("PRODUCT_CLASS not between", value1, value2, "productClass");
            return (Criteria) this;
        }

        public Criteria andSizeIsNull() {
            addCriterion("SIZE is null");
            return (Criteria) this;
        }

        public Criteria andSizeIsNotNull() {
            addCriterion("SIZE is not null");
            return (Criteria) this;
        }

        public Criteria andSizeEqualTo(Integer value) {
            addCriterion("SIZE =", value, "size");
            return (Criteria) this;
        }

        public Criteria andSizeNotEqualTo(Integer value) {
            addCriterion("SIZE <>", value, "size");
            return (Criteria) this;
        }

        public Criteria andSizeGreaterThan(Integer value) {
            addCriterion("SIZE >", value, "size");
            return (Criteria) this;
        }

        public Criteria andSizeGreaterThanOrEqualTo(Integer value) {
            addCriterion("SIZE >=", value, "size");
            return (Criteria) this;
        }

        public Criteria andSizeLessThan(Integer value) {
            addCriterion("SIZE <", value, "size");
            return (Criteria) this;
        }

        public Criteria andSizeLessThanOrEqualTo(Integer value) {
            addCriterion("SIZE <=", value, "size");
            return (Criteria) this;
        }

        public Criteria andSizeIn(List<Integer> values) {
            addCriterion("SIZE in", values, "size");
            return (Criteria) this;
        }

        public Criteria andSizeNotIn(List<Integer> values) {
            addCriterion("SIZE not in", values, "size");
            return (Criteria) this;
        }

        public Criteria andSizeBetween(Integer value1, Integer value2) {
            addCriterion("SIZE between", value1, value2, "size");
            return (Criteria) this;
        }

        public Criteria andSizeNotBetween(Integer value1, Integer value2) {
            addCriterion("SIZE not between", value1, value2, "size");
            return (Criteria) this;
        }

        public Criteria andPriceTickIsNull() {
            addCriterion("PRICE_TICK is null");
            return (Criteria) this;
        }

        public Criteria andPriceTickIsNotNull() {
            addCriterion("PRICE_TICK is not null");
            return (Criteria) this;
        }

        public Criteria andPriceTickEqualTo(Double value) {
            addCriterion("PRICE_TICK =", value, "priceTick");
            return (Criteria) this;
        }

        public Criteria andPriceTickNotEqualTo(Double value) {
            addCriterion("PRICE_TICK <>", value, "priceTick");
            return (Criteria) this;
        }

        public Criteria andPriceTickGreaterThan(Double value) {
            addCriterion("PRICE_TICK >", value, "priceTick");
            return (Criteria) this;
        }

        public Criteria andPriceTickGreaterThanOrEqualTo(Double value) {
            addCriterion("PRICE_TICK >=", value, "priceTick");
            return (Criteria) this;
        }

        public Criteria andPriceTickLessThan(Double value) {
            addCriterion("PRICE_TICK <", value, "priceTick");
            return (Criteria) this;
        }

        public Criteria andPriceTickLessThanOrEqualTo(Double value) {
            addCriterion("PRICE_TICK <=", value, "priceTick");
            return (Criteria) this;
        }

        public Criteria andPriceTickIn(List<Double> values) {
            addCriterion("PRICE_TICK in", values, "priceTick");
            return (Criteria) this;
        }

        public Criteria andPriceTickNotIn(List<Double> values) {
            addCriterion("PRICE_TICK not in", values, "priceTick");
            return (Criteria) this;
        }

        public Criteria andPriceTickBetween(Double value1, Double value2) {
            addCriterion("PRICE_TICK between", value1, value2, "priceTick");
            return (Criteria) this;
        }

        public Criteria andPriceTickNotBetween(Double value1, Double value2) {
            addCriterion("PRICE_TICK not between", value1, value2, "priceTick");
            return (Criteria) this;
        }

        public Criteria andStrikePriceIsNull() {
            addCriterion("STRIKE_PRICE is null");
            return (Criteria) this;
        }

        public Criteria andStrikePriceIsNotNull() {
            addCriterion("STRIKE_PRICE is not null");
            return (Criteria) this;
        }

        public Criteria andStrikePriceEqualTo(Double value) {
            addCriterion("STRIKE_PRICE =", value, "strikePrice");
            return (Criteria) this;
        }

        public Criteria andStrikePriceNotEqualTo(Double value) {
            addCriterion("STRIKE_PRICE <>", value, "strikePrice");
            return (Criteria) this;
        }

        public Criteria andStrikePriceGreaterThan(Double value) {
            addCriterion("STRIKE_PRICE >", value, "strikePrice");
            return (Criteria) this;
        }

        public Criteria andStrikePriceGreaterThanOrEqualTo(Double value) {
            addCriterion("STRIKE_PRICE >=", value, "strikePrice");
            return (Criteria) this;
        }

        public Criteria andStrikePriceLessThan(Double value) {
            addCriterion("STRIKE_PRICE <", value, "strikePrice");
            return (Criteria) this;
        }

        public Criteria andStrikePriceLessThanOrEqualTo(Double value) {
            addCriterion("STRIKE_PRICE <=", value, "strikePrice");
            return (Criteria) this;
        }

        public Criteria andStrikePriceIn(List<Double> values) {
            addCriterion("STRIKE_PRICE in", values, "strikePrice");
            return (Criteria) this;
        }

        public Criteria andStrikePriceNotIn(List<Double> values) {
            addCriterion("STRIKE_PRICE not in", values, "strikePrice");
            return (Criteria) this;
        }

        public Criteria andStrikePriceBetween(Double value1, Double value2) {
            addCriterion("STRIKE_PRICE between", value1, value2, "strikePrice");
            return (Criteria) this;
        }

        public Criteria andStrikePriceNotBetween(Double value1, Double value2) {
            addCriterion("STRIKE_PRICE not between", value1, value2, "strikePrice");
            return (Criteria) this;
        }

        public Criteria andUnderlyingSymbolIsNull() {
            addCriterion("UNDERLYING_SYMBOL is null");
            return (Criteria) this;
        }

        public Criteria andUnderlyingSymbolIsNotNull() {
            addCriterion("UNDERLYING_SYMBOL is not null");
            return (Criteria) this;
        }

        public Criteria andUnderlyingSymbolEqualTo(String value) {
            addCriterion("UNDERLYING_SYMBOL =", value, "underlyingSymbol");
            return (Criteria) this;
        }

        public Criteria andUnderlyingSymbolNotEqualTo(String value) {
            addCriterion("UNDERLYING_SYMBOL <>", value, "underlyingSymbol");
            return (Criteria) this;
        }

        public Criteria andUnderlyingSymbolGreaterThan(String value) {
            addCriterion("UNDERLYING_SYMBOL >", value, "underlyingSymbol");
            return (Criteria) this;
        }

        public Criteria andUnderlyingSymbolGreaterThanOrEqualTo(String value) {
            addCriterion("UNDERLYING_SYMBOL >=", value, "underlyingSymbol");
            return (Criteria) this;
        }

        public Criteria andUnderlyingSymbolLessThan(String value) {
            addCriterion("UNDERLYING_SYMBOL <", value, "underlyingSymbol");
            return (Criteria) this;
        }

        public Criteria andUnderlyingSymbolLessThanOrEqualTo(String value) {
            addCriterion("UNDERLYING_SYMBOL <=", value, "underlyingSymbol");
            return (Criteria) this;
        }

        public Criteria andUnderlyingSymbolLike(String value) {
            addCriterion("UNDERLYING_SYMBOL like", value, "underlyingSymbol");
            return (Criteria) this;
        }

        public Criteria andUnderlyingSymbolNotLike(String value) {
            addCriterion("UNDERLYING_SYMBOL not like", value, "underlyingSymbol");
            return (Criteria) this;
        }

        public Criteria andUnderlyingSymbolIn(List<String> values) {
            addCriterion("UNDERLYING_SYMBOL in", values, "underlyingSymbol");
            return (Criteria) this;
        }

        public Criteria andUnderlyingSymbolNotIn(List<String> values) {
            addCriterion("UNDERLYING_SYMBOL not in", values, "underlyingSymbol");
            return (Criteria) this;
        }

        public Criteria andUnderlyingSymbolBetween(String value1, String value2) {
            addCriterion("UNDERLYING_SYMBOL between", value1, value2, "underlyingSymbol");
            return (Criteria) this;
        }

        public Criteria andUnderlyingSymbolNotBetween(String value1, String value2) {
            addCriterion("UNDERLYING_SYMBOL not between", value1, value2, "underlyingSymbol");
            return (Criteria) this;
        }

        public Criteria andOptionTypeIsNull() {
            addCriterion("OPTION_TYPE is null");
            return (Criteria) this;
        }

        public Criteria andOptionTypeIsNotNull() {
            addCriterion("OPTION_TYPE is not null");
            return (Criteria) this;
        }

        public Criteria andOptionTypeEqualTo(String value) {
            addCriterion("OPTION_TYPE =", value, "optionType");
            return (Criteria) this;
        }

        public Criteria andOptionTypeNotEqualTo(String value) {
            addCriterion("OPTION_TYPE <>", value, "optionType");
            return (Criteria) this;
        }

        public Criteria andOptionTypeGreaterThan(String value) {
            addCriterion("OPTION_TYPE >", value, "optionType");
            return (Criteria) this;
        }

        public Criteria andOptionTypeGreaterThanOrEqualTo(String value) {
            addCriterion("OPTION_TYPE >=", value, "optionType");
            return (Criteria) this;
        }

        public Criteria andOptionTypeLessThan(String value) {
            addCriterion("OPTION_TYPE <", value, "optionType");
            return (Criteria) this;
        }

        public Criteria andOptionTypeLessThanOrEqualTo(String value) {
            addCriterion("OPTION_TYPE <=", value, "optionType");
            return (Criteria) this;
        }

        public Criteria andOptionTypeLike(String value) {
            addCriterion("OPTION_TYPE like", value, "optionType");
            return (Criteria) this;
        }

        public Criteria andOptionTypeNotLike(String value) {
            addCriterion("OPTION_TYPE not like", value, "optionType");
            return (Criteria) this;
        }

        public Criteria andOptionTypeIn(List<String> values) {
            addCriterion("OPTION_TYPE in", values, "optionType");
            return (Criteria) this;
        }

        public Criteria andOptionTypeNotIn(List<String> values) {
            addCriterion("OPTION_TYPE not in", values, "optionType");
            return (Criteria) this;
        }

        public Criteria andOptionTypeBetween(String value1, String value2) {
            addCriterion("OPTION_TYPE between", value1, value2, "optionType");
            return (Criteria) this;
        }

        public Criteria andOptionTypeNotBetween(String value1, String value2) {
            addCriterion("OPTION_TYPE not between", value1, value2, "optionType");
            return (Criteria) this;
        }

        public Criteria andExpiryDateIsNull() {
            addCriterion("EXPIRY_DATE is null");
            return (Criteria) this;
        }

        public Criteria andExpiryDateIsNotNull() {
            addCriterion("EXPIRY_DATE is not null");
            return (Criteria) this;
        }

        public Criteria andExpiryDateEqualTo(String value) {
            addCriterion("EXPIRY_DATE =", value, "expiryDate");
            return (Criteria) this;
        }

        public Criteria andExpiryDateNotEqualTo(String value) {
            addCriterion("EXPIRY_DATE <>", value, "expiryDate");
            return (Criteria) this;
        }

        public Criteria andExpiryDateGreaterThan(String value) {
            addCriterion("EXPIRY_DATE >", value, "expiryDate");
            return (Criteria) this;
        }

        public Criteria andExpiryDateGreaterThanOrEqualTo(String value) {
            addCriterion("EXPIRY_DATE >=", value, "expiryDate");
            return (Criteria) this;
        }

        public Criteria andExpiryDateLessThan(String value) {
            addCriterion("EXPIRY_DATE <", value, "expiryDate");
            return (Criteria) this;
        }

        public Criteria andExpiryDateLessThanOrEqualTo(String value) {
            addCriterion("EXPIRY_DATE <=", value, "expiryDate");
            return (Criteria) this;
        }

        public Criteria andExpiryDateLike(String value) {
            addCriterion("EXPIRY_DATE like", value, "expiryDate");
            return (Criteria) this;
        }

        public Criteria andExpiryDateNotLike(String value) {
            addCriterion("EXPIRY_DATE not like", value, "expiryDate");
            return (Criteria) this;
        }

        public Criteria andExpiryDateIn(List<String> values) {
            addCriterion("EXPIRY_DATE in", values, "expiryDate");
            return (Criteria) this;
        }

        public Criteria andExpiryDateNotIn(List<String> values) {
            addCriterion("EXPIRY_DATE not in", values, "expiryDate");
            return (Criteria) this;
        }

        public Criteria andExpiryDateBetween(String value1, String value2) {
            addCriterion("EXPIRY_DATE between", value1, value2, "expiryDate");
            return (Criteria) this;
        }

        public Criteria andExpiryDateNotBetween(String value1, String value2) {
            addCriterion("EXPIRY_DATE not between", value1, value2, "expiryDate");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table CONTRACT
     *
     * @mbg.generated do_not_delete_during_merge Mon Aug 27 14:08:14 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table CONTRACT
     *
     * @mbg.generated Mon Aug 27 14:08:14 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}