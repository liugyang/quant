package com.connect.quant.model;

import java.util.ArrayList;
import java.util.List;

public class AccountExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ACCOUNT
     *
     * @mbg.generated Fri Aug 17 14:00:14 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ACCOUNT
     *
     * @mbg.generated Fri Aug 17 14:00:14 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ACCOUNT
     *
     * @mbg.generated Fri Aug 17 14:00:14 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ACCOUNT
     *
     * @mbg.generated Fri Aug 17 14:00:14 CST 2018
     */
    public AccountExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ACCOUNT
     *
     * @mbg.generated Fri Aug 17 14:00:14 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ACCOUNT
     *
     * @mbg.generated Fri Aug 17 14:00:14 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ACCOUNT
     *
     * @mbg.generated Fri Aug 17 14:00:14 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ACCOUNT
     *
     * @mbg.generated Fri Aug 17 14:00:14 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ACCOUNT
     *
     * @mbg.generated Fri Aug 17 14:00:14 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ACCOUNT
     *
     * @mbg.generated Fri Aug 17 14:00:14 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ACCOUNT
     *
     * @mbg.generated Fri Aug 17 14:00:14 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ACCOUNT
     *
     * @mbg.generated Fri Aug 17 14:00:14 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ACCOUNT
     *
     * @mbg.generated Fri Aug 17 14:00:14 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ACCOUNT
     *
     * @mbg.generated Fri Aug 17 14:00:14 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ACCOUNT
     *
     * @mbg.generated Fri Aug 17 14:00:14 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andSnoIsNull() {
            addCriterion("SNO is null");
            return (Criteria) this;
        }

        public Criteria andSnoIsNotNull() {
            addCriterion("SNO is not null");
            return (Criteria) this;
        }

        public Criteria andSnoEqualTo(Integer value) {
            addCriterion("SNO =", value, "sno");
            return (Criteria) this;
        }

        public Criteria andSnoNotEqualTo(Integer value) {
            addCriterion("SNO <>", value, "sno");
            return (Criteria) this;
        }

        public Criteria andSnoGreaterThan(Integer value) {
            addCriterion("SNO >", value, "sno");
            return (Criteria) this;
        }

        public Criteria andSnoGreaterThanOrEqualTo(Integer value) {
            addCriterion("SNO >=", value, "sno");
            return (Criteria) this;
        }

        public Criteria andSnoLessThan(Integer value) {
            addCriterion("SNO <", value, "sno");
            return (Criteria) this;
        }

        public Criteria andSnoLessThanOrEqualTo(Integer value) {
            addCriterion("SNO <=", value, "sno");
            return (Criteria) this;
        }

        public Criteria andSnoIn(List<Integer> values) {
            addCriterion("SNO in", values, "sno");
            return (Criteria) this;
        }

        public Criteria andSnoNotIn(List<Integer> values) {
            addCriterion("SNO not in", values, "sno");
            return (Criteria) this;
        }

        public Criteria andSnoBetween(Integer value1, Integer value2) {
            addCriterion("SNO between", value1, value2, "sno");
            return (Criteria) this;
        }

        public Criteria andSnoNotBetween(Integer value1, Integer value2) {
            addCriterion("SNO not between", value1, value2, "sno");
            return (Criteria) this;
        }

        public Criteria andAccountIdIsNull() {
            addCriterion("ACCOUNT_ID is null");
            return (Criteria) this;
        }

        public Criteria andAccountIdIsNotNull() {
            addCriterion("ACCOUNT_ID is not null");
            return (Criteria) this;
        }

        public Criteria andAccountIdEqualTo(String value) {
            addCriterion("ACCOUNT_ID =", value, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdNotEqualTo(String value) {
            addCriterion("ACCOUNT_ID <>", value, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdGreaterThan(String value) {
            addCriterion("ACCOUNT_ID >", value, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdGreaterThanOrEqualTo(String value) {
            addCriterion("ACCOUNT_ID >=", value, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdLessThan(String value) {
            addCriterion("ACCOUNT_ID <", value, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdLessThanOrEqualTo(String value) {
            addCriterion("ACCOUNT_ID <=", value, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdLike(String value) {
            addCriterion("ACCOUNT_ID like", value, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdNotLike(String value) {
            addCriterion("ACCOUNT_ID not like", value, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdIn(List<String> values) {
            addCriterion("ACCOUNT_ID in", values, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdNotIn(List<String> values) {
            addCriterion("ACCOUNT_ID not in", values, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdBetween(String value1, String value2) {
            addCriterion("ACCOUNT_ID between", value1, value2, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdNotBetween(String value1, String value2) {
            addCriterion("ACCOUNT_ID not between", value1, value2, "accountId");
            return (Criteria) this;
        }

        public Criteria andVtAccountIdIsNull() {
            addCriterion("VT_ACCOUNT_ID is null");
            return (Criteria) this;
        }

        public Criteria andVtAccountIdIsNotNull() {
            addCriterion("VT_ACCOUNT_ID is not null");
            return (Criteria) this;
        }

        public Criteria andVtAccountIdEqualTo(String value) {
            addCriterion("VT_ACCOUNT_ID =", value, "vtAccountId");
            return (Criteria) this;
        }

        public Criteria andVtAccountIdNotEqualTo(String value) {
            addCriterion("VT_ACCOUNT_ID <>", value, "vtAccountId");
            return (Criteria) this;
        }

        public Criteria andVtAccountIdGreaterThan(String value) {
            addCriterion("VT_ACCOUNT_ID >", value, "vtAccountId");
            return (Criteria) this;
        }

        public Criteria andVtAccountIdGreaterThanOrEqualTo(String value) {
            addCriterion("VT_ACCOUNT_ID >=", value, "vtAccountId");
            return (Criteria) this;
        }

        public Criteria andVtAccountIdLessThan(String value) {
            addCriterion("VT_ACCOUNT_ID <", value, "vtAccountId");
            return (Criteria) this;
        }

        public Criteria andVtAccountIdLessThanOrEqualTo(String value) {
            addCriterion("VT_ACCOUNT_ID <=", value, "vtAccountId");
            return (Criteria) this;
        }

        public Criteria andVtAccountIdLike(String value) {
            addCriterion("VT_ACCOUNT_ID like", value, "vtAccountId");
            return (Criteria) this;
        }

        public Criteria andVtAccountIdNotLike(String value) {
            addCriterion("VT_ACCOUNT_ID not like", value, "vtAccountId");
            return (Criteria) this;
        }

        public Criteria andVtAccountIdIn(List<String> values) {
            addCriterion("VT_ACCOUNT_ID in", values, "vtAccountId");
            return (Criteria) this;
        }

        public Criteria andVtAccountIdNotIn(List<String> values) {
            addCriterion("VT_ACCOUNT_ID not in", values, "vtAccountId");
            return (Criteria) this;
        }

        public Criteria andVtAccountIdBetween(String value1, String value2) {
            addCriterion("VT_ACCOUNT_ID between", value1, value2, "vtAccountId");
            return (Criteria) this;
        }

        public Criteria andVtAccountIdNotBetween(String value1, String value2) {
            addCriterion("VT_ACCOUNT_ID not between", value1, value2, "vtAccountId");
            return (Criteria) this;
        }

        public Criteria andPreBalanceIsNull() {
            addCriterion("PRE_BALANCE is null");
            return (Criteria) this;
        }

        public Criteria andPreBalanceIsNotNull() {
            addCriterion("PRE_BALANCE is not null");
            return (Criteria) this;
        }

        public Criteria andPreBalanceEqualTo(Double value) {
            addCriterion("PRE_BALANCE =", value, "preBalance");
            return (Criteria) this;
        }

        public Criteria andPreBalanceNotEqualTo(Double value) {
            addCriterion("PRE_BALANCE <>", value, "preBalance");
            return (Criteria) this;
        }

        public Criteria andPreBalanceGreaterThan(Double value) {
            addCriterion("PRE_BALANCE >", value, "preBalance");
            return (Criteria) this;
        }

        public Criteria andPreBalanceGreaterThanOrEqualTo(Double value) {
            addCriterion("PRE_BALANCE >=", value, "preBalance");
            return (Criteria) this;
        }

        public Criteria andPreBalanceLessThan(Double value) {
            addCriterion("PRE_BALANCE <", value, "preBalance");
            return (Criteria) this;
        }

        public Criteria andPreBalanceLessThanOrEqualTo(Double value) {
            addCriterion("PRE_BALANCE <=", value, "preBalance");
            return (Criteria) this;
        }

        public Criteria andPreBalanceIn(List<Double> values) {
            addCriterion("PRE_BALANCE in", values, "preBalance");
            return (Criteria) this;
        }

        public Criteria andPreBalanceNotIn(List<Double> values) {
            addCriterion("PRE_BALANCE not in", values, "preBalance");
            return (Criteria) this;
        }

        public Criteria andPreBalanceBetween(Double value1, Double value2) {
            addCriterion("PRE_BALANCE between", value1, value2, "preBalance");
            return (Criteria) this;
        }

        public Criteria andPreBalanceNotBetween(Double value1, Double value2) {
            addCriterion("PRE_BALANCE not between", value1, value2, "preBalance");
            return (Criteria) this;
        }

        public Criteria andBalanceIsNull() {
            addCriterion("BALANCE is null");
            return (Criteria) this;
        }

        public Criteria andBalanceIsNotNull() {
            addCriterion("BALANCE is not null");
            return (Criteria) this;
        }

        public Criteria andBalanceEqualTo(Double value) {
            addCriterion("BALANCE =", value, "balance");
            return (Criteria) this;
        }

        public Criteria andBalanceNotEqualTo(Double value) {
            addCriterion("BALANCE <>", value, "balance");
            return (Criteria) this;
        }

        public Criteria andBalanceGreaterThan(Double value) {
            addCriterion("BALANCE >", value, "balance");
            return (Criteria) this;
        }

        public Criteria andBalanceGreaterThanOrEqualTo(Double value) {
            addCriterion("BALANCE >=", value, "balance");
            return (Criteria) this;
        }

        public Criteria andBalanceLessThan(Double value) {
            addCriterion("BALANCE <", value, "balance");
            return (Criteria) this;
        }

        public Criteria andBalanceLessThanOrEqualTo(Double value) {
            addCriterion("BALANCE <=", value, "balance");
            return (Criteria) this;
        }

        public Criteria andBalanceIn(List<Double> values) {
            addCriterion("BALANCE in", values, "balance");
            return (Criteria) this;
        }

        public Criteria andBalanceNotIn(List<Double> values) {
            addCriterion("BALANCE not in", values, "balance");
            return (Criteria) this;
        }

        public Criteria andBalanceBetween(Double value1, Double value2) {
            addCriterion("BALANCE between", value1, value2, "balance");
            return (Criteria) this;
        }

        public Criteria andBalanceNotBetween(Double value1, Double value2) {
            addCriterion("BALANCE not between", value1, value2, "balance");
            return (Criteria) this;
        }

        public Criteria andAvailableIsNull() {
            addCriterion("AVAILABLE is null");
            return (Criteria) this;
        }

        public Criteria andAvailableIsNotNull() {
            addCriterion("AVAILABLE is not null");
            return (Criteria) this;
        }

        public Criteria andAvailableEqualTo(Double value) {
            addCriterion("AVAILABLE =", value, "available");
            return (Criteria) this;
        }

        public Criteria andAvailableNotEqualTo(Double value) {
            addCriterion("AVAILABLE <>", value, "available");
            return (Criteria) this;
        }

        public Criteria andAvailableGreaterThan(Double value) {
            addCriterion("AVAILABLE >", value, "available");
            return (Criteria) this;
        }

        public Criteria andAvailableGreaterThanOrEqualTo(Double value) {
            addCriterion("AVAILABLE >=", value, "available");
            return (Criteria) this;
        }

        public Criteria andAvailableLessThan(Double value) {
            addCriterion("AVAILABLE <", value, "available");
            return (Criteria) this;
        }

        public Criteria andAvailableLessThanOrEqualTo(Double value) {
            addCriterion("AVAILABLE <=", value, "available");
            return (Criteria) this;
        }

        public Criteria andAvailableIn(List<Double> values) {
            addCriterion("AVAILABLE in", values, "available");
            return (Criteria) this;
        }

        public Criteria andAvailableNotIn(List<Double> values) {
            addCriterion("AVAILABLE not in", values, "available");
            return (Criteria) this;
        }

        public Criteria andAvailableBetween(Double value1, Double value2) {
            addCriterion("AVAILABLE between", value1, value2, "available");
            return (Criteria) this;
        }

        public Criteria andAvailableNotBetween(Double value1, Double value2) {
            addCriterion("AVAILABLE not between", value1, value2, "available");
            return (Criteria) this;
        }

        public Criteria andCommissionIsNull() {
            addCriterion("COMMISSION is null");
            return (Criteria) this;
        }

        public Criteria andCommissionIsNotNull() {
            addCriterion("COMMISSION is not null");
            return (Criteria) this;
        }

        public Criteria andCommissionEqualTo(Double value) {
            addCriterion("COMMISSION =", value, "commission");
            return (Criteria) this;
        }

        public Criteria andCommissionNotEqualTo(Double value) {
            addCriterion("COMMISSION <>", value, "commission");
            return (Criteria) this;
        }

        public Criteria andCommissionGreaterThan(Double value) {
            addCriterion("COMMISSION >", value, "commission");
            return (Criteria) this;
        }

        public Criteria andCommissionGreaterThanOrEqualTo(Double value) {
            addCriterion("COMMISSION >=", value, "commission");
            return (Criteria) this;
        }

        public Criteria andCommissionLessThan(Double value) {
            addCriterion("COMMISSION <", value, "commission");
            return (Criteria) this;
        }

        public Criteria andCommissionLessThanOrEqualTo(Double value) {
            addCriterion("COMMISSION <=", value, "commission");
            return (Criteria) this;
        }

        public Criteria andCommissionIn(List<Double> values) {
            addCriterion("COMMISSION in", values, "commission");
            return (Criteria) this;
        }

        public Criteria andCommissionNotIn(List<Double> values) {
            addCriterion("COMMISSION not in", values, "commission");
            return (Criteria) this;
        }

        public Criteria andCommissionBetween(Double value1, Double value2) {
            addCriterion("COMMISSION between", value1, value2, "commission");
            return (Criteria) this;
        }

        public Criteria andCommissionNotBetween(Double value1, Double value2) {
            addCriterion("COMMISSION not between", value1, value2, "commission");
            return (Criteria) this;
        }

        public Criteria andMarginIsNull() {
            addCriterion("MARGIN is null");
            return (Criteria) this;
        }

        public Criteria andMarginIsNotNull() {
            addCriterion("MARGIN is not null");
            return (Criteria) this;
        }

        public Criteria andMarginEqualTo(Double value) {
            addCriterion("MARGIN =", value, "margin");
            return (Criteria) this;
        }

        public Criteria andMarginNotEqualTo(Double value) {
            addCriterion("MARGIN <>", value, "margin");
            return (Criteria) this;
        }

        public Criteria andMarginGreaterThan(Double value) {
            addCriterion("MARGIN >", value, "margin");
            return (Criteria) this;
        }

        public Criteria andMarginGreaterThanOrEqualTo(Double value) {
            addCriterion("MARGIN >=", value, "margin");
            return (Criteria) this;
        }

        public Criteria andMarginLessThan(Double value) {
            addCriterion("MARGIN <", value, "margin");
            return (Criteria) this;
        }

        public Criteria andMarginLessThanOrEqualTo(Double value) {
            addCriterion("MARGIN <=", value, "margin");
            return (Criteria) this;
        }

        public Criteria andMarginIn(List<Double> values) {
            addCriterion("MARGIN in", values, "margin");
            return (Criteria) this;
        }

        public Criteria andMarginNotIn(List<Double> values) {
            addCriterion("MARGIN not in", values, "margin");
            return (Criteria) this;
        }

        public Criteria andMarginBetween(Double value1, Double value2) {
            addCriterion("MARGIN between", value1, value2, "margin");
            return (Criteria) this;
        }

        public Criteria andMarginNotBetween(Double value1, Double value2) {
            addCriterion("MARGIN not between", value1, value2, "margin");
            return (Criteria) this;
        }

        public Criteria andCloseProfitIsNull() {
            addCriterion("CLOSE_PROFIT is null");
            return (Criteria) this;
        }

        public Criteria andCloseProfitIsNotNull() {
            addCriterion("CLOSE_PROFIT is not null");
            return (Criteria) this;
        }

        public Criteria andCloseProfitEqualTo(Double value) {
            addCriterion("CLOSE_PROFIT =", value, "closeProfit");
            return (Criteria) this;
        }

        public Criteria andCloseProfitNotEqualTo(Double value) {
            addCriterion("CLOSE_PROFIT <>", value, "closeProfit");
            return (Criteria) this;
        }

        public Criteria andCloseProfitGreaterThan(Double value) {
            addCriterion("CLOSE_PROFIT >", value, "closeProfit");
            return (Criteria) this;
        }

        public Criteria andCloseProfitGreaterThanOrEqualTo(Double value) {
            addCriterion("CLOSE_PROFIT >=", value, "closeProfit");
            return (Criteria) this;
        }

        public Criteria andCloseProfitLessThan(Double value) {
            addCriterion("CLOSE_PROFIT <", value, "closeProfit");
            return (Criteria) this;
        }

        public Criteria andCloseProfitLessThanOrEqualTo(Double value) {
            addCriterion("CLOSE_PROFIT <=", value, "closeProfit");
            return (Criteria) this;
        }

        public Criteria andCloseProfitIn(List<Double> values) {
            addCriterion("CLOSE_PROFIT in", values, "closeProfit");
            return (Criteria) this;
        }

        public Criteria andCloseProfitNotIn(List<Double> values) {
            addCriterion("CLOSE_PROFIT not in", values, "closeProfit");
            return (Criteria) this;
        }

        public Criteria andCloseProfitBetween(Double value1, Double value2) {
            addCriterion("CLOSE_PROFIT between", value1, value2, "closeProfit");
            return (Criteria) this;
        }

        public Criteria andCloseProfitNotBetween(Double value1, Double value2) {
            addCriterion("CLOSE_PROFIT not between", value1, value2, "closeProfit");
            return (Criteria) this;
        }

        public Criteria andPositionProfitIsNull() {
            addCriterion("POSITION_PROFIT is null");
            return (Criteria) this;
        }

        public Criteria andPositionProfitIsNotNull() {
            addCriterion("POSITION_PROFIT is not null");
            return (Criteria) this;
        }

        public Criteria andPositionProfitEqualTo(Double value) {
            addCriterion("POSITION_PROFIT =", value, "positionProfit");
            return (Criteria) this;
        }

        public Criteria andPositionProfitNotEqualTo(Double value) {
            addCriterion("POSITION_PROFIT <>", value, "positionProfit");
            return (Criteria) this;
        }

        public Criteria andPositionProfitGreaterThan(Double value) {
            addCriterion("POSITION_PROFIT >", value, "positionProfit");
            return (Criteria) this;
        }

        public Criteria andPositionProfitGreaterThanOrEqualTo(Double value) {
            addCriterion("POSITION_PROFIT >=", value, "positionProfit");
            return (Criteria) this;
        }

        public Criteria andPositionProfitLessThan(Double value) {
            addCriterion("POSITION_PROFIT <", value, "positionProfit");
            return (Criteria) this;
        }

        public Criteria andPositionProfitLessThanOrEqualTo(Double value) {
            addCriterion("POSITION_PROFIT <=", value, "positionProfit");
            return (Criteria) this;
        }

        public Criteria andPositionProfitIn(List<Double> values) {
            addCriterion("POSITION_PROFIT in", values, "positionProfit");
            return (Criteria) this;
        }

        public Criteria andPositionProfitNotIn(List<Double> values) {
            addCriterion("POSITION_PROFIT not in", values, "positionProfit");
            return (Criteria) this;
        }

        public Criteria andPositionProfitBetween(Double value1, Double value2) {
            addCriterion("POSITION_PROFIT between", value1, value2, "positionProfit");
            return (Criteria) this;
        }

        public Criteria andPositionProfitNotBetween(Double value1, Double value2) {
            addCriterion("POSITION_PROFIT not between", value1, value2, "positionProfit");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ACCOUNT
     *
     * @mbg.generated do_not_delete_during_merge Fri Aug 17 14:00:14 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ACCOUNT
     *
     * @mbg.generated Fri Aug 17 14:00:14 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}