package com.connect.quant.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class FutureQuoteExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table FUTURE_QUOTE
	 * @mbg.generated  Fri Aug 03 13:21:02 CST 2018
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table FUTURE_QUOTE
	 * @mbg.generated  Fri Aug 03 13:21:02 CST 2018
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table FUTURE_QUOTE
	 * @mbg.generated  Fri Aug 03 13:21:02 CST 2018
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table FUTURE_QUOTE
	 * @mbg.generated  Fri Aug 03 13:21:02 CST 2018
	 */
	public FutureQuoteExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table FUTURE_QUOTE
	 * @mbg.generated  Fri Aug 03 13:21:02 CST 2018
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table FUTURE_QUOTE
	 * @mbg.generated  Fri Aug 03 13:21:02 CST 2018
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table FUTURE_QUOTE
	 * @mbg.generated  Fri Aug 03 13:21:02 CST 2018
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table FUTURE_QUOTE
	 * @mbg.generated  Fri Aug 03 13:21:02 CST 2018
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table FUTURE_QUOTE
	 * @mbg.generated  Fri Aug 03 13:21:02 CST 2018
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table FUTURE_QUOTE
	 * @mbg.generated  Fri Aug 03 13:21:02 CST 2018
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table FUTURE_QUOTE
	 * @mbg.generated  Fri Aug 03 13:21:02 CST 2018
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table FUTURE_QUOTE
	 * @mbg.generated  Fri Aug 03 13:21:02 CST 2018
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table FUTURE_QUOTE
	 * @mbg.generated  Fri Aug 03 13:21:02 CST 2018
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table FUTURE_QUOTE
	 * @mbg.generated  Fri Aug 03 13:21:02 CST 2018
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table FUTURE_QUOTE
	 * @mbg.generated  Fri Aug 03 13:21:02 CST 2018
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		protected void addCriterionForJDBCDate(String condition, Date value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value.getTime()), property);
		}

		protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
		}

		protected void addCriterionForJDBCTime(String condition, Date value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Time(value.getTime()), property);
		}

		protected void addCriterionForJDBCTime(String condition, List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			List<java.sql.Time> timeList = new ArrayList<java.sql.Time>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				timeList.add(new java.sql.Time(iter.next().getTime()));
			}
			addCriterion(condition, timeList, property);
		}

		protected void addCriterionForJDBCTime(String condition, Date value1, Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Time(value1.getTime()), new java.sql.Time(value2.getTime()), property);
		}

		public Criteria andSnoIsNull() {
			addCriterion("SNO is null");
			return (Criteria) this;
		}

		public Criteria andSnoIsNotNull() {
			addCriterion("SNO is not null");
			return (Criteria) this;
		}

		public Criteria andSnoEqualTo(Integer value) {
			addCriterion("SNO =", value, "sno");
			return (Criteria) this;
		}

		public Criteria andSnoNotEqualTo(Integer value) {
			addCriterion("SNO <>", value, "sno");
			return (Criteria) this;
		}

		public Criteria andSnoGreaterThan(Integer value) {
			addCriterion("SNO >", value, "sno");
			return (Criteria) this;
		}

		public Criteria andSnoGreaterThanOrEqualTo(Integer value) {
			addCriterion("SNO >=", value, "sno");
			return (Criteria) this;
		}

		public Criteria andSnoLessThan(Integer value) {
			addCriterion("SNO <", value, "sno");
			return (Criteria) this;
		}

		public Criteria andSnoLessThanOrEqualTo(Integer value) {
			addCriterion("SNO <=", value, "sno");
			return (Criteria) this;
		}

		public Criteria andSnoIn(List<Integer> values) {
			addCriterion("SNO in", values, "sno");
			return (Criteria) this;
		}

		public Criteria andSnoNotIn(List<Integer> values) {
			addCriterion("SNO not in", values, "sno");
			return (Criteria) this;
		}

		public Criteria andSnoBetween(Integer value1, Integer value2) {
			addCriterion("SNO between", value1, value2, "sno");
			return (Criteria) this;
		}

		public Criteria andSnoNotBetween(Integer value1, Integer value2) {
			addCriterion("SNO not between", value1, value2, "sno");
			return (Criteria) this;
		}

		public Criteria andNameIsNull() {
			addCriterion("NAME is null");
			return (Criteria) this;
		}

		public Criteria andNameIsNotNull() {
			addCriterion("NAME is not null");
			return (Criteria) this;
		}

		public Criteria andNameEqualTo(String value) {
			addCriterion("NAME =", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotEqualTo(String value) {
			addCriterion("NAME <>", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameGreaterThan(String value) {
			addCriterion("NAME >", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameGreaterThanOrEqualTo(String value) {
			addCriterion("NAME >=", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameLessThan(String value) {
			addCriterion("NAME <", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameLessThanOrEqualTo(String value) {
			addCriterion("NAME <=", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameLike(String value) {
			addCriterion("NAME like", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotLike(String value) {
			addCriterion("NAME not like", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameIn(List<String> values) {
			addCriterion("NAME in", values, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotIn(List<String> values) {
			addCriterion("NAME not in", values, "name");
			return (Criteria) this;
		}

		public Criteria andNameBetween(String value1, String value2) {
			addCriterion("NAME between", value1, value2, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotBetween(String value1, String value2) {
			addCriterion("NAME not between", value1, value2, "name");
			return (Criteria) this;
		}

		public Criteria andOpeningpriceIsNull() {
			addCriterion("OPENINGPRICE is null");
			return (Criteria) this;
		}

		public Criteria andOpeningpriceIsNotNull() {
			addCriterion("OPENINGPRICE is not null");
			return (Criteria) this;
		}

		public Criteria andOpeningpriceEqualTo(Double value) {
			addCriterion("OPENINGPRICE =", value, "openingprice");
			return (Criteria) this;
		}

		public Criteria andOpeningpriceNotEqualTo(Double value) {
			addCriterion("OPENINGPRICE <>", value, "openingprice");
			return (Criteria) this;
		}

		public Criteria andOpeningpriceGreaterThan(Double value) {
			addCriterion("OPENINGPRICE >", value, "openingprice");
			return (Criteria) this;
		}

		public Criteria andOpeningpriceGreaterThanOrEqualTo(Double value) {
			addCriterion("OPENINGPRICE >=", value, "openingprice");
			return (Criteria) this;
		}

		public Criteria andOpeningpriceLessThan(Double value) {
			addCriterion("OPENINGPRICE <", value, "openingprice");
			return (Criteria) this;
		}

		public Criteria andOpeningpriceLessThanOrEqualTo(Double value) {
			addCriterion("OPENINGPRICE <=", value, "openingprice");
			return (Criteria) this;
		}

		public Criteria andOpeningpriceIn(List<Double> values) {
			addCriterion("OPENINGPRICE in", values, "openingprice");
			return (Criteria) this;
		}

		public Criteria andOpeningpriceNotIn(List<Double> values) {
			addCriterion("OPENINGPRICE not in", values, "openingprice");
			return (Criteria) this;
		}

		public Criteria andOpeningpriceBetween(Double value1, Double value2) {
			addCriterion("OPENINGPRICE between", value1, value2, "openingprice");
			return (Criteria) this;
		}

		public Criteria andOpeningpriceNotBetween(Double value1, Double value2) {
			addCriterion("OPENINGPRICE not between", value1, value2, "openingprice");
			return (Criteria) this;
		}

		public Criteria andClosingpriceIsNull() {
			addCriterion("CLOSINGPRICE is null");
			return (Criteria) this;
		}

		public Criteria andClosingpriceIsNotNull() {
			addCriterion("CLOSINGPRICE is not null");
			return (Criteria) this;
		}

		public Criteria andClosingpriceEqualTo(Double value) {
			addCriterion("CLOSINGPRICE =", value, "closingprice");
			return (Criteria) this;
		}

		public Criteria andClosingpriceNotEqualTo(Double value) {
			addCriterion("CLOSINGPRICE <>", value, "closingprice");
			return (Criteria) this;
		}

		public Criteria andClosingpriceGreaterThan(Double value) {
			addCriterion("CLOSINGPRICE >", value, "closingprice");
			return (Criteria) this;
		}

		public Criteria andClosingpriceGreaterThanOrEqualTo(Double value) {
			addCriterion("CLOSINGPRICE >=", value, "closingprice");
			return (Criteria) this;
		}

		public Criteria andClosingpriceLessThan(Double value) {
			addCriterion("CLOSINGPRICE <", value, "closingprice");
			return (Criteria) this;
		}

		public Criteria andClosingpriceLessThanOrEqualTo(Double value) {
			addCriterion("CLOSINGPRICE <=", value, "closingprice");
			return (Criteria) this;
		}

		public Criteria andClosingpriceIn(List<Double> values) {
			addCriterion("CLOSINGPRICE in", values, "closingprice");
			return (Criteria) this;
		}

		public Criteria andClosingpriceNotIn(List<Double> values) {
			addCriterion("CLOSINGPRICE not in", values, "closingprice");
			return (Criteria) this;
		}

		public Criteria andClosingpriceBetween(Double value1, Double value2) {
			addCriterion("CLOSINGPRICE between", value1, value2, "closingprice");
			return (Criteria) this;
		}

		public Criteria andClosingpriceNotBetween(Double value1, Double value2) {
			addCriterion("CLOSINGPRICE not between", value1, value2, "closingprice");
			return (Criteria) this;
		}

		public Criteria andCurrentpriceIsNull() {
			addCriterion("CURRENTPRICE is null");
			return (Criteria) this;
		}

		public Criteria andCurrentpriceIsNotNull() {
			addCriterion("CURRENTPRICE is not null");
			return (Criteria) this;
		}

		public Criteria andCurrentpriceEqualTo(Double value) {
			addCriterion("CURRENTPRICE =", value, "currentprice");
			return (Criteria) this;
		}

		public Criteria andCurrentpriceNotEqualTo(Double value) {
			addCriterion("CURRENTPRICE <>", value, "currentprice");
			return (Criteria) this;
		}

		public Criteria andCurrentpriceGreaterThan(Double value) {
			addCriterion("CURRENTPRICE >", value, "currentprice");
			return (Criteria) this;
		}

		public Criteria andCurrentpriceGreaterThanOrEqualTo(Double value) {
			addCriterion("CURRENTPRICE >=", value, "currentprice");
			return (Criteria) this;
		}

		public Criteria andCurrentpriceLessThan(Double value) {
			addCriterion("CURRENTPRICE <", value, "currentprice");
			return (Criteria) this;
		}

		public Criteria andCurrentpriceLessThanOrEqualTo(Double value) {
			addCriterion("CURRENTPRICE <=", value, "currentprice");
			return (Criteria) this;
		}

		public Criteria andCurrentpriceIn(List<Double> values) {
			addCriterion("CURRENTPRICE in", values, "currentprice");
			return (Criteria) this;
		}

		public Criteria andCurrentpriceNotIn(List<Double> values) {
			addCriterion("CURRENTPRICE not in", values, "currentprice");
			return (Criteria) this;
		}

		public Criteria andCurrentpriceBetween(Double value1, Double value2) {
			addCriterion("CURRENTPRICE between", value1, value2, "currentprice");
			return (Criteria) this;
		}

		public Criteria andCurrentpriceNotBetween(Double value1, Double value2) {
			addCriterion("CURRENTPRICE not between", value1, value2, "currentprice");
			return (Criteria) this;
		}

		public Criteria andHighestpriceIsNull() {
			addCriterion("HIGHESTPRICE is null");
			return (Criteria) this;
		}

		public Criteria andHighestpriceIsNotNull() {
			addCriterion("HIGHESTPRICE is not null");
			return (Criteria) this;
		}

		public Criteria andHighestpriceEqualTo(Double value) {
			addCriterion("HIGHESTPRICE =", value, "highestprice");
			return (Criteria) this;
		}

		public Criteria andHighestpriceNotEqualTo(Double value) {
			addCriterion("HIGHESTPRICE <>", value, "highestprice");
			return (Criteria) this;
		}

		public Criteria andHighestpriceGreaterThan(Double value) {
			addCriterion("HIGHESTPRICE >", value, "highestprice");
			return (Criteria) this;
		}

		public Criteria andHighestpriceGreaterThanOrEqualTo(Double value) {
			addCriterion("HIGHESTPRICE >=", value, "highestprice");
			return (Criteria) this;
		}

		public Criteria andHighestpriceLessThan(Double value) {
			addCriterion("HIGHESTPRICE <", value, "highestprice");
			return (Criteria) this;
		}

		public Criteria andHighestpriceLessThanOrEqualTo(Double value) {
			addCriterion("HIGHESTPRICE <=", value, "highestprice");
			return (Criteria) this;
		}

		public Criteria andHighestpriceIn(List<Double> values) {
			addCriterion("HIGHESTPRICE in", values, "highestprice");
			return (Criteria) this;
		}

		public Criteria andHighestpriceNotIn(List<Double> values) {
			addCriterion("HIGHESTPRICE not in", values, "highestprice");
			return (Criteria) this;
		}

		public Criteria andHighestpriceBetween(Double value1, Double value2) {
			addCriterion("HIGHESTPRICE between", value1, value2, "highestprice");
			return (Criteria) this;
		}

		public Criteria andHighestpriceNotBetween(Double value1, Double value2) {
			addCriterion("HIGHESTPRICE not between", value1, value2, "highestprice");
			return (Criteria) this;
		}

		public Criteria andLowestpriceIsNull() {
			addCriterion("LOWESTPRICE is null");
			return (Criteria) this;
		}

		public Criteria andLowestpriceIsNotNull() {
			addCriterion("LOWESTPRICE is not null");
			return (Criteria) this;
		}

		public Criteria andLowestpriceEqualTo(Double value) {
			addCriterion("LOWESTPRICE =", value, "lowestprice");
			return (Criteria) this;
		}

		public Criteria andLowestpriceNotEqualTo(Double value) {
			addCriterion("LOWESTPRICE <>", value, "lowestprice");
			return (Criteria) this;
		}

		public Criteria andLowestpriceGreaterThan(Double value) {
			addCriterion("LOWESTPRICE >", value, "lowestprice");
			return (Criteria) this;
		}

		public Criteria andLowestpriceGreaterThanOrEqualTo(Double value) {
			addCriterion("LOWESTPRICE >=", value, "lowestprice");
			return (Criteria) this;
		}

		public Criteria andLowestpriceLessThan(Double value) {
			addCriterion("LOWESTPRICE <", value, "lowestprice");
			return (Criteria) this;
		}

		public Criteria andLowestpriceLessThanOrEqualTo(Double value) {
			addCriterion("LOWESTPRICE <=", value, "lowestprice");
			return (Criteria) this;
		}

		public Criteria andLowestpriceIn(List<Double> values) {
			addCriterion("LOWESTPRICE in", values, "lowestprice");
			return (Criteria) this;
		}

		public Criteria andLowestpriceNotIn(List<Double> values) {
			addCriterion("LOWESTPRICE not in", values, "lowestprice");
			return (Criteria) this;
		}

		public Criteria andLowestpriceBetween(Double value1, Double value2) {
			addCriterion("LOWESTPRICE between", value1, value2, "lowestprice");
			return (Criteria) this;
		}

		public Criteria andLowestpriceNotBetween(Double value1, Double value2) {
			addCriterion("LOWESTPRICE not between", value1, value2, "lowestprice");
			return (Criteria) this;
		}

		public Criteria andCompetitivebuypriceIsNull() {
			addCriterion("COMPETITIVEBUYPRICE is null");
			return (Criteria) this;
		}

		public Criteria andCompetitivebuypriceIsNotNull() {
			addCriterion("COMPETITIVEBUYPRICE is not null");
			return (Criteria) this;
		}

		public Criteria andCompetitivebuypriceEqualTo(Double value) {
			addCriterion("COMPETITIVEBUYPRICE =", value, "competitivebuyprice");
			return (Criteria) this;
		}

		public Criteria andCompetitivebuypriceNotEqualTo(Double value) {
			addCriterion("COMPETITIVEBUYPRICE <>", value, "competitivebuyprice");
			return (Criteria) this;
		}

		public Criteria andCompetitivebuypriceGreaterThan(Double value) {
			addCriterion("COMPETITIVEBUYPRICE >", value, "competitivebuyprice");
			return (Criteria) this;
		}

		public Criteria andCompetitivebuypriceGreaterThanOrEqualTo(Double value) {
			addCriterion("COMPETITIVEBUYPRICE >=", value, "competitivebuyprice");
			return (Criteria) this;
		}

		public Criteria andCompetitivebuypriceLessThan(Double value) {
			addCriterion("COMPETITIVEBUYPRICE <", value, "competitivebuyprice");
			return (Criteria) this;
		}

		public Criteria andCompetitivebuypriceLessThanOrEqualTo(Double value) {
			addCriterion("COMPETITIVEBUYPRICE <=", value, "competitivebuyprice");
			return (Criteria) this;
		}

		public Criteria andCompetitivebuypriceIn(List<Double> values) {
			addCriterion("COMPETITIVEBUYPRICE in", values, "competitivebuyprice");
			return (Criteria) this;
		}

		public Criteria andCompetitivebuypriceNotIn(List<Double> values) {
			addCriterion("COMPETITIVEBUYPRICE not in", values, "competitivebuyprice");
			return (Criteria) this;
		}

		public Criteria andCompetitivebuypriceBetween(Double value1, Double value2) {
			addCriterion("COMPETITIVEBUYPRICE between", value1, value2, "competitivebuyprice");
			return (Criteria) this;
		}

		public Criteria andCompetitivebuypriceNotBetween(Double value1, Double value2) {
			addCriterion("COMPETITIVEBUYPRICE not between", value1, value2, "competitivebuyprice");
			return (Criteria) this;
		}

		public Criteria andCompetitivesalepriceIsNull() {
			addCriterion("COMPETITIVESALEPRICE is null");
			return (Criteria) this;
		}

		public Criteria andCompetitivesalepriceIsNotNull() {
			addCriterion("COMPETITIVESALEPRICE is not null");
			return (Criteria) this;
		}

		public Criteria andCompetitivesalepriceEqualTo(Double value) {
			addCriterion("COMPETITIVESALEPRICE =", value, "competitivesaleprice");
			return (Criteria) this;
		}

		public Criteria andCompetitivesalepriceNotEqualTo(Double value) {
			addCriterion("COMPETITIVESALEPRICE <>", value, "competitivesaleprice");
			return (Criteria) this;
		}

		public Criteria andCompetitivesalepriceGreaterThan(Double value) {
			addCriterion("COMPETITIVESALEPRICE >", value, "competitivesaleprice");
			return (Criteria) this;
		}

		public Criteria andCompetitivesalepriceGreaterThanOrEqualTo(Double value) {
			addCriterion("COMPETITIVESALEPRICE >=", value, "competitivesaleprice");
			return (Criteria) this;
		}

		public Criteria andCompetitivesalepriceLessThan(Double value) {
			addCriterion("COMPETITIVESALEPRICE <", value, "competitivesaleprice");
			return (Criteria) this;
		}

		public Criteria andCompetitivesalepriceLessThanOrEqualTo(Double value) {
			addCriterion("COMPETITIVESALEPRICE <=", value, "competitivesaleprice");
			return (Criteria) this;
		}

		public Criteria andCompetitivesalepriceIn(List<Double> values) {
			addCriterion("COMPETITIVESALEPRICE in", values, "competitivesaleprice");
			return (Criteria) this;
		}

		public Criteria andCompetitivesalepriceNotIn(List<Double> values) {
			addCriterion("COMPETITIVESALEPRICE not in", values, "competitivesaleprice");
			return (Criteria) this;
		}

		public Criteria andCompetitivesalepriceBetween(Double value1, Double value2) {
			addCriterion("COMPETITIVESALEPRICE between", value1, value2, "competitivesaleprice");
			return (Criteria) this;
		}

		public Criteria andCompetitivesalepriceNotBetween(Double value1, Double value2) {
			addCriterion("COMPETITIVESALEPRICE not between", value1, value2, "competitivesaleprice");
			return (Criteria) this;
		}

		public Criteria andNumberofheldIsNull() {
			addCriterion("NUMBEROFHELD is null");
			return (Criteria) this;
		}

		public Criteria andNumberofheldIsNotNull() {
			addCriterion("NUMBEROFHELD is not null");
			return (Criteria) this;
		}

		public Criteria andNumberofheldEqualTo(Long value) {
			addCriterion("NUMBEROFHELD =", value, "numberofheld");
			return (Criteria) this;
		}

		public Criteria andNumberofheldNotEqualTo(Long value) {
			addCriterion("NUMBEROFHELD <>", value, "numberofheld");
			return (Criteria) this;
		}

		public Criteria andNumberofheldGreaterThan(Long value) {
			addCriterion("NUMBEROFHELD >", value, "numberofheld");
			return (Criteria) this;
		}

		public Criteria andNumberofheldGreaterThanOrEqualTo(Long value) {
			addCriterion("NUMBEROFHELD >=", value, "numberofheld");
			return (Criteria) this;
		}

		public Criteria andNumberofheldLessThan(Long value) {
			addCriterion("NUMBEROFHELD <", value, "numberofheld");
			return (Criteria) this;
		}

		public Criteria andNumberofheldLessThanOrEqualTo(Long value) {
			addCriterion("NUMBEROFHELD <=", value, "numberofheld");
			return (Criteria) this;
		}

		public Criteria andNumberofheldIn(List<Long> values) {
			addCriterion("NUMBEROFHELD in", values, "numberofheld");
			return (Criteria) this;
		}

		public Criteria andNumberofheldNotIn(List<Long> values) {
			addCriterion("NUMBEROFHELD not in", values, "numberofheld");
			return (Criteria) this;
		}

		public Criteria andNumberofheldBetween(Long value1, Long value2) {
			addCriterion("NUMBEROFHELD between", value1, value2, "numberofheld");
			return (Criteria) this;
		}

		public Criteria andNumberofheldNotBetween(Long value1, Long value2) {
			addCriterion("NUMBEROFHELD not between", value1, value2, "numberofheld");
			return (Criteria) this;
		}

		public Criteria andNumberoftradedIsNull() {
			addCriterion("NUMBEROFTRADED is null");
			return (Criteria) this;
		}

		public Criteria andNumberoftradedIsNotNull() {
			addCriterion("NUMBEROFTRADED is not null");
			return (Criteria) this;
		}

		public Criteria andNumberoftradedEqualTo(Long value) {
			addCriterion("NUMBEROFTRADED =", value, "numberoftraded");
			return (Criteria) this;
		}

		public Criteria andNumberoftradedNotEqualTo(Long value) {
			addCriterion("NUMBEROFTRADED <>", value, "numberoftraded");
			return (Criteria) this;
		}

		public Criteria andNumberoftradedGreaterThan(Long value) {
			addCriterion("NUMBEROFTRADED >", value, "numberoftraded");
			return (Criteria) this;
		}

		public Criteria andNumberoftradedGreaterThanOrEqualTo(Long value) {
			addCriterion("NUMBEROFTRADED >=", value, "numberoftraded");
			return (Criteria) this;
		}

		public Criteria andNumberoftradedLessThan(Long value) {
			addCriterion("NUMBEROFTRADED <", value, "numberoftraded");
			return (Criteria) this;
		}

		public Criteria andNumberoftradedLessThanOrEqualTo(Long value) {
			addCriterion("NUMBEROFTRADED <=", value, "numberoftraded");
			return (Criteria) this;
		}

		public Criteria andNumberoftradedIn(List<Long> values) {
			addCriterion("NUMBEROFTRADED in", values, "numberoftraded");
			return (Criteria) this;
		}

		public Criteria andNumberoftradedNotIn(List<Long> values) {
			addCriterion("NUMBEROFTRADED not in", values, "numberoftraded");
			return (Criteria) this;
		}

		public Criteria andNumberoftradedBetween(Long value1, Long value2) {
			addCriterion("NUMBEROFTRADED between", value1, value2, "numberoftraded");
			return (Criteria) this;
		}

		public Criteria andNumberoftradedNotBetween(Long value1, Long value2) {
			addCriterion("NUMBEROFTRADED not between", value1, value2, "numberoftraded");
			return (Criteria) this;
		}

		public Criteria andAmountofbuyIsNull() {
			addCriterion("AMOUNTOFBUY is null");
			return (Criteria) this;
		}

		public Criteria andAmountofbuyIsNotNull() {
			addCriterion("AMOUNTOFBUY is not null");
			return (Criteria) this;
		}

		public Criteria andAmountofbuyEqualTo(Long value) {
			addCriterion("AMOUNTOFBUY =", value, "amountofbuy");
			return (Criteria) this;
		}

		public Criteria andAmountofbuyNotEqualTo(Long value) {
			addCriterion("AMOUNTOFBUY <>", value, "amountofbuy");
			return (Criteria) this;
		}

		public Criteria andAmountofbuyGreaterThan(Long value) {
			addCriterion("AMOUNTOFBUY >", value, "amountofbuy");
			return (Criteria) this;
		}

		public Criteria andAmountofbuyGreaterThanOrEqualTo(Long value) {
			addCriterion("AMOUNTOFBUY >=", value, "amountofbuy");
			return (Criteria) this;
		}

		public Criteria andAmountofbuyLessThan(Long value) {
			addCriterion("AMOUNTOFBUY <", value, "amountofbuy");
			return (Criteria) this;
		}

		public Criteria andAmountofbuyLessThanOrEqualTo(Long value) {
			addCriterion("AMOUNTOFBUY <=", value, "amountofbuy");
			return (Criteria) this;
		}

		public Criteria andAmountofbuyIn(List<Long> values) {
			addCriterion("AMOUNTOFBUY in", values, "amountofbuy");
			return (Criteria) this;
		}

		public Criteria andAmountofbuyNotIn(List<Long> values) {
			addCriterion("AMOUNTOFBUY not in", values, "amountofbuy");
			return (Criteria) this;
		}

		public Criteria andAmountofbuyBetween(Long value1, Long value2) {
			addCriterion("AMOUNTOFBUY between", value1, value2, "amountofbuy");
			return (Criteria) this;
		}

		public Criteria andAmountofbuyNotBetween(Long value1, Long value2) {
			addCriterion("AMOUNTOFBUY not between", value1, value2, "amountofbuy");
			return (Criteria) this;
		}

		public Criteria andPriceofbuy1IsNull() {
			addCriterion("PRICEOFBUY1 is null");
			return (Criteria) this;
		}

		public Criteria andPriceofbuy1IsNotNull() {
			addCriterion("PRICEOFBUY1 is not null");
			return (Criteria) this;
		}

		public Criteria andPriceofbuy1EqualTo(Double value) {
			addCriterion("PRICEOFBUY1 =", value, "priceofbuy1");
			return (Criteria) this;
		}

		public Criteria andPriceofbuy1NotEqualTo(Double value) {
			addCriterion("PRICEOFBUY1 <>", value, "priceofbuy1");
			return (Criteria) this;
		}

		public Criteria andPriceofbuy1GreaterThan(Double value) {
			addCriterion("PRICEOFBUY1 >", value, "priceofbuy1");
			return (Criteria) this;
		}

		public Criteria andPriceofbuy1GreaterThanOrEqualTo(Double value) {
			addCriterion("PRICEOFBUY1 >=", value, "priceofbuy1");
			return (Criteria) this;
		}

		public Criteria andPriceofbuy1LessThan(Double value) {
			addCriterion("PRICEOFBUY1 <", value, "priceofbuy1");
			return (Criteria) this;
		}

		public Criteria andPriceofbuy1LessThanOrEqualTo(Double value) {
			addCriterion("PRICEOFBUY1 <=", value, "priceofbuy1");
			return (Criteria) this;
		}

		public Criteria andPriceofbuy1In(List<Double> values) {
			addCriterion("PRICEOFBUY1 in", values, "priceofbuy1");
			return (Criteria) this;
		}

		public Criteria andPriceofbuy1NotIn(List<Double> values) {
			addCriterion("PRICEOFBUY1 not in", values, "priceofbuy1");
			return (Criteria) this;
		}

		public Criteria andPriceofbuy1Between(Double value1, Double value2) {
			addCriterion("PRICEOFBUY1 between", value1, value2, "priceofbuy1");
			return (Criteria) this;
		}

		public Criteria andPriceofbuy1NotBetween(Double value1, Double value2) {
			addCriterion("PRICEOFBUY1 not between", value1, value2, "priceofbuy1");
			return (Criteria) this;
		}

		public Criteria andPriceofbuy2IsNull() {
			addCriterion("PRICEOFBUY2 is null");
			return (Criteria) this;
		}

		public Criteria andPriceofbuy2IsNotNull() {
			addCriterion("PRICEOFBUY2 is not null");
			return (Criteria) this;
		}

		public Criteria andPriceofbuy2EqualTo(Double value) {
			addCriterion("PRICEOFBUY2 =", value, "priceofbuy2");
			return (Criteria) this;
		}

		public Criteria andPriceofbuy2NotEqualTo(Double value) {
			addCriterion("PRICEOFBUY2 <>", value, "priceofbuy2");
			return (Criteria) this;
		}

		public Criteria andPriceofbuy2GreaterThan(Double value) {
			addCriterion("PRICEOFBUY2 >", value, "priceofbuy2");
			return (Criteria) this;
		}

		public Criteria andPriceofbuy2GreaterThanOrEqualTo(Double value) {
			addCriterion("PRICEOFBUY2 >=", value, "priceofbuy2");
			return (Criteria) this;
		}

		public Criteria andPriceofbuy2LessThan(Double value) {
			addCriterion("PRICEOFBUY2 <", value, "priceofbuy2");
			return (Criteria) this;
		}

		public Criteria andPriceofbuy2LessThanOrEqualTo(Double value) {
			addCriterion("PRICEOFBUY2 <=", value, "priceofbuy2");
			return (Criteria) this;
		}

		public Criteria andPriceofbuy2In(List<Double> values) {
			addCriterion("PRICEOFBUY2 in", values, "priceofbuy2");
			return (Criteria) this;
		}

		public Criteria andPriceofbuy2NotIn(List<Double> values) {
			addCriterion("PRICEOFBUY2 not in", values, "priceofbuy2");
			return (Criteria) this;
		}

		public Criteria andPriceofbuy2Between(Double value1, Double value2) {
			addCriterion("PRICEOFBUY2 between", value1, value2, "priceofbuy2");
			return (Criteria) this;
		}

		public Criteria andPriceofbuy2NotBetween(Double value1, Double value2) {
			addCriterion("PRICEOFBUY2 not between", value1, value2, "priceofbuy2");
			return (Criteria) this;
		}

		public Criteria andPriceofbuy3IsNull() {
			addCriterion("PRICEOFBUY3 is null");
			return (Criteria) this;
		}

		public Criteria andPriceofbuy3IsNotNull() {
			addCriterion("PRICEOFBUY3 is not null");
			return (Criteria) this;
		}

		public Criteria andPriceofbuy3EqualTo(Double value) {
			addCriterion("PRICEOFBUY3 =", value, "priceofbuy3");
			return (Criteria) this;
		}

		public Criteria andPriceofbuy3NotEqualTo(Double value) {
			addCriterion("PRICEOFBUY3 <>", value, "priceofbuy3");
			return (Criteria) this;
		}

		public Criteria andPriceofbuy3GreaterThan(Double value) {
			addCriterion("PRICEOFBUY3 >", value, "priceofbuy3");
			return (Criteria) this;
		}

		public Criteria andPriceofbuy3GreaterThanOrEqualTo(Double value) {
			addCriterion("PRICEOFBUY3 >=", value, "priceofbuy3");
			return (Criteria) this;
		}

		public Criteria andPriceofbuy3LessThan(Double value) {
			addCriterion("PRICEOFBUY3 <", value, "priceofbuy3");
			return (Criteria) this;
		}

		public Criteria andPriceofbuy3LessThanOrEqualTo(Double value) {
			addCriterion("PRICEOFBUY3 <=", value, "priceofbuy3");
			return (Criteria) this;
		}

		public Criteria andPriceofbuy3In(List<Double> values) {
			addCriterion("PRICEOFBUY3 in", values, "priceofbuy3");
			return (Criteria) this;
		}

		public Criteria andPriceofbuy3NotIn(List<Double> values) {
			addCriterion("PRICEOFBUY3 not in", values, "priceofbuy3");
			return (Criteria) this;
		}

		public Criteria andPriceofbuy3Between(Double value1, Double value2) {
			addCriterion("PRICEOFBUY3 between", value1, value2, "priceofbuy3");
			return (Criteria) this;
		}

		public Criteria andPriceofbuy3NotBetween(Double value1, Double value2) {
			addCriterion("PRICEOFBUY3 not between", value1, value2, "priceofbuy3");
			return (Criteria) this;
		}

		public Criteria andPriceofbuy4IsNull() {
			addCriterion("PRICEOFBUY4 is null");
			return (Criteria) this;
		}

		public Criteria andPriceofbuy4IsNotNull() {
			addCriterion("PRICEOFBUY4 is not null");
			return (Criteria) this;
		}

		public Criteria andPriceofbuy4EqualTo(Double value) {
			addCriterion("PRICEOFBUY4 =", value, "priceofbuy4");
			return (Criteria) this;
		}

		public Criteria andPriceofbuy4NotEqualTo(Double value) {
			addCriterion("PRICEOFBUY4 <>", value, "priceofbuy4");
			return (Criteria) this;
		}

		public Criteria andPriceofbuy4GreaterThan(Double value) {
			addCriterion("PRICEOFBUY4 >", value, "priceofbuy4");
			return (Criteria) this;
		}

		public Criteria andPriceofbuy4GreaterThanOrEqualTo(Double value) {
			addCriterion("PRICEOFBUY4 >=", value, "priceofbuy4");
			return (Criteria) this;
		}

		public Criteria andPriceofbuy4LessThan(Double value) {
			addCriterion("PRICEOFBUY4 <", value, "priceofbuy4");
			return (Criteria) this;
		}

		public Criteria andPriceofbuy4LessThanOrEqualTo(Double value) {
			addCriterion("PRICEOFBUY4 <=", value, "priceofbuy4");
			return (Criteria) this;
		}

		public Criteria andPriceofbuy4In(List<Double> values) {
			addCriterion("PRICEOFBUY4 in", values, "priceofbuy4");
			return (Criteria) this;
		}

		public Criteria andPriceofbuy4NotIn(List<Double> values) {
			addCriterion("PRICEOFBUY4 not in", values, "priceofbuy4");
			return (Criteria) this;
		}

		public Criteria andPriceofbuy4Between(Double value1, Double value2) {
			addCriterion("PRICEOFBUY4 between", value1, value2, "priceofbuy4");
			return (Criteria) this;
		}

		public Criteria andPriceofbuy4NotBetween(Double value1, Double value2) {
			addCriterion("PRICEOFBUY4 not between", value1, value2, "priceofbuy4");
			return (Criteria) this;
		}

		public Criteria andPriceofbuy5IsNull() {
			addCriterion("PRICEOFBUY5 is null");
			return (Criteria) this;
		}

		public Criteria andPriceofbuy5IsNotNull() {
			addCriterion("PRICEOFBUY5 is not null");
			return (Criteria) this;
		}

		public Criteria andPriceofbuy5EqualTo(Double value) {
			addCriterion("PRICEOFBUY5 =", value, "priceofbuy5");
			return (Criteria) this;
		}

		public Criteria andPriceofbuy5NotEqualTo(Double value) {
			addCriterion("PRICEOFBUY5 <>", value, "priceofbuy5");
			return (Criteria) this;
		}

		public Criteria andPriceofbuy5GreaterThan(Double value) {
			addCriterion("PRICEOFBUY5 >", value, "priceofbuy5");
			return (Criteria) this;
		}

		public Criteria andPriceofbuy5GreaterThanOrEqualTo(Double value) {
			addCriterion("PRICEOFBUY5 >=", value, "priceofbuy5");
			return (Criteria) this;
		}

		public Criteria andPriceofbuy5LessThan(Double value) {
			addCriterion("PRICEOFBUY5 <", value, "priceofbuy5");
			return (Criteria) this;
		}

		public Criteria andPriceofbuy5LessThanOrEqualTo(Double value) {
			addCriterion("PRICEOFBUY5 <=", value, "priceofbuy5");
			return (Criteria) this;
		}

		public Criteria andPriceofbuy5In(List<Double> values) {
			addCriterion("PRICEOFBUY5 in", values, "priceofbuy5");
			return (Criteria) this;
		}

		public Criteria andPriceofbuy5NotIn(List<Double> values) {
			addCriterion("PRICEOFBUY5 not in", values, "priceofbuy5");
			return (Criteria) this;
		}

		public Criteria andPriceofbuy5Between(Double value1, Double value2) {
			addCriterion("PRICEOFBUY5 between", value1, value2, "priceofbuy5");
			return (Criteria) this;
		}

		public Criteria andPriceofbuy5NotBetween(Double value1, Double value2) {
			addCriterion("PRICEOFBUY5 not between", value1, value2, "priceofbuy5");
			return (Criteria) this;
		}

		public Criteria andAmountofsaleIsNull() {
			addCriterion("AMOUNTOFSALE is null");
			return (Criteria) this;
		}

		public Criteria andAmountofsaleIsNotNull() {
			addCriterion("AMOUNTOFSALE is not null");
			return (Criteria) this;
		}

		public Criteria andAmountofsaleEqualTo(Long value) {
			addCriterion("AMOUNTOFSALE =", value, "amountofsale");
			return (Criteria) this;
		}

		public Criteria andAmountofsaleNotEqualTo(Long value) {
			addCriterion("AMOUNTOFSALE <>", value, "amountofsale");
			return (Criteria) this;
		}

		public Criteria andAmountofsaleGreaterThan(Long value) {
			addCriterion("AMOUNTOFSALE >", value, "amountofsale");
			return (Criteria) this;
		}

		public Criteria andAmountofsaleGreaterThanOrEqualTo(Long value) {
			addCriterion("AMOUNTOFSALE >=", value, "amountofsale");
			return (Criteria) this;
		}

		public Criteria andAmountofsaleLessThan(Long value) {
			addCriterion("AMOUNTOFSALE <", value, "amountofsale");
			return (Criteria) this;
		}

		public Criteria andAmountofsaleLessThanOrEqualTo(Long value) {
			addCriterion("AMOUNTOFSALE <=", value, "amountofsale");
			return (Criteria) this;
		}

		public Criteria andAmountofsaleIn(List<Long> values) {
			addCriterion("AMOUNTOFSALE in", values, "amountofsale");
			return (Criteria) this;
		}

		public Criteria andAmountofsaleNotIn(List<Long> values) {
			addCriterion("AMOUNTOFSALE not in", values, "amountofsale");
			return (Criteria) this;
		}

		public Criteria andAmountofsaleBetween(Long value1, Long value2) {
			addCriterion("AMOUNTOFSALE between", value1, value2, "amountofsale");
			return (Criteria) this;
		}

		public Criteria andAmountofsaleNotBetween(Long value1, Long value2) {
			addCriterion("AMOUNTOFSALE not between", value1, value2, "amountofsale");
			return (Criteria) this;
		}

		public Criteria andPriceofsale1IsNull() {
			addCriterion("PRICEOFSALE1 is null");
			return (Criteria) this;
		}

		public Criteria andPriceofsale1IsNotNull() {
			addCriterion("PRICEOFSALE1 is not null");
			return (Criteria) this;
		}

		public Criteria andPriceofsale1EqualTo(Double value) {
			addCriterion("PRICEOFSALE1 =", value, "priceofsale1");
			return (Criteria) this;
		}

		public Criteria andPriceofsale1NotEqualTo(Double value) {
			addCriterion("PRICEOFSALE1 <>", value, "priceofsale1");
			return (Criteria) this;
		}

		public Criteria andPriceofsale1GreaterThan(Double value) {
			addCriterion("PRICEOFSALE1 >", value, "priceofsale1");
			return (Criteria) this;
		}

		public Criteria andPriceofsale1GreaterThanOrEqualTo(Double value) {
			addCriterion("PRICEOFSALE1 >=", value, "priceofsale1");
			return (Criteria) this;
		}

		public Criteria andPriceofsale1LessThan(Double value) {
			addCriterion("PRICEOFSALE1 <", value, "priceofsale1");
			return (Criteria) this;
		}

		public Criteria andPriceofsale1LessThanOrEqualTo(Double value) {
			addCriterion("PRICEOFSALE1 <=", value, "priceofsale1");
			return (Criteria) this;
		}

		public Criteria andPriceofsale1In(List<Double> values) {
			addCriterion("PRICEOFSALE1 in", values, "priceofsale1");
			return (Criteria) this;
		}

		public Criteria andPriceofsale1NotIn(List<Double> values) {
			addCriterion("PRICEOFSALE1 not in", values, "priceofsale1");
			return (Criteria) this;
		}

		public Criteria andPriceofsale1Between(Double value1, Double value2) {
			addCriterion("PRICEOFSALE1 between", value1, value2, "priceofsale1");
			return (Criteria) this;
		}

		public Criteria andPriceofsale1NotBetween(Double value1, Double value2) {
			addCriterion("PRICEOFSALE1 not between", value1, value2, "priceofsale1");
			return (Criteria) this;
		}

		public Criteria andPriceofsale2IsNull() {
			addCriterion("PRICEOFSALE2 is null");
			return (Criteria) this;
		}

		public Criteria andPriceofsale2IsNotNull() {
			addCriterion("PRICEOFSALE2 is not null");
			return (Criteria) this;
		}

		public Criteria andPriceofsale2EqualTo(Double value) {
			addCriterion("PRICEOFSALE2 =", value, "priceofsale2");
			return (Criteria) this;
		}

		public Criteria andPriceofsale2NotEqualTo(Double value) {
			addCriterion("PRICEOFSALE2 <>", value, "priceofsale2");
			return (Criteria) this;
		}

		public Criteria andPriceofsale2GreaterThan(Double value) {
			addCriterion("PRICEOFSALE2 >", value, "priceofsale2");
			return (Criteria) this;
		}

		public Criteria andPriceofsale2GreaterThanOrEqualTo(Double value) {
			addCriterion("PRICEOFSALE2 >=", value, "priceofsale2");
			return (Criteria) this;
		}

		public Criteria andPriceofsale2LessThan(Double value) {
			addCriterion("PRICEOFSALE2 <", value, "priceofsale2");
			return (Criteria) this;
		}

		public Criteria andPriceofsale2LessThanOrEqualTo(Double value) {
			addCriterion("PRICEOFSALE2 <=", value, "priceofsale2");
			return (Criteria) this;
		}

		public Criteria andPriceofsale2In(List<Double> values) {
			addCriterion("PRICEOFSALE2 in", values, "priceofsale2");
			return (Criteria) this;
		}

		public Criteria andPriceofsale2NotIn(List<Double> values) {
			addCriterion("PRICEOFSALE2 not in", values, "priceofsale2");
			return (Criteria) this;
		}

		public Criteria andPriceofsale2Between(Double value1, Double value2) {
			addCriterion("PRICEOFSALE2 between", value1, value2, "priceofsale2");
			return (Criteria) this;
		}

		public Criteria andPriceofsale2NotBetween(Double value1, Double value2) {
			addCriterion("PRICEOFSALE2 not between", value1, value2, "priceofsale2");
			return (Criteria) this;
		}

		public Criteria andPriceofsale3IsNull() {
			addCriterion("PRICEOFSALE3 is null");
			return (Criteria) this;
		}

		public Criteria andPriceofsale3IsNotNull() {
			addCriterion("PRICEOFSALE3 is not null");
			return (Criteria) this;
		}

		public Criteria andPriceofsale3EqualTo(Double value) {
			addCriterion("PRICEOFSALE3 =", value, "priceofsale3");
			return (Criteria) this;
		}

		public Criteria andPriceofsale3NotEqualTo(Double value) {
			addCriterion("PRICEOFSALE3 <>", value, "priceofsale3");
			return (Criteria) this;
		}

		public Criteria andPriceofsale3GreaterThan(Double value) {
			addCriterion("PRICEOFSALE3 >", value, "priceofsale3");
			return (Criteria) this;
		}

		public Criteria andPriceofsale3GreaterThanOrEqualTo(Double value) {
			addCriterion("PRICEOFSALE3 >=", value, "priceofsale3");
			return (Criteria) this;
		}

		public Criteria andPriceofsale3LessThan(Double value) {
			addCriterion("PRICEOFSALE3 <", value, "priceofsale3");
			return (Criteria) this;
		}

		public Criteria andPriceofsale3LessThanOrEqualTo(Double value) {
			addCriterion("PRICEOFSALE3 <=", value, "priceofsale3");
			return (Criteria) this;
		}

		public Criteria andPriceofsale3In(List<Double> values) {
			addCriterion("PRICEOFSALE3 in", values, "priceofsale3");
			return (Criteria) this;
		}

		public Criteria andPriceofsale3NotIn(List<Double> values) {
			addCriterion("PRICEOFSALE3 not in", values, "priceofsale3");
			return (Criteria) this;
		}

		public Criteria andPriceofsale3Between(Double value1, Double value2) {
			addCriterion("PRICEOFSALE3 between", value1, value2, "priceofsale3");
			return (Criteria) this;
		}

		public Criteria andPriceofsale3NotBetween(Double value1, Double value2) {
			addCriterion("PRICEOFSALE3 not between", value1, value2, "priceofsale3");
			return (Criteria) this;
		}

		public Criteria andPriceofsale4IsNull() {
			addCriterion("PRICEOFSALE4 is null");
			return (Criteria) this;
		}

		public Criteria andPriceofsale4IsNotNull() {
			addCriterion("PRICEOFSALE4 is not null");
			return (Criteria) this;
		}

		public Criteria andPriceofsale4EqualTo(Double value) {
			addCriterion("PRICEOFSALE4 =", value, "priceofsale4");
			return (Criteria) this;
		}

		public Criteria andPriceofsale4NotEqualTo(Double value) {
			addCriterion("PRICEOFSALE4 <>", value, "priceofsale4");
			return (Criteria) this;
		}

		public Criteria andPriceofsale4GreaterThan(Double value) {
			addCriterion("PRICEOFSALE4 >", value, "priceofsale4");
			return (Criteria) this;
		}

		public Criteria andPriceofsale4GreaterThanOrEqualTo(Double value) {
			addCriterion("PRICEOFSALE4 >=", value, "priceofsale4");
			return (Criteria) this;
		}

		public Criteria andPriceofsale4LessThan(Double value) {
			addCriterion("PRICEOFSALE4 <", value, "priceofsale4");
			return (Criteria) this;
		}

		public Criteria andPriceofsale4LessThanOrEqualTo(Double value) {
			addCriterion("PRICEOFSALE4 <=", value, "priceofsale4");
			return (Criteria) this;
		}

		public Criteria andPriceofsale4In(List<Double> values) {
			addCriterion("PRICEOFSALE4 in", values, "priceofsale4");
			return (Criteria) this;
		}

		public Criteria andPriceofsale4NotIn(List<Double> values) {
			addCriterion("PRICEOFSALE4 not in", values, "priceofsale4");
			return (Criteria) this;
		}

		public Criteria andPriceofsale4Between(Double value1, Double value2) {
			addCriterion("PRICEOFSALE4 between", value1, value2, "priceofsale4");
			return (Criteria) this;
		}

		public Criteria andPriceofsale4NotBetween(Double value1, Double value2) {
			addCriterion("PRICEOFSALE4 not between", value1, value2, "priceofsale4");
			return (Criteria) this;
		}

		public Criteria andPriceofsale5IsNull() {
			addCriterion("PRICEOFSALE5 is null");
			return (Criteria) this;
		}

		public Criteria andPriceofsale5IsNotNull() {
			addCriterion("PRICEOFSALE5 is not null");
			return (Criteria) this;
		}

		public Criteria andPriceofsale5EqualTo(Double value) {
			addCriterion("PRICEOFSALE5 =", value, "priceofsale5");
			return (Criteria) this;
		}

		public Criteria andPriceofsale5NotEqualTo(Double value) {
			addCriterion("PRICEOFSALE5 <>", value, "priceofsale5");
			return (Criteria) this;
		}

		public Criteria andPriceofsale5GreaterThan(Double value) {
			addCriterion("PRICEOFSALE5 >", value, "priceofsale5");
			return (Criteria) this;
		}

		public Criteria andPriceofsale5GreaterThanOrEqualTo(Double value) {
			addCriterion("PRICEOFSALE5 >=", value, "priceofsale5");
			return (Criteria) this;
		}

		public Criteria andPriceofsale5LessThan(Double value) {
			addCriterion("PRICEOFSALE5 <", value, "priceofsale5");
			return (Criteria) this;
		}

		public Criteria andPriceofsale5LessThanOrEqualTo(Double value) {
			addCriterion("PRICEOFSALE5 <=", value, "priceofsale5");
			return (Criteria) this;
		}

		public Criteria andPriceofsale5In(List<Double> values) {
			addCriterion("PRICEOFSALE5 in", values, "priceofsale5");
			return (Criteria) this;
		}

		public Criteria andPriceofsale5NotIn(List<Double> values) {
			addCriterion("PRICEOFSALE5 not in", values, "priceofsale5");
			return (Criteria) this;
		}

		public Criteria andPriceofsale5Between(Double value1, Double value2) {
			addCriterion("PRICEOFSALE5 between", value1, value2, "priceofsale5");
			return (Criteria) this;
		}

		public Criteria andPriceofsale5NotBetween(Double value1, Double value2) {
			addCriterion("PRICEOFSALE5 not between", value1, value2, "priceofsale5");
			return (Criteria) this;
		}

		public Criteria andDateIsNull() {
			addCriterion("DATE is null");
			return (Criteria) this;
		}

		public Criteria andDateIsNotNull() {
			addCriterion("DATE is not null");
			return (Criteria) this;
		}

		public Criteria andDateEqualTo(Date value) {
			addCriterionForJDBCDate("DATE =", value, "date");
			return (Criteria) this;
		}

		public Criteria andDateNotEqualTo(Date value) {
			addCriterionForJDBCDate("DATE <>", value, "date");
			return (Criteria) this;
		}

		public Criteria andDateGreaterThan(Date value) {
			addCriterionForJDBCDate("DATE >", value, "date");
			return (Criteria) this;
		}

		public Criteria andDateGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("DATE >=", value, "date");
			return (Criteria) this;
		}

		public Criteria andDateLessThan(Date value) {
			addCriterionForJDBCDate("DATE <", value, "date");
			return (Criteria) this;
		}

		public Criteria andDateLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("DATE <=", value, "date");
			return (Criteria) this;
		}

		public Criteria andDateIn(List<Date> values) {
			addCriterionForJDBCDate("DATE in", values, "date");
			return (Criteria) this;
		}

		public Criteria andDateNotIn(List<Date> values) {
			addCriterionForJDBCDate("DATE not in", values, "date");
			return (Criteria) this;
		}

		public Criteria andDateBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("DATE between", value1, value2, "date");
			return (Criteria) this;
		}

		public Criteria andDateNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("DATE not between", value1, value2, "date");
			return (Criteria) this;
		}

		public Criteria andTimeIsNull() {
			addCriterion("TIME is null");
			return (Criteria) this;
		}

		public Criteria andTimeIsNotNull() {
			addCriterion("TIME is not null");
			return (Criteria) this;
		}

		public Criteria andTimeEqualTo(Date value) {
			addCriterionForJDBCTime("TIME =", value, "time");
			return (Criteria) this;
		}

		public Criteria andTimeNotEqualTo(Date value) {
			addCriterionForJDBCTime("TIME <>", value, "time");
			return (Criteria) this;
		}

		public Criteria andTimeGreaterThan(Date value) {
			addCriterionForJDBCTime("TIME >", value, "time");
			return (Criteria) this;
		}

		public Criteria andTimeGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCTime("TIME >=", value, "time");
			return (Criteria) this;
		}

		public Criteria andTimeLessThan(Date value) {
			addCriterionForJDBCTime("TIME <", value, "time");
			return (Criteria) this;
		}

		public Criteria andTimeLessThanOrEqualTo(Date value) {
			addCriterionForJDBCTime("TIME <=", value, "time");
			return (Criteria) this;
		}

		public Criteria andTimeIn(List<Date> values) {
			addCriterionForJDBCTime("TIME in", values, "time");
			return (Criteria) this;
		}

		public Criteria andTimeNotIn(List<Date> values) {
			addCriterionForJDBCTime("TIME not in", values, "time");
			return (Criteria) this;
		}

		public Criteria andTimeBetween(Date value1, Date value2) {
			addCriterionForJDBCTime("TIME between", value1, value2, "time");
			return (Criteria) this;
		}

		public Criteria andTimeNotBetween(Date value1, Date value2) {
			addCriterionForJDBCTime("TIME not between", value1, value2, "time");
			return (Criteria) this;
		}

		public Criteria andIdIsNull() {
			addCriterion("ID is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("ID is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(String value) {
			addCriterion("ID =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(String value) {
			addCriterion("ID <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(String value) {
			addCriterion("ID >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(String value) {
			addCriterion("ID >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(String value) {
			addCriterion("ID <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(String value) {
			addCriterion("ID <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLike(String value) {
			addCriterion("ID like", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotLike(String value) {
			addCriterion("ID not like", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<String> values) {
			addCriterion("ID in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<String> values) {
			addCriterion("ID not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(String value1, String value2) {
			addCriterion("ID between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(String value1, String value2) {
			addCriterion("ID not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andSettlementpriceIsNull() {
			addCriterion("SETTLEMENTPRICE is null");
			return (Criteria) this;
		}

		public Criteria andSettlementpriceIsNotNull() {
			addCriterion("SETTLEMENTPRICE is not null");
			return (Criteria) this;
		}

		public Criteria andSettlementpriceEqualTo(Double value) {
			addCriterion("SETTLEMENTPRICE =", value, "settlementprice");
			return (Criteria) this;
		}

		public Criteria andSettlementpriceNotEqualTo(Double value) {
			addCriterion("SETTLEMENTPRICE <>", value, "settlementprice");
			return (Criteria) this;
		}

		public Criteria andSettlementpriceGreaterThan(Double value) {
			addCriterion("SETTLEMENTPRICE >", value, "settlementprice");
			return (Criteria) this;
		}

		public Criteria andSettlementpriceGreaterThanOrEqualTo(Double value) {
			addCriterion("SETTLEMENTPRICE >=", value, "settlementprice");
			return (Criteria) this;
		}

		public Criteria andSettlementpriceLessThan(Double value) {
			addCriterion("SETTLEMENTPRICE <", value, "settlementprice");
			return (Criteria) this;
		}

		public Criteria andSettlementpriceLessThanOrEqualTo(Double value) {
			addCriterion("SETTLEMENTPRICE <=", value, "settlementprice");
			return (Criteria) this;
		}

		public Criteria andSettlementpriceIn(List<Double> values) {
			addCriterion("SETTLEMENTPRICE in", values, "settlementprice");
			return (Criteria) this;
		}

		public Criteria andSettlementpriceNotIn(List<Double> values) {
			addCriterion("SETTLEMENTPRICE not in", values, "settlementprice");
			return (Criteria) this;
		}

		public Criteria andSettlementpriceBetween(Double value1, Double value2) {
			addCriterion("SETTLEMENTPRICE between", value1, value2, "settlementprice");
			return (Criteria) this;
		}

		public Criteria andSettlementpriceNotBetween(Double value1, Double value2) {
			addCriterion("SETTLEMENTPRICE not between", value1, value2, "settlementprice");
			return (Criteria) this;
		}

		public Criteria andLastsettlementpriceIsNull() {
			addCriterion("LASTSETTLEMENTPRICE is null");
			return (Criteria) this;
		}

		public Criteria andLastsettlementpriceIsNotNull() {
			addCriterion("LASTSETTLEMENTPRICE is not null");
			return (Criteria) this;
		}

		public Criteria andLastsettlementpriceEqualTo(Double value) {
			addCriterion("LASTSETTLEMENTPRICE =", value, "lastsettlementprice");
			return (Criteria) this;
		}

		public Criteria andLastsettlementpriceNotEqualTo(Double value) {
			addCriterion("LASTSETTLEMENTPRICE <>", value, "lastsettlementprice");
			return (Criteria) this;
		}

		public Criteria andLastsettlementpriceGreaterThan(Double value) {
			addCriterion("LASTSETTLEMENTPRICE >", value, "lastsettlementprice");
			return (Criteria) this;
		}

		public Criteria andLastsettlementpriceGreaterThanOrEqualTo(Double value) {
			addCriterion("LASTSETTLEMENTPRICE >=", value, "lastsettlementprice");
			return (Criteria) this;
		}

		public Criteria andLastsettlementpriceLessThan(Double value) {
			addCriterion("LASTSETTLEMENTPRICE <", value, "lastsettlementprice");
			return (Criteria) this;
		}

		public Criteria andLastsettlementpriceLessThanOrEqualTo(Double value) {
			addCriterion("LASTSETTLEMENTPRICE <=", value, "lastsettlementprice");
			return (Criteria) this;
		}

		public Criteria andLastsettlementpriceIn(List<Double> values) {
			addCriterion("LASTSETTLEMENTPRICE in", values, "lastsettlementprice");
			return (Criteria) this;
		}

		public Criteria andLastsettlementpriceNotIn(List<Double> values) {
			addCriterion("LASTSETTLEMENTPRICE not in", values, "lastsettlementprice");
			return (Criteria) this;
		}

		public Criteria andLastsettlementpriceBetween(Double value1, Double value2) {
			addCriterion("LASTSETTLEMENTPRICE between", value1, value2, "lastsettlementprice");
			return (Criteria) this;
		}

		public Criteria andLastsettlementpriceNotBetween(Double value1, Double value2) {
			addCriterion("LASTSETTLEMENTPRICE not between", value1, value2, "lastsettlementprice");
			return (Criteria) this;
		}

		public Criteria andMarketIsNull() {
			addCriterion("MARKET is null");
			return (Criteria) this;
		}

		public Criteria andMarketIsNotNull() {
			addCriterion("MARKET is not null");
			return (Criteria) this;
		}

		public Criteria andMarketEqualTo(String value) {
			addCriterion("MARKET =", value, "market");
			return (Criteria) this;
		}

		public Criteria andMarketNotEqualTo(String value) {
			addCriterion("MARKET <>", value, "market");
			return (Criteria) this;
		}

		public Criteria andMarketGreaterThan(String value) {
			addCriterion("MARKET >", value, "market");
			return (Criteria) this;
		}

		public Criteria andMarketGreaterThanOrEqualTo(String value) {
			addCriterion("MARKET >=", value, "market");
			return (Criteria) this;
		}

		public Criteria andMarketLessThan(String value) {
			addCriterion("MARKET <", value, "market");
			return (Criteria) this;
		}

		public Criteria andMarketLessThanOrEqualTo(String value) {
			addCriterion("MARKET <=", value, "market");
			return (Criteria) this;
		}

		public Criteria andMarketLike(String value) {
			addCriterion("MARKET like", value, "market");
			return (Criteria) this;
		}

		public Criteria andMarketNotLike(String value) {
			addCriterion("MARKET not like", value, "market");
			return (Criteria) this;
		}

		public Criteria andMarketIn(List<String> values) {
			addCriterion("MARKET in", values, "market");
			return (Criteria) this;
		}

		public Criteria andMarketNotIn(List<String> values) {
			addCriterion("MARKET not in", values, "market");
			return (Criteria) this;
		}

		public Criteria andMarketBetween(String value1, String value2) {
			addCriterion("MARKET between", value1, value2, "market");
			return (Criteria) this;
		}

		public Criteria andMarketNotBetween(String value1, String value2) {
			addCriterion("MARKET not between", value1, value2, "market");
			return (Criteria) this;
		}

		public Criteria andCategoryIsNull() {
			addCriterion("CATEGORY is null");
			return (Criteria) this;
		}

		public Criteria andCategoryIsNotNull() {
			addCriterion("CATEGORY is not null");
			return (Criteria) this;
		}

		public Criteria andCategoryEqualTo(String value) {
			addCriterion("CATEGORY =", value, "category");
			return (Criteria) this;
		}

		public Criteria andCategoryNotEqualTo(String value) {
			addCriterion("CATEGORY <>", value, "category");
			return (Criteria) this;
		}

		public Criteria andCategoryGreaterThan(String value) {
			addCriterion("CATEGORY >", value, "category");
			return (Criteria) this;
		}

		public Criteria andCategoryGreaterThanOrEqualTo(String value) {
			addCriterion("CATEGORY >=", value, "category");
			return (Criteria) this;
		}

		public Criteria andCategoryLessThan(String value) {
			addCriterion("CATEGORY <", value, "category");
			return (Criteria) this;
		}

		public Criteria andCategoryLessThanOrEqualTo(String value) {
			addCriterion("CATEGORY <=", value, "category");
			return (Criteria) this;
		}

		public Criteria andCategoryLike(String value) {
			addCriterion("CATEGORY like", value, "category");
			return (Criteria) this;
		}

		public Criteria andCategoryNotLike(String value) {
			addCriterion("CATEGORY not like", value, "category");
			return (Criteria) this;
		}

		public Criteria andCategoryIn(List<String> values) {
			addCriterion("CATEGORY in", values, "category");
			return (Criteria) this;
		}

		public Criteria andCategoryNotIn(List<String> values) {
			addCriterion("CATEGORY not in", values, "category");
			return (Criteria) this;
		}

		public Criteria andCategoryBetween(String value1, String value2) {
			addCriterion("CATEGORY between", value1, value2, "category");
			return (Criteria) this;
		}

		public Criteria andCategoryNotBetween(String value1, String value2) {
			addCriterion("CATEGORY not between", value1, value2, "category");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table FUTURE_QUOTE
	 * @mbg.generated  Fri Aug 03 13:21:02 CST 2018
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table FUTURE_QUOTE
     *
     * @mbg.generated do_not_delete_during_merge Fri Aug 03 11:21:49 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}