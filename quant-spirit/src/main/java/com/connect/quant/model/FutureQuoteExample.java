package com.connect.quant.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class FutureQuoteExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table FUTURE_QUOTE
     *
     * @mbg.generated Tue Aug 07 14:58:26 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table FUTURE_QUOTE
     *
     * @mbg.generated Tue Aug 07 14:58:26 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table FUTURE_QUOTE
     *
     * @mbg.generated Tue Aug 07 14:58:26 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FUTURE_QUOTE
     *
     * @mbg.generated Tue Aug 07 14:58:26 CST 2018
     */
    public FutureQuoteExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FUTURE_QUOTE
     *
     * @mbg.generated Tue Aug 07 14:58:26 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FUTURE_QUOTE
     *
     * @mbg.generated Tue Aug 07 14:58:26 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FUTURE_QUOTE
     *
     * @mbg.generated Tue Aug 07 14:58:26 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FUTURE_QUOTE
     *
     * @mbg.generated Tue Aug 07 14:58:26 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FUTURE_QUOTE
     *
     * @mbg.generated Tue Aug 07 14:58:26 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FUTURE_QUOTE
     *
     * @mbg.generated Tue Aug 07 14:58:26 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FUTURE_QUOTE
     *
     * @mbg.generated Tue Aug 07 14:58:26 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FUTURE_QUOTE
     *
     * @mbg.generated Tue Aug 07 14:58:26 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FUTURE_QUOTE
     *
     * @mbg.generated Tue Aug 07 14:58:26 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FUTURE_QUOTE
     *
     * @mbg.generated Tue Aug 07 14:58:26 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table FUTURE_QUOTE
     *
     * @mbg.generated Tue Aug 07 14:58:26 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        protected void addCriterionForJDBCTime(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Time(value.getTime()), property);
        }

        protected void addCriterionForJDBCTime(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Time> timeList = new ArrayList<java.sql.Time>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                timeList.add(new java.sql.Time(iter.next().getTime()));
            }
            addCriterion(condition, timeList, property);
        }

        protected void addCriterionForJDBCTime(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Time(value1.getTime()), new java.sql.Time(value2.getTime()), property);
        }

        public Criteria andSnoIsNull() {
            addCriterion("SNO is null");
            return (Criteria) this;
        }

        public Criteria andSnoIsNotNull() {
            addCriterion("SNO is not null");
            return (Criteria) this;
        }

        public Criteria andSnoEqualTo(Integer value) {
            addCriterion("SNO =", value, "sno");
            return (Criteria) this;
        }

        public Criteria andSnoNotEqualTo(Integer value) {
            addCriterion("SNO <>", value, "sno");
            return (Criteria) this;
        }

        public Criteria andSnoGreaterThan(Integer value) {
            addCriterion("SNO >", value, "sno");
            return (Criteria) this;
        }

        public Criteria andSnoGreaterThanOrEqualTo(Integer value) {
            addCriterion("SNO >=", value, "sno");
            return (Criteria) this;
        }

        public Criteria andSnoLessThan(Integer value) {
            addCriterion("SNO <", value, "sno");
            return (Criteria) this;
        }

        public Criteria andSnoLessThanOrEqualTo(Integer value) {
            addCriterion("SNO <=", value, "sno");
            return (Criteria) this;
        }

        public Criteria andSnoIn(List<Integer> values) {
            addCriterion("SNO in", values, "sno");
            return (Criteria) this;
        }

        public Criteria andSnoNotIn(List<Integer> values) {
            addCriterion("SNO not in", values, "sno");
            return (Criteria) this;
        }

        public Criteria andSnoBetween(Integer value1, Integer value2) {
            addCriterion("SNO between", value1, value2, "sno");
            return (Criteria) this;
        }

        public Criteria andSnoNotBetween(Integer value1, Integer value2) {
            addCriterion("SNO not between", value1, value2, "sno");
            return (Criteria) this;
        }

        public Criteria andNameIsNull() {
            addCriterion("NAME is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("NAME is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("NAME =", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("NAME <>", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("NAME >", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("NAME >=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("NAME <", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("NAME <=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("NAME like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("NAME not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("NAME in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("NAME not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("NAME between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("NAME not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andOpeningPriceIsNull() {
            addCriterion("OPENING_PRICE is null");
            return (Criteria) this;
        }

        public Criteria andOpeningPriceIsNotNull() {
            addCriterion("OPENING_PRICE is not null");
            return (Criteria) this;
        }

        public Criteria andOpeningPriceEqualTo(Double value) {
            addCriterion("OPENING_PRICE =", value, "openingPrice");
            return (Criteria) this;
        }

        public Criteria andOpeningPriceNotEqualTo(Double value) {
            addCriterion("OPENING_PRICE <>", value, "openingPrice");
            return (Criteria) this;
        }

        public Criteria andOpeningPriceGreaterThan(Double value) {
            addCriterion("OPENING_PRICE >", value, "openingPrice");
            return (Criteria) this;
        }

        public Criteria andOpeningPriceGreaterThanOrEqualTo(Double value) {
            addCriterion("OPENING_PRICE >=", value, "openingPrice");
            return (Criteria) this;
        }

        public Criteria andOpeningPriceLessThan(Double value) {
            addCriterion("OPENING_PRICE <", value, "openingPrice");
            return (Criteria) this;
        }

        public Criteria andOpeningPriceLessThanOrEqualTo(Double value) {
            addCriterion("OPENING_PRICE <=", value, "openingPrice");
            return (Criteria) this;
        }

        public Criteria andOpeningPriceIn(List<Double> values) {
            addCriterion("OPENING_PRICE in", values, "openingPrice");
            return (Criteria) this;
        }

        public Criteria andOpeningPriceNotIn(List<Double> values) {
            addCriterion("OPENING_PRICE not in", values, "openingPrice");
            return (Criteria) this;
        }

        public Criteria andOpeningPriceBetween(Double value1, Double value2) {
            addCriterion("OPENING_PRICE between", value1, value2, "openingPrice");
            return (Criteria) this;
        }

        public Criteria andOpeningPriceNotBetween(Double value1, Double value2) {
            addCriterion("OPENING_PRICE not between", value1, value2, "openingPrice");
            return (Criteria) this;
        }

        public Criteria andClosingPriceIsNull() {
            addCriterion("CLOSING_PRICE is null");
            return (Criteria) this;
        }

        public Criteria andClosingPriceIsNotNull() {
            addCriterion("CLOSING_PRICE is not null");
            return (Criteria) this;
        }

        public Criteria andClosingPriceEqualTo(Double value) {
            addCriterion("CLOSING_PRICE =", value, "closingPrice");
            return (Criteria) this;
        }

        public Criteria andClosingPriceNotEqualTo(Double value) {
            addCriterion("CLOSING_PRICE <>", value, "closingPrice");
            return (Criteria) this;
        }

        public Criteria andClosingPriceGreaterThan(Double value) {
            addCriterion("CLOSING_PRICE >", value, "closingPrice");
            return (Criteria) this;
        }

        public Criteria andClosingPriceGreaterThanOrEqualTo(Double value) {
            addCriterion("CLOSING_PRICE >=", value, "closingPrice");
            return (Criteria) this;
        }

        public Criteria andClosingPriceLessThan(Double value) {
            addCriterion("CLOSING_PRICE <", value, "closingPrice");
            return (Criteria) this;
        }

        public Criteria andClosingPriceLessThanOrEqualTo(Double value) {
            addCriterion("CLOSING_PRICE <=", value, "closingPrice");
            return (Criteria) this;
        }

        public Criteria andClosingPriceIn(List<Double> values) {
            addCriterion("CLOSING_PRICE in", values, "closingPrice");
            return (Criteria) this;
        }

        public Criteria andClosingPriceNotIn(List<Double> values) {
            addCriterion("CLOSING_PRICE not in", values, "closingPrice");
            return (Criteria) this;
        }

        public Criteria andClosingPriceBetween(Double value1, Double value2) {
            addCriterion("CLOSING_PRICE between", value1, value2, "closingPrice");
            return (Criteria) this;
        }

        public Criteria andClosingPriceNotBetween(Double value1, Double value2) {
            addCriterion("CLOSING_PRICE not between", value1, value2, "closingPrice");
            return (Criteria) this;
        }

        public Criteria andCurrentPriceIsNull() {
            addCriterion("CURRENT_PRICE is null");
            return (Criteria) this;
        }

        public Criteria andCurrentPriceIsNotNull() {
            addCriterion("CURRENT_PRICE is not null");
            return (Criteria) this;
        }

        public Criteria andCurrentPriceEqualTo(Double value) {
            addCriterion("CURRENT_PRICE =", value, "currentPrice");
            return (Criteria) this;
        }

        public Criteria andCurrentPriceNotEqualTo(Double value) {
            addCriterion("CURRENT_PRICE <>", value, "currentPrice");
            return (Criteria) this;
        }

        public Criteria andCurrentPriceGreaterThan(Double value) {
            addCriterion("CURRENT_PRICE >", value, "currentPrice");
            return (Criteria) this;
        }

        public Criteria andCurrentPriceGreaterThanOrEqualTo(Double value) {
            addCriterion("CURRENT_PRICE >=", value, "currentPrice");
            return (Criteria) this;
        }

        public Criteria andCurrentPriceLessThan(Double value) {
            addCriterion("CURRENT_PRICE <", value, "currentPrice");
            return (Criteria) this;
        }

        public Criteria andCurrentPriceLessThanOrEqualTo(Double value) {
            addCriterion("CURRENT_PRICE <=", value, "currentPrice");
            return (Criteria) this;
        }

        public Criteria andCurrentPriceIn(List<Double> values) {
            addCriterion("CURRENT_PRICE in", values, "currentPrice");
            return (Criteria) this;
        }

        public Criteria andCurrentPriceNotIn(List<Double> values) {
            addCriterion("CURRENT_PRICE not in", values, "currentPrice");
            return (Criteria) this;
        }

        public Criteria andCurrentPriceBetween(Double value1, Double value2) {
            addCriterion("CURRENT_PRICE between", value1, value2, "currentPrice");
            return (Criteria) this;
        }

        public Criteria andCurrentPriceNotBetween(Double value1, Double value2) {
            addCriterion("CURRENT_PRICE not between", value1, value2, "currentPrice");
            return (Criteria) this;
        }

        public Criteria andHighestPriceIsNull() {
            addCriterion("HIGHEST_PRICE is null");
            return (Criteria) this;
        }

        public Criteria andHighestPriceIsNotNull() {
            addCriterion("HIGHEST_PRICE is not null");
            return (Criteria) this;
        }

        public Criteria andHighestPriceEqualTo(Double value) {
            addCriterion("HIGHEST_PRICE =", value, "highestPrice");
            return (Criteria) this;
        }

        public Criteria andHighestPriceNotEqualTo(Double value) {
            addCriterion("HIGHEST_PRICE <>", value, "highestPrice");
            return (Criteria) this;
        }

        public Criteria andHighestPriceGreaterThan(Double value) {
            addCriterion("HIGHEST_PRICE >", value, "highestPrice");
            return (Criteria) this;
        }

        public Criteria andHighestPriceGreaterThanOrEqualTo(Double value) {
            addCriterion("HIGHEST_PRICE >=", value, "highestPrice");
            return (Criteria) this;
        }

        public Criteria andHighestPriceLessThan(Double value) {
            addCriterion("HIGHEST_PRICE <", value, "highestPrice");
            return (Criteria) this;
        }

        public Criteria andHighestPriceLessThanOrEqualTo(Double value) {
            addCriterion("HIGHEST_PRICE <=", value, "highestPrice");
            return (Criteria) this;
        }

        public Criteria andHighestPriceIn(List<Double> values) {
            addCriterion("HIGHEST_PRICE in", values, "highestPrice");
            return (Criteria) this;
        }

        public Criteria andHighestPriceNotIn(List<Double> values) {
            addCriterion("HIGHEST_PRICE not in", values, "highestPrice");
            return (Criteria) this;
        }

        public Criteria andHighestPriceBetween(Double value1, Double value2) {
            addCriterion("HIGHEST_PRICE between", value1, value2, "highestPrice");
            return (Criteria) this;
        }

        public Criteria andHighestPriceNotBetween(Double value1, Double value2) {
            addCriterion("HIGHEST_PRICE not between", value1, value2, "highestPrice");
            return (Criteria) this;
        }

        public Criteria andLowestPriceIsNull() {
            addCriterion("LOWEST_PRICE is null");
            return (Criteria) this;
        }

        public Criteria andLowestPriceIsNotNull() {
            addCriterion("LOWEST_PRICE is not null");
            return (Criteria) this;
        }

        public Criteria andLowestPriceEqualTo(Double value) {
            addCriterion("LOWEST_PRICE =", value, "lowestPrice");
            return (Criteria) this;
        }

        public Criteria andLowestPriceNotEqualTo(Double value) {
            addCriterion("LOWEST_PRICE <>", value, "lowestPrice");
            return (Criteria) this;
        }

        public Criteria andLowestPriceGreaterThan(Double value) {
            addCriterion("LOWEST_PRICE >", value, "lowestPrice");
            return (Criteria) this;
        }

        public Criteria andLowestPriceGreaterThanOrEqualTo(Double value) {
            addCriterion("LOWEST_PRICE >=", value, "lowestPrice");
            return (Criteria) this;
        }

        public Criteria andLowestPriceLessThan(Double value) {
            addCriterion("LOWEST_PRICE <", value, "lowestPrice");
            return (Criteria) this;
        }

        public Criteria andLowestPriceLessThanOrEqualTo(Double value) {
            addCriterion("LOWEST_PRICE <=", value, "lowestPrice");
            return (Criteria) this;
        }

        public Criteria andLowestPriceIn(List<Double> values) {
            addCriterion("LOWEST_PRICE in", values, "lowestPrice");
            return (Criteria) this;
        }

        public Criteria andLowestPriceNotIn(List<Double> values) {
            addCriterion("LOWEST_PRICE not in", values, "lowestPrice");
            return (Criteria) this;
        }

        public Criteria andLowestPriceBetween(Double value1, Double value2) {
            addCriterion("LOWEST_PRICE between", value1, value2, "lowestPrice");
            return (Criteria) this;
        }

        public Criteria andLowestPriceNotBetween(Double value1, Double value2) {
            addCriterion("LOWEST_PRICE not between", value1, value2, "lowestPrice");
            return (Criteria) this;
        }

        public Criteria andCompetitiveBuyPriceIsNull() {
            addCriterion("COMPETITIVE_BUY_PRICE is null");
            return (Criteria) this;
        }

        public Criteria andCompetitiveBuyPriceIsNotNull() {
            addCriterion("COMPETITIVE_BUY_PRICE is not null");
            return (Criteria) this;
        }

        public Criteria andCompetitiveBuyPriceEqualTo(Double value) {
            addCriterion("COMPETITIVE_BUY_PRICE =", value, "competitiveBuyPrice");
            return (Criteria) this;
        }

        public Criteria andCompetitiveBuyPriceNotEqualTo(Double value) {
            addCriterion("COMPETITIVE_BUY_PRICE <>", value, "competitiveBuyPrice");
            return (Criteria) this;
        }

        public Criteria andCompetitiveBuyPriceGreaterThan(Double value) {
            addCriterion("COMPETITIVE_BUY_PRICE >", value, "competitiveBuyPrice");
            return (Criteria) this;
        }

        public Criteria andCompetitiveBuyPriceGreaterThanOrEqualTo(Double value) {
            addCriterion("COMPETITIVE_BUY_PRICE >=", value, "competitiveBuyPrice");
            return (Criteria) this;
        }

        public Criteria andCompetitiveBuyPriceLessThan(Double value) {
            addCriterion("COMPETITIVE_BUY_PRICE <", value, "competitiveBuyPrice");
            return (Criteria) this;
        }

        public Criteria andCompetitiveBuyPriceLessThanOrEqualTo(Double value) {
            addCriterion("COMPETITIVE_BUY_PRICE <=", value, "competitiveBuyPrice");
            return (Criteria) this;
        }

        public Criteria andCompetitiveBuyPriceIn(List<Double> values) {
            addCriterion("COMPETITIVE_BUY_PRICE in", values, "competitiveBuyPrice");
            return (Criteria) this;
        }

        public Criteria andCompetitiveBuyPriceNotIn(List<Double> values) {
            addCriterion("COMPETITIVE_BUY_PRICE not in", values, "competitiveBuyPrice");
            return (Criteria) this;
        }

        public Criteria andCompetitiveBuyPriceBetween(Double value1, Double value2) {
            addCriterion("COMPETITIVE_BUY_PRICE between", value1, value2, "competitiveBuyPrice");
            return (Criteria) this;
        }

        public Criteria andCompetitiveBuyPriceNotBetween(Double value1, Double value2) {
            addCriterion("COMPETITIVE_BUY_PRICE not between", value1, value2, "competitiveBuyPrice");
            return (Criteria) this;
        }

        public Criteria andCompetitiveSalePriceIsNull() {
            addCriterion("COMPETITIVE_SALE_PRICE is null");
            return (Criteria) this;
        }

        public Criteria andCompetitiveSalePriceIsNotNull() {
            addCriterion("COMPETITIVE_SALE_PRICE is not null");
            return (Criteria) this;
        }

        public Criteria andCompetitiveSalePriceEqualTo(Double value) {
            addCriterion("COMPETITIVE_SALE_PRICE =", value, "competitiveSalePrice");
            return (Criteria) this;
        }

        public Criteria andCompetitiveSalePriceNotEqualTo(Double value) {
            addCriterion("COMPETITIVE_SALE_PRICE <>", value, "competitiveSalePrice");
            return (Criteria) this;
        }

        public Criteria andCompetitiveSalePriceGreaterThan(Double value) {
            addCriterion("COMPETITIVE_SALE_PRICE >", value, "competitiveSalePrice");
            return (Criteria) this;
        }

        public Criteria andCompetitiveSalePriceGreaterThanOrEqualTo(Double value) {
            addCriterion("COMPETITIVE_SALE_PRICE >=", value, "competitiveSalePrice");
            return (Criteria) this;
        }

        public Criteria andCompetitiveSalePriceLessThan(Double value) {
            addCriterion("COMPETITIVE_SALE_PRICE <", value, "competitiveSalePrice");
            return (Criteria) this;
        }

        public Criteria andCompetitiveSalePriceLessThanOrEqualTo(Double value) {
            addCriterion("COMPETITIVE_SALE_PRICE <=", value, "competitiveSalePrice");
            return (Criteria) this;
        }

        public Criteria andCompetitiveSalePriceIn(List<Double> values) {
            addCriterion("COMPETITIVE_SALE_PRICE in", values, "competitiveSalePrice");
            return (Criteria) this;
        }

        public Criteria andCompetitiveSalePriceNotIn(List<Double> values) {
            addCriterion("COMPETITIVE_SALE_PRICE not in", values, "competitiveSalePrice");
            return (Criteria) this;
        }

        public Criteria andCompetitiveSalePriceBetween(Double value1, Double value2) {
            addCriterion("COMPETITIVE_SALE_PRICE between", value1, value2, "competitiveSalePrice");
            return (Criteria) this;
        }

        public Criteria andCompetitiveSalePriceNotBetween(Double value1, Double value2) {
            addCriterion("COMPETITIVE_SALE_PRICE not between", value1, value2, "competitiveSalePrice");
            return (Criteria) this;
        }

        public Criteria andNumberOfHeldIsNull() {
            addCriterion("NUMBER_OF_HELD is null");
            return (Criteria) this;
        }

        public Criteria andNumberOfHeldIsNotNull() {
            addCriterion("NUMBER_OF_HELD is not null");
            return (Criteria) this;
        }

        public Criteria andNumberOfHeldEqualTo(Long value) {
            addCriterion("NUMBER_OF_HELD =", value, "numberOfHeld");
            return (Criteria) this;
        }

        public Criteria andNumberOfHeldNotEqualTo(Long value) {
            addCriterion("NUMBER_OF_HELD <>", value, "numberOfHeld");
            return (Criteria) this;
        }

        public Criteria andNumberOfHeldGreaterThan(Long value) {
            addCriterion("NUMBER_OF_HELD >", value, "numberOfHeld");
            return (Criteria) this;
        }

        public Criteria andNumberOfHeldGreaterThanOrEqualTo(Long value) {
            addCriterion("NUMBER_OF_HELD >=", value, "numberOfHeld");
            return (Criteria) this;
        }

        public Criteria andNumberOfHeldLessThan(Long value) {
            addCriterion("NUMBER_OF_HELD <", value, "numberOfHeld");
            return (Criteria) this;
        }

        public Criteria andNumberOfHeldLessThanOrEqualTo(Long value) {
            addCriterion("NUMBER_OF_HELD <=", value, "numberOfHeld");
            return (Criteria) this;
        }

        public Criteria andNumberOfHeldIn(List<Long> values) {
            addCriterion("NUMBER_OF_HELD in", values, "numberOfHeld");
            return (Criteria) this;
        }

        public Criteria andNumberOfHeldNotIn(List<Long> values) {
            addCriterion("NUMBER_OF_HELD not in", values, "numberOfHeld");
            return (Criteria) this;
        }

        public Criteria andNumberOfHeldBetween(Long value1, Long value2) {
            addCriterion("NUMBER_OF_HELD between", value1, value2, "numberOfHeld");
            return (Criteria) this;
        }

        public Criteria andNumberOfHeldNotBetween(Long value1, Long value2) {
            addCriterion("NUMBER_OF_HELD not between", value1, value2, "numberOfHeld");
            return (Criteria) this;
        }

        public Criteria andNumberOfTradedIsNull() {
            addCriterion("NUMBER_OF_TRADED is null");
            return (Criteria) this;
        }

        public Criteria andNumberOfTradedIsNotNull() {
            addCriterion("NUMBER_OF_TRADED is not null");
            return (Criteria) this;
        }

        public Criteria andNumberOfTradedEqualTo(Long value) {
            addCriterion("NUMBER_OF_TRADED =", value, "numberOfTraded");
            return (Criteria) this;
        }

        public Criteria andNumberOfTradedNotEqualTo(Long value) {
            addCriterion("NUMBER_OF_TRADED <>", value, "numberOfTraded");
            return (Criteria) this;
        }

        public Criteria andNumberOfTradedGreaterThan(Long value) {
            addCriterion("NUMBER_OF_TRADED >", value, "numberOfTraded");
            return (Criteria) this;
        }

        public Criteria andNumberOfTradedGreaterThanOrEqualTo(Long value) {
            addCriterion("NUMBER_OF_TRADED >=", value, "numberOfTraded");
            return (Criteria) this;
        }

        public Criteria andNumberOfTradedLessThan(Long value) {
            addCriterion("NUMBER_OF_TRADED <", value, "numberOfTraded");
            return (Criteria) this;
        }

        public Criteria andNumberOfTradedLessThanOrEqualTo(Long value) {
            addCriterion("NUMBER_OF_TRADED <=", value, "numberOfTraded");
            return (Criteria) this;
        }

        public Criteria andNumberOfTradedIn(List<Long> values) {
            addCriterion("NUMBER_OF_TRADED in", values, "numberOfTraded");
            return (Criteria) this;
        }

        public Criteria andNumberOfTradedNotIn(List<Long> values) {
            addCriterion("NUMBER_OF_TRADED not in", values, "numberOfTraded");
            return (Criteria) this;
        }

        public Criteria andNumberOfTradedBetween(Long value1, Long value2) {
            addCriterion("NUMBER_OF_TRADED between", value1, value2, "numberOfTraded");
            return (Criteria) this;
        }

        public Criteria andNumberOfTradedNotBetween(Long value1, Long value2) {
            addCriterion("NUMBER_OF_TRADED not between", value1, value2, "numberOfTraded");
            return (Criteria) this;
        }

        public Criteria andAmountOfBuyIsNull() {
            addCriterion("AMOUNT_OF_BUY is null");
            return (Criteria) this;
        }

        public Criteria andAmountOfBuyIsNotNull() {
            addCriterion("AMOUNT_OF_BUY is not null");
            return (Criteria) this;
        }

        public Criteria andAmountOfBuyEqualTo(Long value) {
            addCriterion("AMOUNT_OF_BUY =", value, "amountOfBuy");
            return (Criteria) this;
        }

        public Criteria andAmountOfBuyNotEqualTo(Long value) {
            addCriterion("AMOUNT_OF_BUY <>", value, "amountOfBuy");
            return (Criteria) this;
        }

        public Criteria andAmountOfBuyGreaterThan(Long value) {
            addCriterion("AMOUNT_OF_BUY >", value, "amountOfBuy");
            return (Criteria) this;
        }

        public Criteria andAmountOfBuyGreaterThanOrEqualTo(Long value) {
            addCriterion("AMOUNT_OF_BUY >=", value, "amountOfBuy");
            return (Criteria) this;
        }

        public Criteria andAmountOfBuyLessThan(Long value) {
            addCriterion("AMOUNT_OF_BUY <", value, "amountOfBuy");
            return (Criteria) this;
        }

        public Criteria andAmountOfBuyLessThanOrEqualTo(Long value) {
            addCriterion("AMOUNT_OF_BUY <=", value, "amountOfBuy");
            return (Criteria) this;
        }

        public Criteria andAmountOfBuyIn(List<Long> values) {
            addCriterion("AMOUNT_OF_BUY in", values, "amountOfBuy");
            return (Criteria) this;
        }

        public Criteria andAmountOfBuyNotIn(List<Long> values) {
            addCriterion("AMOUNT_OF_BUY not in", values, "amountOfBuy");
            return (Criteria) this;
        }

        public Criteria andAmountOfBuyBetween(Long value1, Long value2) {
            addCriterion("AMOUNT_OF_BUY between", value1, value2, "amountOfBuy");
            return (Criteria) this;
        }

        public Criteria andAmountOfBuyNotBetween(Long value1, Long value2) {
            addCriterion("AMOUNT_OF_BUY not between", value1, value2, "amountOfBuy");
            return (Criteria) this;
        }

        public Criteria andPriceOfBuy1IsNull() {
            addCriterion("PRICE_OF_BUY1 is null");
            return (Criteria) this;
        }

        public Criteria andPriceOfBuy1IsNotNull() {
            addCriterion("PRICE_OF_BUY1 is not null");
            return (Criteria) this;
        }

        public Criteria andPriceOfBuy1EqualTo(Double value) {
            addCriterion("PRICE_OF_BUY1 =", value, "priceOfBuy1");
            return (Criteria) this;
        }

        public Criteria andPriceOfBuy1NotEqualTo(Double value) {
            addCriterion("PRICE_OF_BUY1 <>", value, "priceOfBuy1");
            return (Criteria) this;
        }

        public Criteria andPriceOfBuy1GreaterThan(Double value) {
            addCriterion("PRICE_OF_BUY1 >", value, "priceOfBuy1");
            return (Criteria) this;
        }

        public Criteria andPriceOfBuy1GreaterThanOrEqualTo(Double value) {
            addCriterion("PRICE_OF_BUY1 >=", value, "priceOfBuy1");
            return (Criteria) this;
        }

        public Criteria andPriceOfBuy1LessThan(Double value) {
            addCriterion("PRICE_OF_BUY1 <", value, "priceOfBuy1");
            return (Criteria) this;
        }

        public Criteria andPriceOfBuy1LessThanOrEqualTo(Double value) {
            addCriterion("PRICE_OF_BUY1 <=", value, "priceOfBuy1");
            return (Criteria) this;
        }

        public Criteria andPriceOfBuy1In(List<Double> values) {
            addCriterion("PRICE_OF_BUY1 in", values, "priceOfBuy1");
            return (Criteria) this;
        }

        public Criteria andPriceOfBuy1NotIn(List<Double> values) {
            addCriterion("PRICE_OF_BUY1 not in", values, "priceOfBuy1");
            return (Criteria) this;
        }

        public Criteria andPriceOfBuy1Between(Double value1, Double value2) {
            addCriterion("PRICE_OF_BUY1 between", value1, value2, "priceOfBuy1");
            return (Criteria) this;
        }

        public Criteria andPriceOfBuy1NotBetween(Double value1, Double value2) {
            addCriterion("PRICE_OF_BUY1 not between", value1, value2, "priceOfBuy1");
            return (Criteria) this;
        }

        public Criteria andPriceOfBuy2IsNull() {
            addCriterion("PRICE_OF_BUY2 is null");
            return (Criteria) this;
        }

        public Criteria andPriceOfBuy2IsNotNull() {
            addCriterion("PRICE_OF_BUY2 is not null");
            return (Criteria) this;
        }

        public Criteria andPriceOfBuy2EqualTo(Double value) {
            addCriterion("PRICE_OF_BUY2 =", value, "priceOfBuy2");
            return (Criteria) this;
        }

        public Criteria andPriceOfBuy2NotEqualTo(Double value) {
            addCriterion("PRICE_OF_BUY2 <>", value, "priceOfBuy2");
            return (Criteria) this;
        }

        public Criteria andPriceOfBuy2GreaterThan(Double value) {
            addCriterion("PRICE_OF_BUY2 >", value, "priceOfBuy2");
            return (Criteria) this;
        }

        public Criteria andPriceOfBuy2GreaterThanOrEqualTo(Double value) {
            addCriterion("PRICE_OF_BUY2 >=", value, "priceOfBuy2");
            return (Criteria) this;
        }

        public Criteria andPriceOfBuy2LessThan(Double value) {
            addCriterion("PRICE_OF_BUY2 <", value, "priceOfBuy2");
            return (Criteria) this;
        }

        public Criteria andPriceOfBuy2LessThanOrEqualTo(Double value) {
            addCriterion("PRICE_OF_BUY2 <=", value, "priceOfBuy2");
            return (Criteria) this;
        }

        public Criteria andPriceOfBuy2In(List<Double> values) {
            addCriterion("PRICE_OF_BUY2 in", values, "priceOfBuy2");
            return (Criteria) this;
        }

        public Criteria andPriceOfBuy2NotIn(List<Double> values) {
            addCriterion("PRICE_OF_BUY2 not in", values, "priceOfBuy2");
            return (Criteria) this;
        }

        public Criteria andPriceOfBuy2Between(Double value1, Double value2) {
            addCriterion("PRICE_OF_BUY2 between", value1, value2, "priceOfBuy2");
            return (Criteria) this;
        }

        public Criteria andPriceOfBuy2NotBetween(Double value1, Double value2) {
            addCriterion("PRICE_OF_BUY2 not between", value1, value2, "priceOfBuy2");
            return (Criteria) this;
        }

        public Criteria andPriceOfBuy3IsNull() {
            addCriterion("PRICE_OF_BUY3 is null");
            return (Criteria) this;
        }

        public Criteria andPriceOfBuy3IsNotNull() {
            addCriterion("PRICE_OF_BUY3 is not null");
            return (Criteria) this;
        }

        public Criteria andPriceOfBuy3EqualTo(Double value) {
            addCriterion("PRICE_OF_BUY3 =", value, "priceOfBuy3");
            return (Criteria) this;
        }

        public Criteria andPriceOfBuy3NotEqualTo(Double value) {
            addCriterion("PRICE_OF_BUY3 <>", value, "priceOfBuy3");
            return (Criteria) this;
        }

        public Criteria andPriceOfBuy3GreaterThan(Double value) {
            addCriterion("PRICE_OF_BUY3 >", value, "priceOfBuy3");
            return (Criteria) this;
        }

        public Criteria andPriceOfBuy3GreaterThanOrEqualTo(Double value) {
            addCriterion("PRICE_OF_BUY3 >=", value, "priceOfBuy3");
            return (Criteria) this;
        }

        public Criteria andPriceOfBuy3LessThan(Double value) {
            addCriterion("PRICE_OF_BUY3 <", value, "priceOfBuy3");
            return (Criteria) this;
        }

        public Criteria andPriceOfBuy3LessThanOrEqualTo(Double value) {
            addCriterion("PRICE_OF_BUY3 <=", value, "priceOfBuy3");
            return (Criteria) this;
        }

        public Criteria andPriceOfBuy3In(List<Double> values) {
            addCriterion("PRICE_OF_BUY3 in", values, "priceOfBuy3");
            return (Criteria) this;
        }

        public Criteria andPriceOfBuy3NotIn(List<Double> values) {
            addCriterion("PRICE_OF_BUY3 not in", values, "priceOfBuy3");
            return (Criteria) this;
        }

        public Criteria andPriceOfBuy3Between(Double value1, Double value2) {
            addCriterion("PRICE_OF_BUY3 between", value1, value2, "priceOfBuy3");
            return (Criteria) this;
        }

        public Criteria andPriceOfBuy3NotBetween(Double value1, Double value2) {
            addCriterion("PRICE_OF_BUY3 not between", value1, value2, "priceOfBuy3");
            return (Criteria) this;
        }

        public Criteria andPriceOfBuy4IsNull() {
            addCriterion("PRICE_OF_BUY4 is null");
            return (Criteria) this;
        }

        public Criteria andPriceOfBuy4IsNotNull() {
            addCriterion("PRICE_OF_BUY4 is not null");
            return (Criteria) this;
        }

        public Criteria andPriceOfBuy4EqualTo(Double value) {
            addCriterion("PRICE_OF_BUY4 =", value, "priceOfBuy4");
            return (Criteria) this;
        }

        public Criteria andPriceOfBuy4NotEqualTo(Double value) {
            addCriterion("PRICE_OF_BUY4 <>", value, "priceOfBuy4");
            return (Criteria) this;
        }

        public Criteria andPriceOfBuy4GreaterThan(Double value) {
            addCriterion("PRICE_OF_BUY4 >", value, "priceOfBuy4");
            return (Criteria) this;
        }

        public Criteria andPriceOfBuy4GreaterThanOrEqualTo(Double value) {
            addCriterion("PRICE_OF_BUY4 >=", value, "priceOfBuy4");
            return (Criteria) this;
        }

        public Criteria andPriceOfBuy4LessThan(Double value) {
            addCriterion("PRICE_OF_BUY4 <", value, "priceOfBuy4");
            return (Criteria) this;
        }

        public Criteria andPriceOfBuy4LessThanOrEqualTo(Double value) {
            addCriterion("PRICE_OF_BUY4 <=", value, "priceOfBuy4");
            return (Criteria) this;
        }

        public Criteria andPriceOfBuy4In(List<Double> values) {
            addCriterion("PRICE_OF_BUY4 in", values, "priceOfBuy4");
            return (Criteria) this;
        }

        public Criteria andPriceOfBuy4NotIn(List<Double> values) {
            addCriterion("PRICE_OF_BUY4 not in", values, "priceOfBuy4");
            return (Criteria) this;
        }

        public Criteria andPriceOfBuy4Between(Double value1, Double value2) {
            addCriterion("PRICE_OF_BUY4 between", value1, value2, "priceOfBuy4");
            return (Criteria) this;
        }

        public Criteria andPriceOfBuy4NotBetween(Double value1, Double value2) {
            addCriterion("PRICE_OF_BUY4 not between", value1, value2, "priceOfBuy4");
            return (Criteria) this;
        }

        public Criteria andPriceOfBuy5IsNull() {
            addCriterion("PRICE_OF_BUY5 is null");
            return (Criteria) this;
        }

        public Criteria andPriceOfBuy5IsNotNull() {
            addCriterion("PRICE_OF_BUY5 is not null");
            return (Criteria) this;
        }

        public Criteria andPriceOfBuy5EqualTo(Double value) {
            addCriterion("PRICE_OF_BUY5 =", value, "priceOfBuy5");
            return (Criteria) this;
        }

        public Criteria andPriceOfBuy5NotEqualTo(Double value) {
            addCriterion("PRICE_OF_BUY5 <>", value, "priceOfBuy5");
            return (Criteria) this;
        }

        public Criteria andPriceOfBuy5GreaterThan(Double value) {
            addCriterion("PRICE_OF_BUY5 >", value, "priceOfBuy5");
            return (Criteria) this;
        }

        public Criteria andPriceOfBuy5GreaterThanOrEqualTo(Double value) {
            addCriterion("PRICE_OF_BUY5 >=", value, "priceOfBuy5");
            return (Criteria) this;
        }

        public Criteria andPriceOfBuy5LessThan(Double value) {
            addCriterion("PRICE_OF_BUY5 <", value, "priceOfBuy5");
            return (Criteria) this;
        }

        public Criteria andPriceOfBuy5LessThanOrEqualTo(Double value) {
            addCriterion("PRICE_OF_BUY5 <=", value, "priceOfBuy5");
            return (Criteria) this;
        }

        public Criteria andPriceOfBuy5In(List<Double> values) {
            addCriterion("PRICE_OF_BUY5 in", values, "priceOfBuy5");
            return (Criteria) this;
        }

        public Criteria andPriceOfBuy5NotIn(List<Double> values) {
            addCriterion("PRICE_OF_BUY5 not in", values, "priceOfBuy5");
            return (Criteria) this;
        }

        public Criteria andPriceOfBuy5Between(Double value1, Double value2) {
            addCriterion("PRICE_OF_BUY5 between", value1, value2, "priceOfBuy5");
            return (Criteria) this;
        }

        public Criteria andPriceOfBuy5NotBetween(Double value1, Double value2) {
            addCriterion("PRICE_OF_BUY5 not between", value1, value2, "priceOfBuy5");
            return (Criteria) this;
        }

        public Criteria andAmountOfSaleIsNull() {
            addCriterion("AMOUNT_OF_SALE is null");
            return (Criteria) this;
        }

        public Criteria andAmountOfSaleIsNotNull() {
            addCriterion("AMOUNT_OF_SALE is not null");
            return (Criteria) this;
        }

        public Criteria andAmountOfSaleEqualTo(Long value) {
            addCriterion("AMOUNT_OF_SALE =", value, "amountOfSale");
            return (Criteria) this;
        }

        public Criteria andAmountOfSaleNotEqualTo(Long value) {
            addCriterion("AMOUNT_OF_SALE <>", value, "amountOfSale");
            return (Criteria) this;
        }

        public Criteria andAmountOfSaleGreaterThan(Long value) {
            addCriterion("AMOUNT_OF_SALE >", value, "amountOfSale");
            return (Criteria) this;
        }

        public Criteria andAmountOfSaleGreaterThanOrEqualTo(Long value) {
            addCriterion("AMOUNT_OF_SALE >=", value, "amountOfSale");
            return (Criteria) this;
        }

        public Criteria andAmountOfSaleLessThan(Long value) {
            addCriterion("AMOUNT_OF_SALE <", value, "amountOfSale");
            return (Criteria) this;
        }

        public Criteria andAmountOfSaleLessThanOrEqualTo(Long value) {
            addCriterion("AMOUNT_OF_SALE <=", value, "amountOfSale");
            return (Criteria) this;
        }

        public Criteria andAmountOfSaleIn(List<Long> values) {
            addCriterion("AMOUNT_OF_SALE in", values, "amountOfSale");
            return (Criteria) this;
        }

        public Criteria andAmountOfSaleNotIn(List<Long> values) {
            addCriterion("AMOUNT_OF_SALE not in", values, "amountOfSale");
            return (Criteria) this;
        }

        public Criteria andAmountOfSaleBetween(Long value1, Long value2) {
            addCriterion("AMOUNT_OF_SALE between", value1, value2, "amountOfSale");
            return (Criteria) this;
        }

        public Criteria andAmountOfSaleNotBetween(Long value1, Long value2) {
            addCriterion("AMOUNT_OF_SALE not between", value1, value2, "amountOfSale");
            return (Criteria) this;
        }

        public Criteria andPriceOfSale1IsNull() {
            addCriterion("PRICE_OF_SALE1 is null");
            return (Criteria) this;
        }

        public Criteria andPriceOfSale1IsNotNull() {
            addCriterion("PRICE_OF_SALE1 is not null");
            return (Criteria) this;
        }

        public Criteria andPriceOfSale1EqualTo(Double value) {
            addCriterion("PRICE_OF_SALE1 =", value, "priceOfSale1");
            return (Criteria) this;
        }

        public Criteria andPriceOfSale1NotEqualTo(Double value) {
            addCriterion("PRICE_OF_SALE1 <>", value, "priceOfSale1");
            return (Criteria) this;
        }

        public Criteria andPriceOfSale1GreaterThan(Double value) {
            addCriterion("PRICE_OF_SALE1 >", value, "priceOfSale1");
            return (Criteria) this;
        }

        public Criteria andPriceOfSale1GreaterThanOrEqualTo(Double value) {
            addCriterion("PRICE_OF_SALE1 >=", value, "priceOfSale1");
            return (Criteria) this;
        }

        public Criteria andPriceOfSale1LessThan(Double value) {
            addCriterion("PRICE_OF_SALE1 <", value, "priceOfSale1");
            return (Criteria) this;
        }

        public Criteria andPriceOfSale1LessThanOrEqualTo(Double value) {
            addCriterion("PRICE_OF_SALE1 <=", value, "priceOfSale1");
            return (Criteria) this;
        }

        public Criteria andPriceOfSale1In(List<Double> values) {
            addCriterion("PRICE_OF_SALE1 in", values, "priceOfSale1");
            return (Criteria) this;
        }

        public Criteria andPriceOfSale1NotIn(List<Double> values) {
            addCriterion("PRICE_OF_SALE1 not in", values, "priceOfSale1");
            return (Criteria) this;
        }

        public Criteria andPriceOfSale1Between(Double value1, Double value2) {
            addCriterion("PRICE_OF_SALE1 between", value1, value2, "priceOfSale1");
            return (Criteria) this;
        }

        public Criteria andPriceOfSale1NotBetween(Double value1, Double value2) {
            addCriterion("PRICE_OF_SALE1 not between", value1, value2, "priceOfSale1");
            return (Criteria) this;
        }

        public Criteria andPriceOfSale2IsNull() {
            addCriterion("PRICE_OF_SALE2 is null");
            return (Criteria) this;
        }

        public Criteria andPriceOfSale2IsNotNull() {
            addCriterion("PRICE_OF_SALE2 is not null");
            return (Criteria) this;
        }

        public Criteria andPriceOfSale2EqualTo(Double value) {
            addCriterion("PRICE_OF_SALE2 =", value, "priceOfSale2");
            return (Criteria) this;
        }

        public Criteria andPriceOfSale2NotEqualTo(Double value) {
            addCriterion("PRICE_OF_SALE2 <>", value, "priceOfSale2");
            return (Criteria) this;
        }

        public Criteria andPriceOfSale2GreaterThan(Double value) {
            addCriterion("PRICE_OF_SALE2 >", value, "priceOfSale2");
            return (Criteria) this;
        }

        public Criteria andPriceOfSale2GreaterThanOrEqualTo(Double value) {
            addCriterion("PRICE_OF_SALE2 >=", value, "priceOfSale2");
            return (Criteria) this;
        }

        public Criteria andPriceOfSale2LessThan(Double value) {
            addCriterion("PRICE_OF_SALE2 <", value, "priceOfSale2");
            return (Criteria) this;
        }

        public Criteria andPriceOfSale2LessThanOrEqualTo(Double value) {
            addCriterion("PRICE_OF_SALE2 <=", value, "priceOfSale2");
            return (Criteria) this;
        }

        public Criteria andPriceOfSale2In(List<Double> values) {
            addCriterion("PRICE_OF_SALE2 in", values, "priceOfSale2");
            return (Criteria) this;
        }

        public Criteria andPriceOfSale2NotIn(List<Double> values) {
            addCriterion("PRICE_OF_SALE2 not in", values, "priceOfSale2");
            return (Criteria) this;
        }

        public Criteria andPriceOfSale2Between(Double value1, Double value2) {
            addCriterion("PRICE_OF_SALE2 between", value1, value2, "priceOfSale2");
            return (Criteria) this;
        }

        public Criteria andPriceOfSale2NotBetween(Double value1, Double value2) {
            addCriterion("PRICE_OF_SALE2 not between", value1, value2, "priceOfSale2");
            return (Criteria) this;
        }

        public Criteria andPriceOfSale3IsNull() {
            addCriterion("PRICE_OF_SALE3 is null");
            return (Criteria) this;
        }

        public Criteria andPriceOfSale3IsNotNull() {
            addCriterion("PRICE_OF_SALE3 is not null");
            return (Criteria) this;
        }

        public Criteria andPriceOfSale3EqualTo(Double value) {
            addCriterion("PRICE_OF_SALE3 =", value, "priceOfSale3");
            return (Criteria) this;
        }

        public Criteria andPriceOfSale3NotEqualTo(Double value) {
            addCriterion("PRICE_OF_SALE3 <>", value, "priceOfSale3");
            return (Criteria) this;
        }

        public Criteria andPriceOfSale3GreaterThan(Double value) {
            addCriterion("PRICE_OF_SALE3 >", value, "priceOfSale3");
            return (Criteria) this;
        }

        public Criteria andPriceOfSale3GreaterThanOrEqualTo(Double value) {
            addCriterion("PRICE_OF_SALE3 >=", value, "priceOfSale3");
            return (Criteria) this;
        }

        public Criteria andPriceOfSale3LessThan(Double value) {
            addCriterion("PRICE_OF_SALE3 <", value, "priceOfSale3");
            return (Criteria) this;
        }

        public Criteria andPriceOfSale3LessThanOrEqualTo(Double value) {
            addCriterion("PRICE_OF_SALE3 <=", value, "priceOfSale3");
            return (Criteria) this;
        }

        public Criteria andPriceOfSale3In(List<Double> values) {
            addCriterion("PRICE_OF_SALE3 in", values, "priceOfSale3");
            return (Criteria) this;
        }

        public Criteria andPriceOfSale3NotIn(List<Double> values) {
            addCriterion("PRICE_OF_SALE3 not in", values, "priceOfSale3");
            return (Criteria) this;
        }

        public Criteria andPriceOfSale3Between(Double value1, Double value2) {
            addCriterion("PRICE_OF_SALE3 between", value1, value2, "priceOfSale3");
            return (Criteria) this;
        }

        public Criteria andPriceOfSale3NotBetween(Double value1, Double value2) {
            addCriterion("PRICE_OF_SALE3 not between", value1, value2, "priceOfSale3");
            return (Criteria) this;
        }

        public Criteria andPriceOfSale4IsNull() {
            addCriterion("PRICE_OF_SALE4 is null");
            return (Criteria) this;
        }

        public Criteria andPriceOfSale4IsNotNull() {
            addCriterion("PRICE_OF_SALE4 is not null");
            return (Criteria) this;
        }

        public Criteria andPriceOfSale4EqualTo(Double value) {
            addCriterion("PRICE_OF_SALE4 =", value, "priceOfSale4");
            return (Criteria) this;
        }

        public Criteria andPriceOfSale4NotEqualTo(Double value) {
            addCriterion("PRICE_OF_SALE4 <>", value, "priceOfSale4");
            return (Criteria) this;
        }

        public Criteria andPriceOfSale4GreaterThan(Double value) {
            addCriterion("PRICE_OF_SALE4 >", value, "priceOfSale4");
            return (Criteria) this;
        }

        public Criteria andPriceOfSale4GreaterThanOrEqualTo(Double value) {
            addCriterion("PRICE_OF_SALE4 >=", value, "priceOfSale4");
            return (Criteria) this;
        }

        public Criteria andPriceOfSale4LessThan(Double value) {
            addCriterion("PRICE_OF_SALE4 <", value, "priceOfSale4");
            return (Criteria) this;
        }

        public Criteria andPriceOfSale4LessThanOrEqualTo(Double value) {
            addCriterion("PRICE_OF_SALE4 <=", value, "priceOfSale4");
            return (Criteria) this;
        }

        public Criteria andPriceOfSale4In(List<Double> values) {
            addCriterion("PRICE_OF_SALE4 in", values, "priceOfSale4");
            return (Criteria) this;
        }

        public Criteria andPriceOfSale4NotIn(List<Double> values) {
            addCriterion("PRICE_OF_SALE4 not in", values, "priceOfSale4");
            return (Criteria) this;
        }

        public Criteria andPriceOfSale4Between(Double value1, Double value2) {
            addCriterion("PRICE_OF_SALE4 between", value1, value2, "priceOfSale4");
            return (Criteria) this;
        }

        public Criteria andPriceOfSale4NotBetween(Double value1, Double value2) {
            addCriterion("PRICE_OF_SALE4 not between", value1, value2, "priceOfSale4");
            return (Criteria) this;
        }

        public Criteria andPriceOfSale5IsNull() {
            addCriterion("PRICE_OF_SALE5 is null");
            return (Criteria) this;
        }

        public Criteria andPriceOfSale5IsNotNull() {
            addCriterion("PRICE_OF_SALE5 is not null");
            return (Criteria) this;
        }

        public Criteria andPriceOfSale5EqualTo(Double value) {
            addCriterion("PRICE_OF_SALE5 =", value, "priceOfSale5");
            return (Criteria) this;
        }

        public Criteria andPriceOfSale5NotEqualTo(Double value) {
            addCriterion("PRICE_OF_SALE5 <>", value, "priceOfSale5");
            return (Criteria) this;
        }

        public Criteria andPriceOfSale5GreaterThan(Double value) {
            addCriterion("PRICE_OF_SALE5 >", value, "priceOfSale5");
            return (Criteria) this;
        }

        public Criteria andPriceOfSale5GreaterThanOrEqualTo(Double value) {
            addCriterion("PRICE_OF_SALE5 >=", value, "priceOfSale5");
            return (Criteria) this;
        }

        public Criteria andPriceOfSale5LessThan(Double value) {
            addCriterion("PRICE_OF_SALE5 <", value, "priceOfSale5");
            return (Criteria) this;
        }

        public Criteria andPriceOfSale5LessThanOrEqualTo(Double value) {
            addCriterion("PRICE_OF_SALE5 <=", value, "priceOfSale5");
            return (Criteria) this;
        }

        public Criteria andPriceOfSale5In(List<Double> values) {
            addCriterion("PRICE_OF_SALE5 in", values, "priceOfSale5");
            return (Criteria) this;
        }

        public Criteria andPriceOfSale5NotIn(List<Double> values) {
            addCriterion("PRICE_OF_SALE5 not in", values, "priceOfSale5");
            return (Criteria) this;
        }

        public Criteria andPriceOfSale5Between(Double value1, Double value2) {
            addCriterion("PRICE_OF_SALE5 between", value1, value2, "priceOfSale5");
            return (Criteria) this;
        }

        public Criteria andPriceOfSale5NotBetween(Double value1, Double value2) {
            addCriterion("PRICE_OF_SALE5 not between", value1, value2, "priceOfSale5");
            return (Criteria) this;
        }

        public Criteria andDateIsNull() {
            addCriterion("DATE is null");
            return (Criteria) this;
        }

        public Criteria andDateIsNotNull() {
            addCriterion("DATE is not null");
            return (Criteria) this;
        }

        public Criteria andDateEqualTo(Date value) {
            addCriterionForJDBCDate("DATE =", value, "date");
            return (Criteria) this;
        }

        public Criteria andDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("DATE <>", value, "date");
            return (Criteria) this;
        }

        public Criteria andDateGreaterThan(Date value) {
            addCriterionForJDBCDate("DATE >", value, "date");
            return (Criteria) this;
        }

        public Criteria andDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("DATE >=", value, "date");
            return (Criteria) this;
        }

        public Criteria andDateLessThan(Date value) {
            addCriterionForJDBCDate("DATE <", value, "date");
            return (Criteria) this;
        }

        public Criteria andDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("DATE <=", value, "date");
            return (Criteria) this;
        }

        public Criteria andDateIn(List<Date> values) {
            addCriterionForJDBCDate("DATE in", values, "date");
            return (Criteria) this;
        }

        public Criteria andDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("DATE not in", values, "date");
            return (Criteria) this;
        }

        public Criteria andDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("DATE between", value1, value2, "date");
            return (Criteria) this;
        }

        public Criteria andDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("DATE not between", value1, value2, "date");
            return (Criteria) this;
        }

        public Criteria andTimeIsNull() {
            addCriterion("TIME is null");
            return (Criteria) this;
        }

        public Criteria andTimeIsNotNull() {
            addCriterion("TIME is not null");
            return (Criteria) this;
        }

        public Criteria andTimeEqualTo(Date value) {
            addCriterionForJDBCTime("TIME =", value, "time");
            return (Criteria) this;
        }

        public Criteria andTimeNotEqualTo(Date value) {
            addCriterionForJDBCTime("TIME <>", value, "time");
            return (Criteria) this;
        }

        public Criteria andTimeGreaterThan(Date value) {
            addCriterionForJDBCTime("TIME >", value, "time");
            return (Criteria) this;
        }

        public Criteria andTimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCTime("TIME >=", value, "time");
            return (Criteria) this;
        }

        public Criteria andTimeLessThan(Date value) {
            addCriterionForJDBCTime("TIME <", value, "time");
            return (Criteria) this;
        }

        public Criteria andTimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCTime("TIME <=", value, "time");
            return (Criteria) this;
        }

        public Criteria andTimeIn(List<Date> values) {
            addCriterionForJDBCTime("TIME in", values, "time");
            return (Criteria) this;
        }

        public Criteria andTimeNotIn(List<Date> values) {
            addCriterionForJDBCTime("TIME not in", values, "time");
            return (Criteria) this;
        }

        public Criteria andTimeBetween(Date value1, Date value2) {
            addCriterionForJDBCTime("TIME between", value1, value2, "time");
            return (Criteria) this;
        }

        public Criteria andTimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCTime("TIME not between", value1, value2, "time");
            return (Criteria) this;
        }

        public Criteria andSymbolIsNull() {
            addCriterion("SYMBOL is null");
            return (Criteria) this;
        }

        public Criteria andSymbolIsNotNull() {
            addCriterion("SYMBOL is not null");
            return (Criteria) this;
        }

        public Criteria andSymbolEqualTo(String value) {
            addCriterion("SYMBOL =", value, "symbol");
            return (Criteria) this;
        }

        public Criteria andSymbolNotEqualTo(String value) {
            addCriterion("SYMBOL <>", value, "symbol");
            return (Criteria) this;
        }

        public Criteria andSymbolGreaterThan(String value) {
            addCriterion("SYMBOL >", value, "symbol");
            return (Criteria) this;
        }

        public Criteria andSymbolGreaterThanOrEqualTo(String value) {
            addCriterion("SYMBOL >=", value, "symbol");
            return (Criteria) this;
        }

        public Criteria andSymbolLessThan(String value) {
            addCriterion("SYMBOL <", value, "symbol");
            return (Criteria) this;
        }

        public Criteria andSymbolLessThanOrEqualTo(String value) {
            addCriterion("SYMBOL <=", value, "symbol");
            return (Criteria) this;
        }

        public Criteria andSymbolLike(String value) {
            addCriterion("SYMBOL like", value, "symbol");
            return (Criteria) this;
        }

        public Criteria andSymbolNotLike(String value) {
            addCriterion("SYMBOL not like", value, "symbol");
            return (Criteria) this;
        }

        public Criteria andSymbolIn(List<String> values) {
            addCriterion("SYMBOL in", values, "symbol");
            return (Criteria) this;
        }

        public Criteria andSymbolNotIn(List<String> values) {
            addCriterion("SYMBOL not in", values, "symbol");
            return (Criteria) this;
        }

        public Criteria andSymbolBetween(String value1, String value2) {
            addCriterion("SYMBOL between", value1, value2, "symbol");
            return (Criteria) this;
        }

        public Criteria andSymbolNotBetween(String value1, String value2) {
            addCriterion("SYMBOL not between", value1, value2, "symbol");
            return (Criteria) this;
        }

        public Criteria andSettlementPriceIsNull() {
            addCriterion("SETTLEMENT_PRICE is null");
            return (Criteria) this;
        }

        public Criteria andSettlementPriceIsNotNull() {
            addCriterion("SETTLEMENT_PRICE is not null");
            return (Criteria) this;
        }

        public Criteria andSettlementPriceEqualTo(Double value) {
            addCriterion("SETTLEMENT_PRICE =", value, "settlementPrice");
            return (Criteria) this;
        }

        public Criteria andSettlementPriceNotEqualTo(Double value) {
            addCriterion("SETTLEMENT_PRICE <>", value, "settlementPrice");
            return (Criteria) this;
        }

        public Criteria andSettlementPriceGreaterThan(Double value) {
            addCriterion("SETTLEMENT_PRICE >", value, "settlementPrice");
            return (Criteria) this;
        }

        public Criteria andSettlementPriceGreaterThanOrEqualTo(Double value) {
            addCriterion("SETTLEMENT_PRICE >=", value, "settlementPrice");
            return (Criteria) this;
        }

        public Criteria andSettlementPriceLessThan(Double value) {
            addCriterion("SETTLEMENT_PRICE <", value, "settlementPrice");
            return (Criteria) this;
        }

        public Criteria andSettlementPriceLessThanOrEqualTo(Double value) {
            addCriterion("SETTLEMENT_PRICE <=", value, "settlementPrice");
            return (Criteria) this;
        }

        public Criteria andSettlementPriceIn(List<Double> values) {
            addCriterion("SETTLEMENT_PRICE in", values, "settlementPrice");
            return (Criteria) this;
        }

        public Criteria andSettlementPriceNotIn(List<Double> values) {
            addCriterion("SETTLEMENT_PRICE not in", values, "settlementPrice");
            return (Criteria) this;
        }

        public Criteria andSettlementPriceBetween(Double value1, Double value2) {
            addCriterion("SETTLEMENT_PRICE between", value1, value2, "settlementPrice");
            return (Criteria) this;
        }

        public Criteria andSettlementPriceNotBetween(Double value1, Double value2) {
            addCriterion("SETTLEMENT_PRICE not between", value1, value2, "settlementPrice");
            return (Criteria) this;
        }

        public Criteria andLastSettlementPriceIsNull() {
            addCriterion("LAST_SETTLEMENT_PRICE is null");
            return (Criteria) this;
        }

        public Criteria andLastSettlementPriceIsNotNull() {
            addCriterion("LAST_SETTLEMENT_PRICE is not null");
            return (Criteria) this;
        }

        public Criteria andLastSettlementPriceEqualTo(Double value) {
            addCriterion("LAST_SETTLEMENT_PRICE =", value, "lastSettlementPrice");
            return (Criteria) this;
        }

        public Criteria andLastSettlementPriceNotEqualTo(Double value) {
            addCriterion("LAST_SETTLEMENT_PRICE <>", value, "lastSettlementPrice");
            return (Criteria) this;
        }

        public Criteria andLastSettlementPriceGreaterThan(Double value) {
            addCriterion("LAST_SETTLEMENT_PRICE >", value, "lastSettlementPrice");
            return (Criteria) this;
        }

        public Criteria andLastSettlementPriceGreaterThanOrEqualTo(Double value) {
            addCriterion("LAST_SETTLEMENT_PRICE >=", value, "lastSettlementPrice");
            return (Criteria) this;
        }

        public Criteria andLastSettlementPriceLessThan(Double value) {
            addCriterion("LAST_SETTLEMENT_PRICE <", value, "lastSettlementPrice");
            return (Criteria) this;
        }

        public Criteria andLastSettlementPriceLessThanOrEqualTo(Double value) {
            addCriterion("LAST_SETTLEMENT_PRICE <=", value, "lastSettlementPrice");
            return (Criteria) this;
        }

        public Criteria andLastSettlementPriceIn(List<Double> values) {
            addCriterion("LAST_SETTLEMENT_PRICE in", values, "lastSettlementPrice");
            return (Criteria) this;
        }

        public Criteria andLastSettlementPriceNotIn(List<Double> values) {
            addCriterion("LAST_SETTLEMENT_PRICE not in", values, "lastSettlementPrice");
            return (Criteria) this;
        }

        public Criteria andLastSettlementPriceBetween(Double value1, Double value2) {
            addCriterion("LAST_SETTLEMENT_PRICE between", value1, value2, "lastSettlementPrice");
            return (Criteria) this;
        }

        public Criteria andLastSettlementPriceNotBetween(Double value1, Double value2) {
            addCriterion("LAST_SETTLEMENT_PRICE not between", value1, value2, "lastSettlementPrice");
            return (Criteria) this;
        }

        public Criteria andExchangeIsNull() {
            addCriterion("EXCHANGE is null");
            return (Criteria) this;
        }

        public Criteria andExchangeIsNotNull() {
            addCriterion("EXCHANGE is not null");
            return (Criteria) this;
        }

        public Criteria andExchangeEqualTo(String value) {
            addCriterion("EXCHANGE =", value, "exchange");
            return (Criteria) this;
        }

        public Criteria andExchangeNotEqualTo(String value) {
            addCriterion("EXCHANGE <>", value, "exchange");
            return (Criteria) this;
        }

        public Criteria andExchangeGreaterThan(String value) {
            addCriterion("EXCHANGE >", value, "exchange");
            return (Criteria) this;
        }

        public Criteria andExchangeGreaterThanOrEqualTo(String value) {
            addCriterion("EXCHANGE >=", value, "exchange");
            return (Criteria) this;
        }

        public Criteria andExchangeLessThan(String value) {
            addCriterion("EXCHANGE <", value, "exchange");
            return (Criteria) this;
        }

        public Criteria andExchangeLessThanOrEqualTo(String value) {
            addCriterion("EXCHANGE <=", value, "exchange");
            return (Criteria) this;
        }

        public Criteria andExchangeLike(String value) {
            addCriterion("EXCHANGE like", value, "exchange");
            return (Criteria) this;
        }

        public Criteria andExchangeNotLike(String value) {
            addCriterion("EXCHANGE not like", value, "exchange");
            return (Criteria) this;
        }

        public Criteria andExchangeIn(List<String> values) {
            addCriterion("EXCHANGE in", values, "exchange");
            return (Criteria) this;
        }

        public Criteria andExchangeNotIn(List<String> values) {
            addCriterion("EXCHANGE not in", values, "exchange");
            return (Criteria) this;
        }

        public Criteria andExchangeBetween(String value1, String value2) {
            addCriterion("EXCHANGE between", value1, value2, "exchange");
            return (Criteria) this;
        }

        public Criteria andExchangeNotBetween(String value1, String value2) {
            addCriterion("EXCHANGE not between", value1, value2, "exchange");
            return (Criteria) this;
        }

        public Criteria andCategoryIsNull() {
            addCriterion("CATEGORY is null");
            return (Criteria) this;
        }

        public Criteria andCategoryIsNotNull() {
            addCriterion("CATEGORY is not null");
            return (Criteria) this;
        }

        public Criteria andCategoryEqualTo(String value) {
            addCriterion("CATEGORY =", value, "category");
            return (Criteria) this;
        }

        public Criteria andCategoryNotEqualTo(String value) {
            addCriterion("CATEGORY <>", value, "category");
            return (Criteria) this;
        }

        public Criteria andCategoryGreaterThan(String value) {
            addCriterion("CATEGORY >", value, "category");
            return (Criteria) this;
        }

        public Criteria andCategoryGreaterThanOrEqualTo(String value) {
            addCriterion("CATEGORY >=", value, "category");
            return (Criteria) this;
        }

        public Criteria andCategoryLessThan(String value) {
            addCriterion("CATEGORY <", value, "category");
            return (Criteria) this;
        }

        public Criteria andCategoryLessThanOrEqualTo(String value) {
            addCriterion("CATEGORY <=", value, "category");
            return (Criteria) this;
        }

        public Criteria andCategoryLike(String value) {
            addCriterion("CATEGORY like", value, "category");
            return (Criteria) this;
        }

        public Criteria andCategoryNotLike(String value) {
            addCriterion("CATEGORY not like", value, "category");
            return (Criteria) this;
        }

        public Criteria andCategoryIn(List<String> values) {
            addCriterion("CATEGORY in", values, "category");
            return (Criteria) this;
        }

        public Criteria andCategoryNotIn(List<String> values) {
            addCriterion("CATEGORY not in", values, "category");
            return (Criteria) this;
        }

        public Criteria andCategoryBetween(String value1, String value2) {
            addCriterion("CATEGORY between", value1, value2, "category");
            return (Criteria) this;
        }

        public Criteria andCategoryNotBetween(String value1, String value2) {
            addCriterion("CATEGORY not between", value1, value2, "category");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table FUTURE_QUOTE
     *
     * @mbg.generated do_not_delete_during_merge Tue Aug 07 14:58:26 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table FUTURE_QUOTE
     *
     * @mbg.generated Tue Aug 07 14:58:26 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}